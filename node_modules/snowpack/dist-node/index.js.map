{"version":3,"file":"index.js","sources":["../dist-src/commands/paint.js","../dist-src/commands/src-file-extension-mapping.js","../dist-src/rewrite-imports.js","../dist-src/commands/build-util.js","../dist-src/commands/build.js","../dist-src/util.js","../dist-src/commands/dev.js","../dist-src/config.js","../dist-src/resolve-remote.js","../dist-src/rollup-plugin-entrypoint-alias.js","../dist-src/rollup-plugin-remote-cdn.js","../dist-src/rollup-plugin-stats.js","../dist-src/scan-imports.js","../dist-src/stats-formatter.js","../dist-src/rollup-plugin-react-fix.js","../dist-src/index.js"],"sourcesContent":["import ansiEscapes from 'ansi-escapes';\nimport chalk from 'chalk';\nimport util from 'util';\nfunction getStateString(workerState, isWatch) {\n    if (workerState.state) {\n        if (Array.isArray(workerState.state)) {\n            return chalk[workerState.state[1]](workerState.state[0]);\n        }\n        return chalk.dim(workerState.state);\n    }\n    if (workerState.done) {\n        return workerState.error ? chalk.red('FAILED') : chalk.green('DONE');\n    }\n    if (isWatch) {\n        if (workerState.config.watch) {\n            return chalk.dim('WATCHING');\n        }\n    }\n    return chalk.dim('READY');\n}\nconst WORKER_BASE_STATE = { done: false, error: null, output: '' };\nexport function paint(bus, registeredWorkers, buildMode, devMode) {\n    let consoleOutput = '';\n    let hasBeenCleared = false;\n    let missingWebModule = null;\n    const allWorkerStates = {};\n    for (const [workerId, config] of registeredWorkers) {\n        allWorkerStates[workerId] = { ...WORKER_BASE_STATE, config };\n    }\n    function repaint() {\n        process.stdout.write(ansiEscapes.clearTerminal);\n        process.stdout.write(`${chalk.bold('Snowpack')}\\n\\n`);\n        // Dashboard\n        if (devMode) {\n            process.stdout.write(`  ${chalk.bold.cyan(`http://localhost:${devMode.port}`)}`);\n            for (const ip of devMode.ips) {\n                process.stdout.write(`${chalk.cyan(` > `)}${chalk.bold.cyan(`http://${ip}:${devMode.port}`)}`);\n            }\n            process.stdout.write('\\n' + chalk.dim(`  Server started in ${devMode.startTimeMs}ms.\\n\\n`));\n        }\n        if (buildMode) {\n            process.stdout.write('  ' + chalk.bold.cyan(buildMode.dest));\n            process.stdout.write(chalk.dim(` Building your application...\\n\\n`));\n        }\n        for (const [workerId, config] of registeredWorkers) {\n            const workerState = allWorkerStates[workerId];\n            const dotLength = 24 - workerId.length;\n            const dots = ''.padEnd(dotLength, '.');\n            const stateStr = getStateString(workerState, !!devMode);\n            process.stdout.write(`  ${workerId}${chalk.dim(dots)}[${stateStr}]\\n`);\n        }\n        process.stdout.write('\\n');\n        if (missingWebModule) {\n            let [missingPackageName, ...deepPackagePathParts] = missingWebModule.split('/');\n            if (missingPackageName.startsWith('@')) {\n                missingPackageName += '/' + deepPackagePathParts.shift();\n            }\n            process.stdout.write(`${chalk.red.underline.bold('▼ Snowpack')}\\n\\n`);\n            process.stdout.write(`  Package ${chalk.bold(missingWebModule)} could not be found!\\n`);\n            process.stdout.write(`    1. Make sure that your ${chalk.bold('web_modules/')} directory is mounted correctly.\\n`);\n            process.stdout.write(`    2. Add ${chalk.bold(missingPackageName)} to your package.json \"dependencies\" or \"webDependencies\".\\n`);\n            process.stdout.write(`    3. run ${chalk.bold('snowpack install')} to install your new dependency.\\n`);\n            process.stdout.write('\\n');\n        }\n        for (const [workerId, config] of registeredWorkers) {\n            const workerState = allWorkerStates[workerId];\n            if (workerState && workerState.output) {\n                const chalkFn = Array.isArray(workerState.error) ? chalk.red : chalk;\n                process.stdout.write(`${chalkFn.underline.bold('▼ ' + workerId)}\\n\\n`);\n                process.stdout.write(workerState.output\n                    ? '  ' + workerState.output.trim().replace(/\\n/gm, '\\n  ')\n                    : hasBeenCleared\n                        ? chalk.dim('  Output cleared.')\n                        : chalk.dim('  No output, yet.'));\n                process.stdout.write('\\n\\n');\n            }\n        }\n        if (consoleOutput) {\n            process.stdout.write(`${chalk.underline.bold('▼ Console')}\\n\\n`);\n            process.stdout.write(consoleOutput\n                ? '  ' + consoleOutput.trim().replace(/\\n/gm, '\\n  ')\n                : hasBeenCleared\n                    ? chalk.dim('  Output cleared.')\n                    : chalk.dim('  No output, yet.'));\n            process.stdout.write('\\n\\n');\n        }\n        const overallStatus = Object.values(allWorkerStates).reduce((result, { done, error }) => {\n            return {\n                done: result.done && done,\n                error: result.error || error,\n            };\n        });\n        if (overallStatus.error) {\n            process.stdout.write(`${chalk.underline.red.bold('▼ Result')}\\n\\n`);\n            process.stdout.write('  ⚠️  Finished, with errors.');\n            process.stdout.write('\\n\\n');\n            process.exit(1);\n        }\n        else if (overallStatus.done) {\n            process.stdout.write(`${chalk.underline.green.bold('▶ Build Complete!')}\\n\\n`);\n        }\n    }\n    bus.on('WORKER_MSG', ({ id, msg }) => {\n        allWorkerStates[id].output += msg;\n        repaint();\n    });\n    bus.on('WORKER_UPDATE', ({ id, state }) => {\n        if (typeof state !== undefined) {\n            allWorkerStates[id].state = state;\n        }\n        repaint();\n    });\n    bus.on('WORKER_COMPLETE', ({ id, error }) => {\n        allWorkerStates[id].state = null;\n        allWorkerStates[id].done = true;\n        allWorkerStates[id].error = allWorkerStates[id].error || error;\n        repaint();\n    });\n    bus.on('WORKER_RESET', ({ id }) => {\n        allWorkerStates[id] = { ...WORKER_BASE_STATE, config: allWorkerStates[id].config };\n        repaint();\n    });\n    bus.on('CONSOLE', ({ level, args }) => {\n        consoleOutput += `[${level}] ${util.format.apply(util, args)}\\n`;\n        repaint();\n    });\n    bus.on('NEW_SESSION', () => {\n        missingWebModule = null;\n        if (consoleOutput) {\n            consoleOutput = ``;\n            hasBeenCleared = true;\n            repaint();\n        }\n    });\n    bus.on('MISSING_WEB_MODULE', ({ specifier }) => {\n        missingWebModule = specifier;\n        repaint();\n    });\n    // const rl = readline.createInterface({\n    //   input: process.stdin,\n    //   output: process.stdout,\n    // });\n    // rl.on('line', (input) => {\n    //   for (const [workerId, config] of registeredWorkers) {\n    //     if (!allWorkerStates[workerId].done && !allWorkerStates[workerId].state) {\n    //       allWorkerStates[workerId].output = '';\n    //     }\n    //   }\n    //   hasBeenCleared = true;\n    //   repaint();\n    // });\n    // unmountDashboard = render(<App bus={bus} registeredWorkers={registeredWorkers} />).unmount;\n    repaint();\n}\n","export default {\n    jsx: 'js',\n    ts: 'js',\n    tsx: 'js',\n    vue: 'js',\n    svelte: 'js',\n    php: 'html',\n};\n","const { parse } = require('es-module-lexer');\nfunction spliceString(source, withSlice, start, end) {\n    return source.slice(0, start) + (withSlice || '') + source.slice(end);\n}\nexport async function scanCodeImportsExports(code) {\n    const [imports] = await parse(code);\n    return imports.filter((imp) => {\n        //imp.d = -2 = import.meta.url = we can skip this for now\n        if (imp.d === -2) {\n            return false;\n        }\n        // imp.d > -1 === dynamic import\n        if (imp.d > -1) {\n            const importStatement = code.substring(imp.s, imp.e);\n            const importSpecifierMatch = importStatement.match(/^\\s*['\"](.*)['\"]\\s*$/m);\n            return !!importSpecifierMatch;\n        }\n        return true;\n    });\n}\nexport async function transformEsmImports(_code, replaceImport) {\n    const imports = await scanCodeImportsExports(_code);\n    let rewrittenCode = _code;\n    for (const imp of imports.reverse()) {\n        let spec = rewrittenCode.substring(imp.s, imp.e);\n        if (imp.d > -1) {\n            const importSpecifierMatch = spec.match(/^\\s*['\"](.*)['\"]\\s*$/m);\n            spec = importSpecifierMatch[1];\n        }\n        let rewrittenImport = replaceImport(spec);\n        if (imp.d > -1) {\n            rewrittenImport = JSON.stringify(rewrittenImport);\n        }\n        rewrittenCode = spliceString(rewrittenCode, rewrittenImport, imp.s, imp.e);\n    }\n    return rewrittenCode;\n}\n","export function wrapEsmProxyResponse(url, code, ext, hasHmr = false) {\n    if (ext === '.css') {\n        return `\n    const styleEl = document.createElement(\"style\");\n    styleEl.type = 'text/css';\n    styleEl.appendChild(document.createTextNode(${JSON.stringify(code)}));\n    document.head.appendChild(styleEl);\n    ${hasHmr\n            ? `\n    import {apply} from '/web_modules/@snowpack/hmr.js';\n    apply(${JSON.stringify(url)}, ({code}) => {\n      styleEl.innerHtml = '';\n      styleEl.appendChild(document.createTextNode(code));\n    });\n    `\n            : ''}\n  `;\n    }\n    return `export default ${JSON.stringify(url)};`;\n}\n","import chalk from 'chalk';\nimport { EventEmitter } from 'events';\nimport execa from 'execa';\nimport npmRunPath from 'npm-run-path';\nimport path from 'path';\nimport { promises as fs, createReadStream } from 'fs';\nimport glob from 'glob';\nimport { paint } from './paint';\nimport rimraf from 'rimraf';\nimport yargs from 'yargs-parser';\nimport srcFileExtensionMapping from './src-file-extension-mapping';\nimport { transformEsmImports } from '../rewrite-imports';\nimport mkdirp from 'mkdirp';\nimport { wrapEsmProxyResponse } from './build-util';\nconst { copy } = require('fs-extra');\nexport async function command({ cwd, config }) {\n    process.env.NODE_ENV = 'production';\n    const messageBus = new EventEmitter();\n    const allRegisteredWorkers = Object.entries(config.scripts);\n    const relevantWorkers = [];\n    const allBuildExtensions = [];\n    const allWorkerPromises = [];\n    const dependencyImportMapLoc = path.join(config.installOptions.dest, 'import-map.json');\n    let dependencyImportMap = { imports: {} };\n    try {\n        dependencyImportMap = require(dependencyImportMapLoc);\n    }\n    catch (err) {\n        // no import-map found, safe to ignore\n    }\n    let isBundled = config.devOptions.bundle;\n    const isBundledHardcoded = isBundled !== undefined;\n    if (!isBundledHardcoded) {\n        try {\n            require.resolve('parcel-bundler', { paths: [cwd] });\n            isBundled = true;\n        }\n        catch (err) {\n            isBundled = false;\n        }\n    }\n    const buildDirectoryLoc = isBundled ? path.join(cwd, `.build`) : config.devOptions.out;\n    const finalDirectoryLoc = config.devOptions.out;\n    if (allRegisteredWorkers.length === 0) {\n        console.error(chalk.red(`No build scripts found, so nothing to build.`));\n        console.error(`See https://www.snowpack.dev/#build-scripts for help getting started.`);\n        return;\n    }\n    const mountedDirectories = [];\n    for (const [id, workerConfig] of allRegisteredWorkers) {\n        if (!id.startsWith('mount:')) {\n            continue;\n        }\n        const cmdArr = workerConfig.cmd.split(/\\s+/);\n        if (cmdArr[0] !== 'mount') {\n            throw new Error(`script[${id}] must use the mount command`);\n        }\n        cmdArr.shift();\n        let dirUrl, dirDisk;\n        dirDisk = path.resolve(cwd, cmdArr[0]);\n        if (cmdArr.length === 1) {\n            dirUrl = cmdArr[0];\n        }\n        else {\n            const { to } = yargs(cmdArr);\n            dirUrl = to;\n        }\n        mountedDirectories.push([dirDisk, dirUrl]);\n    }\n    rimraf.sync(finalDirectoryLoc);\n    mkdirp.sync(finalDirectoryLoc);\n    if (finalDirectoryLoc !== buildDirectoryLoc) {\n        rimraf.sync(buildDirectoryLoc);\n        mkdirp.sync(buildDirectoryLoc);\n    }\n    // const extToWorkerMap: {[ext: string]: any[]} = {};\n    for (const [id, workerConfig] of allRegisteredWorkers) {\n        if (id.startsWith('build:') ||\n            id.startsWith('plugin:') ||\n            id.startsWith('lintall:') ||\n            id.startsWith('mount:')) {\n            relevantWorkers.push([id, workerConfig]);\n        }\n        if (id.startsWith('build:') || id.startsWith('plugin:')) {\n            const ext = id.split(':')[1];\n            allBuildExtensions.push(ext); // for (const ext of exts) {\n            // extToWorkerMap[ext] = extToWorkerMap[ext] || [];\n            // extToWorkerMap[ext].push([id, workerConfig]);\n            // }\n        }\n    }\n    relevantWorkers.push(['bundle:*', { cmd: 'NA', watch: undefined }]);\n    console.log = (...args) => {\n        messageBus.emit('CONSOLE', { level: 'log', args });\n    };\n    console.warn = (...args) => {\n        messageBus.emit('CONSOLE', { level: 'warn', args });\n    };\n    console.error = (...args) => {\n        messageBus.emit('CONSOLE', { level: 'error', args });\n    };\n    let relDest = path.relative(cwd, config.devOptions.out);\n    if (!relDest.startsWith(`..${path.sep}`)) {\n        relDest = `.${path.sep}` + relDest;\n    }\n    paint(messageBus, relevantWorkers, { dest: relDest }, undefined);\n    if (!isBundled) {\n        messageBus.emit('WORKER_UPDATE', {\n            id: 'bundle:*',\n            state: ['SKIP', 'dim'],\n        });\n    }\n    for (const [id, workerConfig] of relevantWorkers) {\n        if (!id.startsWith('lintall:')) {\n            continue;\n        }\n        messageBus.emit('WORKER_UPDATE', { id, state: ['RUNNING', 'yellow'] });\n        const workerPromise = execa.command(workerConfig.cmd, {\n            env: npmRunPath.env(),\n            extendEnv: true,\n            shell: true,\n            cwd,\n        });\n        allWorkerPromises.push(workerPromise);\n        workerPromise.catch((err) => {\n            messageBus.emit('WORKER_MSG', { id, level: 'error', msg: err.toString() });\n            messageBus.emit('WORKER_COMPLETE', { id, error: err });\n        });\n        workerPromise.then(() => {\n            messageBus.emit('WORKER_COMPLETE', { id, error: null });\n        });\n        const { stdout, stderr } = workerPromise;\n        stdout?.on('data', (b) => {\n            let stdOutput = b.toString();\n            if (stdOutput.includes('\\u001bc') || stdOutput.includes('\\x1Bc')) {\n                messageBus.emit('WORKER_RESET', { id });\n                stdOutput = stdOutput.replace(/\\x1Bc/, '').replace(/\\u001bc/, '');\n            }\n            if (id.endsWith(':tsc')) {\n                if (stdOutput.includes('\\u001bc') || stdOutput.includes('\\x1Bc')) {\n                    messageBus.emit('WORKER_UPDATE', { id, state: ['RUNNING', 'yellow'] });\n                }\n                if (/Watching for file changes./gm.test(stdOutput)) {\n                    messageBus.emit('WORKER_UPDATE', { id, state: 'WATCHING' });\n                }\n                const errorMatch = stdOutput.match(/Found (\\d+) error/);\n                if (errorMatch && errorMatch[1] !== '0') {\n                    messageBus.emit('WORKER_UPDATE', { id, state: ['ERROR', 'red'] });\n                }\n            }\n            messageBus.emit('WORKER_MSG', { id, level: 'log', msg: stdOutput });\n        });\n        stderr?.on('data', (b) => {\n            messageBus.emit('WORKER_MSG', { id, level: 'error', msg: b.toString() });\n        });\n    }\n    const mountDirDetails = relevantWorkers\n        .map(([id, scriptConfig]) => {\n        if (!id.startsWith('mount:')) {\n            return false;\n        }\n        const cmdArr = scriptConfig.cmd.split(/\\s+/);\n        if (cmdArr[0] !== 'mount') {\n            throw new Error(`script[${id}] must use the mount command`);\n        }\n        cmdArr.shift();\n        let dirDest, dirDisk;\n        dirDisk = path.resolve(cwd, cmdArr[0]);\n        if (cmdArr.length === 1) {\n            dirDest = path.resolve(buildDirectoryLoc, cmdArr[0]);\n        }\n        else {\n            const { to } = yargs(cmdArr);\n            dirDest = path.resolve(buildDirectoryLoc, to);\n        }\n        return [id, dirDisk, dirDest];\n    })\n        .filter(Boolean);\n    const includeFileSets = [];\n    for (const [id, dirDisk, dirDest] of mountDirDetails) {\n        messageBus.emit('WORKER_UPDATE', { id, state: ['RUNNING', 'yellow'] });\n        let allFiles;\n        try {\n            allFiles = glob.sync(`**/*`, {\n                ignore: config.exclude,\n                cwd: dirDisk,\n                absolute: true,\n                nodir: true,\n                dot: true,\n            });\n            const allBuildNeededFiles = [];\n            await Promise.all(allFiles.map(async (f) => {\n                f = path.resolve(f); // this is necessary since glob.sync() returns paths with / on windows.  path.resolve() will switch them to the native path separator.\n                if (allBuildExtensions.includes(path.extname(f).substr(1))) {\n                    allBuildNeededFiles.push(f);\n                    return;\n                }\n                const outPath = f.replace(dirDisk, dirDest);\n                mkdirp.sync(path.dirname(outPath));\n                if (path.extname(f) !== '.js') {\n                    return fs.copyFile(f, outPath);\n                }\n                let code = await fs.readFile(f, { encoding: 'utf-8' });\n                code = await transformEsmImports(code, (spec) => {\n                    if (spec.startsWith('http')) {\n                        return spec;\n                    }\n                    if (spec.startsWith('/') || spec.startsWith('./') || spec.startsWith('../')) {\n                        const ext = path.extname(spec).substr(1);\n                        if (!ext) {\n                            return spec + '.js';\n                        }\n                        const extToReplace = srcFileExtensionMapping[ext];\n                        if (extToReplace) {\n                            spec = spec.replace(new RegExp(`${ext}$`), extToReplace);\n                        }\n                        if (!isBundled && (extToReplace || ext) !== 'js') {\n                            const resolvedUrl = path.resolve(path.dirname(outPath), spec);\n                            allProxiedFiles.add(resolvedUrl);\n                            spec = spec + '.proxy.js';\n                        }\n                        return spec;\n                    }\n                    if (dependencyImportMap.imports[spec]) {\n                        return path.posix.resolve(`/web_modules`, dependencyImportMap.imports[spec]);\n                    }\n                    messageBus.emit('MISSING_WEB_MODULE', { specifier: spec });\n                    return `/web_modules/${spec}.js`;\n                });\n                return fs.writeFile(outPath, code);\n            }));\n            includeFileSets.push([dirDisk, dirDest, allBuildNeededFiles]);\n            messageBus.emit('WORKER_COMPLETE', { id });\n        }\n        catch (err) {\n            messageBus.emit('WORKER_MSG', { id, level: 'error', msg: err.toString() });\n            messageBus.emit('WORKER_COMPLETE', { id, error: err });\n        }\n    }\n    const allBuiltFromFiles = new Set();\n    const allProxiedFiles = new Set();\n    for (const [id, workerConfig] of relevantWorkers) {\n        if (!id.startsWith('build:') && !id.startsWith('plugin:')) {\n            continue;\n        }\n        messageBus.emit('WORKER_UPDATE', { id, state: ['RUNNING', 'yellow'] });\n        for (const [dirDisk, dirDest, allFiles] of includeFileSets) {\n            for (const f of allFiles) {\n                const fileExtension = path.extname(f).substr(1);\n                if (!id.includes(`:${fileExtension}`) && !id.includes(`,${fileExtension}`)) {\n                    continue;\n                }\n                let { cmd } = workerConfig;\n                if (id.startsWith('build:')) {\n                    cmd = cmd.replace('$FILE', f);\n                    const { stdout, stderr } = await execa.command(cmd, {\n                        env: npmRunPath.env(),\n                        extendEnv: true,\n                        shell: true,\n                        cwd,\n                        input: createReadStream(f),\n                    });\n                    if (stderr) {\n                        console.error(stderr);\n                    }\n                    if (!stdout) {\n                        continue;\n                    }\n                    let outPath = f.replace(dirDisk, dirDest);\n                    const extToFind = path.extname(f).substr(1);\n                    const extToReplace = srcFileExtensionMapping[extToFind];\n                    if (extToReplace) {\n                        outPath = outPath.replace(new RegExp(`${extToFind}$`), extToReplace);\n                    }\n                    let code = stdout;\n                    if (path.extname(outPath) === '.js') {\n                        code = await transformEsmImports(code, (spec) => {\n                            if (spec.startsWith('http')) {\n                                return spec;\n                            }\n                            if (spec.startsWith('/') || spec.startsWith('./') || spec.startsWith('../')) {\n                                const ext = path.extname(spec).substr(1);\n                                if (!ext) {\n                                    return spec + '.js';\n                                }\n                                const extToReplace = srcFileExtensionMapping[ext];\n                                if (extToReplace) {\n                                    spec = spec.replace(new RegExp(`${ext}$`), extToReplace);\n                                }\n                                if (!isBundled && (extToReplace || ext) !== 'js') {\n                                    const resolvedUrl = path.resolve(path.dirname(outPath), spec);\n                                    allProxiedFiles.add(resolvedUrl);\n                                    spec = spec + '.proxy.js';\n                                }\n                                return spec;\n                            }\n                            if (dependencyImportMap.imports[spec]) {\n                                return path.posix.resolve(`/web_modules`, dependencyImportMap.imports[spec]);\n                            }\n                            messageBus.emit('MISSING_WEB_MODULE', { specifier: spec });\n                            return `/web_modules/${spec}.js`;\n                        });\n                    }\n                    await fs.mkdir(path.dirname(outPath), { recursive: true });\n                    await fs.writeFile(outPath, code);\n                    allBuiltFromFiles.add(f);\n                }\n                if (id.startsWith('plugin:')) {\n                    const modulePath = require.resolve(cmd, { paths: [cwd] });\n                    const { build } = require(modulePath);\n                    try {\n                        var { result } = await build(f);\n                    }\n                    catch (err) {\n                        err.message = `[${id}] ${err.message}`;\n                        console.error(err);\n                        messageBus.emit('WORKER_COMPLETE', { id, error: err });\n                        continue;\n                    }\n                    let outPath = f.replace(dirDisk, dirDest);\n                    const extToFind = path.extname(f).substr(1);\n                    const extToReplace = srcFileExtensionMapping[extToFind];\n                    if (extToReplace) {\n                        outPath = outPath.replace(new RegExp(`${extToFind}$`), extToReplace);\n                    }\n                    let code = result;\n                    if (path.extname(outPath) === '.js') {\n                        code = await transformEsmImports(code, (spec) => {\n                            if (spec.startsWith('http')) {\n                                return spec;\n                            }\n                            if (spec.startsWith('/') || spec.startsWith('./') || spec.startsWith('../')) {\n                                const ext = path.extname(spec).substr(1);\n                                if (!ext) {\n                                    return spec + '.js';\n                                }\n                                const extToReplace = srcFileExtensionMapping[ext];\n                                if (extToReplace) {\n                                    spec = spec.replace(new RegExp(`${ext}$`), extToReplace);\n                                }\n                                if ((extToReplace || ext) !== 'js') {\n                                    const resolvedUrl = path.resolve(path.dirname(outPath), spec);\n                                    allProxiedFiles.add(resolvedUrl);\n                                    spec = spec + '.proxy.js';\n                                }\n                                return spec;\n                            }\n                            if (dependencyImportMap.imports[spec]) {\n                                return path.posix.resolve(`/web_modules`, dependencyImportMap.imports[spec]);\n                            }\n                            messageBus.emit('MISSING_WEB_MODULE', { specifier: spec });\n                            return `/web_modules/${spec}.js`;\n                        });\n                    }\n                    await fs.mkdir(path.dirname(outPath), { recursive: true });\n                    await fs.writeFile(outPath, code);\n                }\n            }\n        }\n        messageBus.emit('WORKER_COMPLETE', { id, error: null });\n    }\n    await Promise.all(allWorkerPromises);\n    for (const proxiedFileLoc of allProxiedFiles) {\n        const proxiedCode = await fs.readFile(proxiedFileLoc, { encoding: 'utf8' });\n        const proxiedExt = path.extname(proxiedFileLoc);\n        const proxiedUrl = proxiedFileLoc.substr(buildDirectoryLoc.length);\n        const proxyCode = wrapEsmProxyResponse(proxiedUrl, proxiedCode, proxiedExt);\n        const proxyFileLoc = proxiedFileLoc + '.proxy.js';\n        await fs.writeFile(proxyFileLoc, proxyCode, { encoding: 'utf8' });\n    }\n    if (!isBundled) {\n        messageBus.emit('WORKER_COMPLETE', { id: 'bundle:*', error: null });\n        messageBus.emit('WORKER_UPDATE', {\n            id: 'bundle:*',\n            state: ['SKIP', isBundledHardcoded ? 'dim' : 'yellow'],\n        });\n        if (!isBundledHardcoded) {\n            messageBus.emit('WORKER_MSG', {\n                id: 'bundle:*',\n                level: 'log',\n                msg: `npm install --save-dev parcel-bundler \\n\\nInstall Parcel into your project to bundle for production.\\nSet \"devOptions.bundle = false\" to remove this message.`,\n            });\n        }\n    }\n    else {\n        messageBus.emit('WORKER_UPDATE', { id: 'bundle:*', state: ['RUNNING', 'yellow'] });\n        async function prepareBuildDirectoryForParcel() {\n            // Prepare the new build directory by copying over all static assets\n            // This is important since sometimes Parcel doesn't pick these up.\n            await copy(buildDirectoryLoc, finalDirectoryLoc, {\n                filter: (srcLoc) => {\n                    return !allBuiltFromFiles.has(srcLoc);\n                },\n            }).catch((err) => {\n                messageBus.emit('WORKER_MSG', { id: 'bundle:*', level: 'error', msg: err.toString() });\n                messageBus.emit('WORKER_COMPLETE', { id: 'bundle:*', error: err });\n                throw err;\n            });\n            const tempBuildManifest = JSON.parse(await fs.readFile(path.join(cwd, 'package.json'), { encoding: 'utf-8' }));\n            delete tempBuildManifest.name;\n            delete tempBuildManifest.babel;\n            tempBuildManifest.devDependencies = tempBuildManifest.devDependencies || {};\n            tempBuildManifest.devDependencies['@babel/core'] =\n                tempBuildManifest.devDependencies['@babel/core'] || '^7.9.0';\n            tempBuildManifest.browserslist =\n                tempBuildManifest.browserslist || '>0.75%, not ie 11, not UCAndroid >0, not OperaMini all';\n            await fs.writeFile(path.join(buildDirectoryLoc, 'package.json'), JSON.stringify(tempBuildManifest, null, 2));\n            await fs.writeFile(path.join(buildDirectoryLoc, '.babelrc'), `{\"plugins\": [[${JSON.stringify(require.resolve('@babel/plugin-syntax-import-meta'))}]]}`);\n            const fallbackFile = await fs.readFile(path.join(buildDirectoryLoc, config.devOptions.fallback), { encoding: 'utf-8' });\n            await fs.writeFile(path.join(buildDirectoryLoc, config.devOptions.fallback), fallbackFile.replace(/type\\=\\\"module\\\"/g, ''));\n            // Remove PostCSS config since it's no longer needed. Parcel does its own optimization.\n            rimraf.sync(path.join(buildDirectoryLoc, 'postcss.config.js'));\n            rimraf.sync(path.join(buildDirectoryLoc, '.postcssrc'));\n            rimraf.sync(path.join(buildDirectoryLoc, '.postcssrc.js'));\n        }\n        await prepareBuildDirectoryForParcel();\n        const parcelOptions = ['build', config.devOptions.fallback, '--out-dir', finalDirectoryLoc];\n        if (config.homepage) {\n            parcelOptions.push('--public-url', config.homepage);\n        }\n        const bundleAppPromise = execa('parcel', parcelOptions, {\n            cwd: buildDirectoryLoc,\n            env: npmRunPath.env(),\n            extendEnv: true,\n        });\n        bundleAppPromise.stdout?.on('data', (b) => {\n            messageBus.emit('WORKER_MSG', { id: 'bundle:*', level: 'log', msg: b.toString() });\n        });\n        bundleAppPromise.stderr?.on('data', (b) => {\n            messageBus.emit('WORKER_MSG', { id: 'bundle:*', level: 'log', msg: b.toString() });\n        });\n        bundleAppPromise.catch((err) => {\n            messageBus.emit('WORKER_MSG', { id: 'bundle:*', level: 'error', msg: err.toString() });\n            messageBus.emit('WORKER_COMPLETE', { id: 'bundle:*', error: err });\n        });\n        bundleAppPromise.then(() => {\n            messageBus.emit('WORKER_COMPLETE', { id: 'bundle:*', error: null });\n        });\n        await bundleAppPromise;\n    }\n    if (finalDirectoryLoc !== buildDirectoryLoc) {\n        rimraf.sync(buildDirectoryLoc);\n    }\n}\n","import fs from 'fs';\nimport path from 'path';\nimport got from 'got';\nimport cachedir from 'cachedir';\nexport const PIKA_CDN = `https://cdn.pika.dev`;\nexport const CACHE_DIR = cachedir('snowpack');\nexport const RESOURCE_CACHE = path.join(CACHE_DIR, 'pkg-cache-1.4');\nexport const BUILD_CACHE = path.join(CACHE_DIR, 'build-cache-1.4');\nexport const HAS_CDN_HASH_REGEX = /\\-[a-zA-Z0-9]{16,}/;\nexport async function readLockfile(cwd) {\n    try {\n        var lockfileContents = fs.readFileSync(path.join(cwd, 'snowpack.lock.json'), {\n            encoding: 'utf8',\n        });\n    }\n    catch (err) {\n        // no lockfile found, ignore and continue\n        return null;\n    }\n    // If this fails, we actually do want to alert the user by throwing\n    return JSON.parse(lockfileContents);\n}\nexport async function writeLockfile(loc, importMap) {\n    const sortedImportMap = { imports: {} };\n    for (const key of Object.keys(importMap.imports).sort()) {\n        sortedImportMap.imports[key] = importMap.imports[key];\n    }\n    fs.writeFileSync(loc, JSON.stringify(sortedImportMap, undefined, 2), { encoding: 'utf8' });\n}\nexport function fetchCDNResource(resourceUrl, responseType) {\n    if (!resourceUrl.startsWith(PIKA_CDN)) {\n        resourceUrl = PIKA_CDN + resourceUrl;\n    }\n    // @ts-ignore - TS doesn't like responseType being unknown amount three options\n    return got(resourceUrl, {\n        responseType: responseType,\n        headers: { 'user-agent': `snowpack/v1.4 (https://snowpack.dev)` },\n        throwHttpErrors: false,\n    });\n}\nexport function isTruthy(item) {\n    return Boolean(item);\n}\n/**\n * Given a package name, look for that package's package.json manifest.\n * Return both the manifest location (if believed to exist) and the\n * manifest itself (if found).\n *\n * NOTE: You used to be able to require() a package.json file directly,\n * but now with export map support in Node v13 that's no longer possible.\n */\nexport function resolveDependencyManifest(dep, cwd) {\n    // Attempt #1: Resolve the dependency manifest normally. This works for most\n    // packages, but fails when the package defines an export map that doesn't\n    // include a package.json. If we detect that to be the reason for failure,\n    // move on to our custom implementation.\n    try {\n        const depManifest = require.resolve(`${dep}/package.json`, { paths: [cwd] });\n        return [depManifest, require(depManifest)];\n    }\n    catch (err) {\n        // if its an export map issue, move on to our manual resolver.\n        if (err.code !== 'ERR_PACKAGE_PATH_NOT_EXPORTED') {\n            throw new Error(`Cannot resolve \"${dep}/package.json\" via \"${cwd}\".`);\n        }\n    }\n    // Attempt #2: Resolve the dependency manifest manually. This involves resolving\n    // the dep itself to find the entrypoint file, and then haphazardly replacing the\n    // file path within the package with a \"./package.json\" instead. It's not as\n    // thorough as Attempt #1, but it should work well until export maps become more\n    // established & move out of experimental mode.\n    let result = [null, null];\n    try {\n        const fullPath = require.resolve(dep, { paths: [cwd] });\n        // Strip everything after the package name to get the package root path\n        // NOTE: This find-replace is very gross, replace with something like upath.\n        const searchPath = `${path.sep}node_modules${path.sep}${dep.replace('/', path.sep)}`;\n        const indexOfSearch = fullPath.lastIndexOf(searchPath);\n        if (indexOfSearch >= 0) {\n            const manifestPath = fullPath.substring(0, indexOfSearch + searchPath.length + 1) + 'package.json';\n            result[0] = manifestPath;\n            const manifestStr = fs.readFileSync(manifestPath, { encoding: 'utf8' });\n            result[1] = JSON.parse(manifestStr);\n        }\n    }\n    catch (err) {\n        // ignore\n    }\n    finally {\n        return result;\n    }\n}\n/**\n * If Rollup erred parsing a particular file, show suggestions based on its\n * file extension (note: lowercase is fine).\n */\nexport const MISSING_PLUGIN_SUGGESTIONS = {\n    '.css': 'Try installing rollup-plugin-postcss and adding it to Snowpack (https://www.snowpack.dev/#custom-rollup-plugins)',\n    '.svelte': 'Try installing rollup-plugin-svelte and adding it to Snowpack (https://www.snowpack.dev/#custom-rollup-plugins)',\n    '.vue': 'Try installing rollup-plugin-vue and adding it to Snowpack (https://www.snowpack.dev/#custom-rollup-plugins)',\n};\n","/**\n * This license applies to parts of this file originating from the\n * https://github.com/lukejacksonn/servor repository:\n *\n * MIT License\n * Copyright (c) 2019 Luke Jackson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport chalk from 'chalk';\nimport etag from 'etag';\nimport { EventEmitter } from 'events';\nimport execa from 'execa';\nimport { promises as fs } from 'fs';\nimport http from 'http';\nimport chokidar from 'chokidar';\nimport mime from 'mime-types';\nimport npmRunPath from 'npm-run-path';\nimport path from 'path';\nimport url from 'url';\nimport os from 'os';\nimport { paint } from './paint';\nimport yargs from 'yargs-parser';\nimport srcFileExtensionMapping from './src-file-extension-mapping';\nimport { transformEsmImports } from '../rewrite-imports';\nimport { BUILD_CACHE } from '../util';\nimport cacache from 'cacache';\nimport { wrapEsmProxyResponse } from './build-util';\nfunction getEncodingType(ext) {\n    if (ext === '.js' || ext === '.css' || ext === '.html') {\n        return 'utf8';\n    }\n    else {\n        return 'binary';\n    }\n}\nconst sendFile = (req, res, body, ext = '.html') => {\n    res.writeHead(200, {\n        'Content-Type': mime.contentType(ext) || 'application/octet-stream',\n        'Access-Control-Allow-Origin': '*',\n    });\n    res.write(body, getEncodingType(ext));\n    res.end();\n};\nconst sendError = (res, status) => {\n    res.writeHead(status);\n    res.end();\n};\nconst sendMessage = (res, channel, data) => {\n    res.write(`event: ${channel}\\nid: 0\\ndata: ${data}\\n`);\n    res.write('\\n\\n');\n};\nexport async function command({ cwd, config }) {\n    console.log(chalk.bold('Snowpack Dev Server (Beta)'));\n    console.log('NOTE: Still experimental, default behavior may change.');\n    console.log('Starting up...');\n    const { port } = config.devOptions;\n    // WHY 2???\n    let inMemoryBuildCache = new Map();\n    const filesBeingDeleted = new Set();\n    const filesBeingBuilt = new Map();\n    const liveReloadClients = [];\n    const messageBus = new EventEmitter();\n    const serverStart = Date.now();\n    const hmrCode = await fs.readFile(path.join(__dirname, '../assets/hmr.js'));\n    const dependencyImportMapLoc = path.join(config.installOptions.dest, 'import-map.json');\n    let dependencyImportMap = { imports: {} };\n    try {\n        dependencyImportMap = require(dependencyImportMapLoc);\n    }\n    catch (err) {\n        // no import-map found, safe to ignore\n    }\n    const registeredWorkers = Object.entries(config.scripts);\n    // const workerDirectories: string[] = [];\n    const mountedDirectories = [];\n    const broadcastMessage = (channel, data) => {\n        for (const client of liveReloadClients) {\n            sendMessage(client, channel, data);\n        }\n    };\n    for (const [id, workerConfig] of registeredWorkers) {\n        if (!id.startsWith('mount:')) {\n            continue;\n        }\n        const cmdArr = workerConfig.cmd.split(/\\s+/);\n        if (cmdArr[0] !== 'mount') {\n            throw new Error(`script[${id}] must use the mount command`);\n        }\n        cmdArr.shift();\n        let dirUrl, dirDisk;\n        dirDisk = path.resolve(cwd, cmdArr[0]);\n        if (cmdArr.length === 1) {\n            dirUrl = cmdArr[0];\n        }\n        else {\n            const { to } = yargs(cmdArr);\n            dirUrl = to;\n        }\n        mountedDirectories.push([dirDisk, dirUrl]);\n        setTimeout(() => messageBus.emit('WORKER_UPDATE', { id, state: ['DONE', 'green'] }), 400);\n    }\n    for (const [id, workerConfig] of registeredWorkers) {\n        let { cmd } = workerConfig;\n        if (!id.startsWith('lintall:')) {\n            continue;\n        }\n        if (workerConfig.watch) {\n            cmd += workerConfig.watch.replace('$1', '');\n        }\n        // const tempBuildDir = await fs.mkdtemp(path.join(os.tmpdir(), `snowpack-${id}`));\n        // workerDirectories.unshift(tempBuildDir);\n        // cmd = cmd.replace(/\\$DIST/g, tempBuildDir);\n        const workerPromise = execa.command(cmd, {\n            env: npmRunPath.env(),\n            extendEnv: true,\n            shell: true,\n            cwd,\n        });\n        const { stdout, stderr } = workerPromise;\n        stdout?.on('data', (b) => {\n            let stdOutput = b.toString();\n            if (stdOutput.includes('\\u001bc') || stdOutput.includes('\\x1Bc')) {\n                messageBus.emit('WORKER_RESET', { id });\n                stdOutput = stdOutput.replace(/\\x1Bc/, '').replace(/\\u001bc/, '');\n            }\n            if (id.endsWith(':tsc')) {\n                if (stdOutput.includes('\\u001bc') || stdOutput.includes('\\x1Bc')) {\n                    messageBus.emit('WORKER_UPDATE', { id, state: ['RUNNING', 'yellow'] });\n                }\n                if (/Watching for file changes./gm.test(stdOutput)) {\n                    messageBus.emit('WORKER_UPDATE', { id, state: 'WATCHING' });\n                }\n                const errorMatch = stdOutput.match(/Found (\\d+) error/);\n                if (errorMatch && errorMatch[1] !== '0') {\n                    messageBus.emit('WORKER_UPDATE', { id, state: ['ERROR', 'red'] });\n                }\n            }\n            messageBus.emit('WORKER_MSG', { id, level: 'log', msg: stdOutput });\n        });\n        stderr?.on('data', (b) => {\n            messageBus.emit('WORKER_MSG', { id, level: 'error', msg: b.toString() });\n        });\n        stderr?.on('data', (b) => { });\n        workerPromise.catch((err) => {\n            messageBus.emit('WORKER_COMPLETE', { id, error: err });\n        });\n        workerPromise.then(() => {\n            messageBus.emit('WORKER_COMPLETE', { id, error: null });\n        });\n    }\n    function getUrlFromFile(fileLoc) {\n        for (const [dirDisk, dirUrl] of mountedDirectories) {\n            if (fileLoc.startsWith(dirDisk + path.sep)) {\n                const fileExt = path.extname(fileLoc).substr(1);\n                const resolvedDirUrl = dirUrl === '.' ? '' : '/' + dirUrl;\n                return fileLoc\n                    .replace(dirDisk, resolvedDirUrl)\n                    .replace(/[/\\\\]+/g, '/')\n                    .replace(new RegExp(`${fileExt}$`), srcFileExtensionMapping[fileExt] || fileExt);\n            }\n        }\n        return null;\n    }\n    async function buildFile(fileContents, fileLoc, fileBuilder) {\n        if (fileBuilder) {\n            let fileBuilderPromise = filesBeingBuilt.get(fileLoc);\n            if (!fileBuilderPromise) {\n                fileBuilderPromise = fileBuilder(fileContents, { filename: fileLoc });\n                filesBeingBuilt.set(fileLoc, fileBuilderPromise);\n            }\n            fileContents = await fileBuilderPromise;\n            filesBeingBuilt.delete(fileLoc);\n        }\n        const ext = path.extname(fileLoc).substr(1);\n        if (ext === 'js' || srcFileExtensionMapping[ext] === 'js') {\n            fileContents = await transformEsmImports(fileContents, (spec) => {\n                if (spec.startsWith('http')) {\n                    return spec;\n                }\n                if (spec.startsWith('/') || spec.startsWith('./') || spec.startsWith('../')) {\n                    const ext = path.extname(spec).substr(1);\n                    if (!ext) {\n                        return spec + '.js';\n                    }\n                    const extToReplace = srcFileExtensionMapping[ext];\n                    if (extToReplace) {\n                        spec = spec.replace(new RegExp(`${ext}$`), extToReplace);\n                    }\n                    if ((extToReplace || ext) !== 'js') {\n                        spec = spec + '.proxy.js';\n                    }\n                    return spec;\n                }\n                if (dependencyImportMap.imports[spec]) {\n                    return path.posix.resolve(`/web_modules`, dependencyImportMap.imports[spec]);\n                }\n                messageBus.emit('MISSING_WEB_MODULE', { specifier: spec });\n                return `/web_modules/${spec}.js`;\n            });\n        }\n        return fileContents;\n    }\n    function getFileBuilderForWorker(fileLoc, selectedWorker) {\n        const [id, { cmd }] = selectedWorker;\n        if (id.startsWith('plugin:')) {\n            const modulePath = require.resolve(cmd, { paths: [cwd] });\n            const { build } = require(modulePath);\n            return async (code, options) => {\n                messageBus.emit('WORKER_UPDATE', { id, state: ['RUNNING', 'yellow'] });\n                try {\n                    let { result } = await build(fileLoc);\n                    return result;\n                }\n                catch (err) {\n                    err.message = `[${id}] ${err.message}`;\n                    console.error(err);\n                    return '';\n                }\n                finally {\n                    messageBus.emit('WORKER_UPDATE', { id, state: null });\n                }\n            };\n        }\n        if (id.startsWith('build:')) {\n            return async (code, options) => {\n                messageBus.emit('WORKER_UPDATE', { id, state: ['RUNNING', 'yellow'] });\n                let cmdWithFile = cmd.replace('$FILE', options.filename);\n                const { stdout, stderr } = await execa.command(cmdWithFile, {\n                    env: npmRunPath.env(),\n                    extendEnv: true,\n                    shell: true,\n                    input: code,\n                    cwd,\n                });\n                if (stderr) {\n                    console.error(stderr);\n                }\n                messageBus.emit('WORKER_UPDATE', { id, state: null });\n                return stdout;\n            };\n        }\n    }\n    http\n        .createServer(async (req, res) => {\n        const reqUrl = req.url;\n        let reqPath = decodeURI(url.parse(reqUrl).pathname);\n        // const requestStart = Date.now();\n        res.on('finish', () => {\n            const { method, url } = req;\n            const { statusCode } = res;\n            if (statusCode !== 200) {\n                messageBus.emit('SERVER_RESPONSE', {\n                    method,\n                    url,\n                    statusCode,\n                });\n            }\n        });\n        if (reqPath === '/livereload') {\n            res.writeHead(200, {\n                Connection: 'keep-alive',\n                'Content-Type': 'text/event-stream',\n                'Cache-Control': 'no-cache',\n                'Access-Control-Allow-Origin': '*',\n            });\n            sendMessage(res, 'connected', 'ready');\n            setInterval(sendMessage, 60000, res, 'ping', 'waiting');\n            liveReloadClients.push(res);\n            req.on('close', () => {\n                liveReloadClients.splice(liveReloadClients.indexOf(res), 1);\n            });\n            return;\n        }\n        if (reqPath === '/web_modules/@snowpack/hmr.js') {\n            sendFile(req, res, hmrCode, '.js');\n            return;\n        }\n        const attemptedFileLoads = [];\n        function attemptLoadFile(requestedFile) {\n            attemptedFileLoads.push(requestedFile);\n            return fs\n                .stat(requestedFile)\n                .then((stat) => (stat.isFile() ? requestedFile : null))\n                .catch(() => null /* ignore */);\n        }\n        let isProxyModule = false;\n        if (reqPath.endsWith('.proxy.js')) {\n            isProxyModule = true;\n            reqPath = reqPath.replace('.proxy.js', '');\n        }\n        let requestedFileExt = path.parse(reqPath).ext.toLowerCase();\n        let isRoute = false;\n        let fileBuilder;\n        // for (const dirDisk of workerDirectories) {\n        //   if (fileLoc || !requestedFileExt) {\n        //     continue;\n        //   }\n        //   let requestedFile = path.join(dirDisk, resource.replace(`${config.devOptions.dist}`, ''));\n        //   fileLoc = await attemptLoadFile(requestedFile);\n        // }\n        let responseFileExt = requestedFileExt;\n        async function getFileFromUrl(resource) {\n            for (const [dirDisk, dirUrl] of mountedDirectories) {\n                let requestedFile;\n                if (dirUrl === '.') {\n                    requestedFile = path.join(dirDisk, resource);\n                }\n                else if (resource.startsWith('/' + dirUrl)) {\n                    requestedFile = path.join(dirDisk, resource.replace(dirUrl, '.'));\n                }\n                else {\n                    continue;\n                }\n                if (requestedFileExt) {\n                    for (const [id, workerConfig] of registeredWorkers) {\n                        if (!id.startsWith('build:') && !id.startsWith('plugin:')) {\n                            continue;\n                        }\n                        const extMatcher = id.split(':')[1];\n                        if (extMatcher === requestedFileExt.substr(1) ||\n                            srcFileExtensionMapping[extMatcher] === requestedFileExt.substr(1)) {\n                            const srcFile = requestedFile.replace(requestedFileExt, `.${extMatcher}`);\n                            const fileLoc = await attemptLoadFile(srcFile);\n                            if (fileLoc) {\n                                return [fileLoc, [id, workerConfig]];\n                            }\n                        }\n                    }\n                    const fileLoc = await attemptLoadFile(requestedFile);\n                    if (fileLoc) {\n                        return [fileLoc, null];\n                    }\n                }\n                else {\n                    let fileLoc = (await attemptLoadFile(requestedFile + '.html')) ||\n                        (await attemptLoadFile(requestedFile + 'index.html')) ||\n                        (await attemptLoadFile(requestedFile + '/index.html'));\n                    if (!fileLoc && dirUrl === '.' && config.devOptions.fallback) {\n                        const fallbackFile = dirUrl === '.'\n                            ? path.join(dirDisk, config.devOptions.fallback)\n                            : path.join(cwd, config.devOptions.fallback);\n                        fileLoc = await attemptLoadFile(fallbackFile);\n                    }\n                    if (fileLoc) {\n                        responseFileExt = '.html';\n                        isRoute = true;\n                    }\n                    return [fileLoc, null];\n                }\n            }\n            return [null, null];\n        }\n        const [fileLoc, selectedWorker] = await getFileFromUrl(reqPath);\n        if (isRoute) {\n            messageBus.emit('NEW_SESSION');\n        }\n        if (!fileLoc) {\n            const prefix = chalk.red('  ✘ ');\n            console.error(`[404] ${reqUrl}\\n${attemptedFileLoads.map((loc) => prefix + loc).join('\\n')}`);\n            return sendError(res, 404);\n        }\n        if (selectedWorker) {\n            fileBuilder = getFileBuilderForWorker(fileLoc, selectedWorker);\n        }\n        // 1. Check the hot build cache. If it's already found, then just serve it.\n        let hotCachedResponse = inMemoryBuildCache.get(fileLoc);\n        if (hotCachedResponse) {\n            if (isRoute) {\n                hotCachedResponse =\n                    hotCachedResponse.toString() +\n                        `<script type=\"module\" src=\"/web_modules/@snowpack/hmr.js\"></script>`;\n            }\n            if (isProxyModule) {\n                responseFileExt = '.js';\n                hotCachedResponse = wrapEsmProxyResponse(reqPath, hotCachedResponse.toString(), requestedFileExt, true);\n            }\n            sendFile(req, res, hotCachedResponse, responseFileExt);\n            return;\n        }\n        // 2. Load the file from disk. We'll need it to check the cold cache or build from scratch.\n        let fileContents;\n        try {\n            fileContents = await fs.readFile(fileLoc, getEncodingType(requestedFileExt));\n        }\n        catch (err) {\n            console.error(fileLoc, err);\n            return sendError(res, 500);\n        }\n        // 3. Check the persistent cache. If found, serve it via a \"trust-but-verify\" strategy.\n        // Build it after sending, and if it no longer matches then assume the entire cache is suspect.\n        // In that case, clear the persistent cache and then force a live-reload of the page.\n        const cachedBuildData = !filesBeingDeleted.has(fileLoc) &&\n            (await cacache.get(BUILD_CACHE, fileLoc).catch(() => null));\n        if (cachedBuildData) {\n            const { originalFileHash } = cachedBuildData.metadata;\n            const newFileHash = etag(fileContents);\n            if (originalFileHash === newFileHash) {\n                const coldCachedResponse = cachedBuildData.data;\n                inMemoryBuildCache.set(fileLoc, coldCachedResponse);\n                let serverResponse = coldCachedResponse;\n                if (isRoute) {\n                    serverResponse =\n                        serverResponse.toString() +\n                            `<script type=\"module\" src=\"/web_modules/@snowpack/hmr.js\"></script>`;\n                }\n                if (isProxyModule) {\n                    responseFileExt = '.js';\n                    serverResponse = wrapEsmProxyResponse(reqPath, coldCachedResponse.toString(), requestedFileExt, true);\n                }\n                // Trust... but verify.\n                sendFile(req, res, serverResponse, responseFileExt);\n                let checkFinalBuildAnyway = null;\n                try {\n                    checkFinalBuildAnyway = await buildFile(fileContents, fileLoc, fileBuilder);\n                    if (checkFinalBuildAnyway && isProxyModule) {\n                        checkFinalBuildAnyway = wrapEsmProxyResponse(reqPath, checkFinalBuildAnyway, requestedFileExt, true);\n                    }\n                }\n                catch (err) {\n                    // safe to ignore, it will be surfaced later anyway\n                }\n                finally {\n                    if (!checkFinalBuildAnyway ||\n                        !coldCachedResponse.equals(Buffer.from(checkFinalBuildAnyway, getEncodingType(requestedFileExt)))) {\n                        inMemoryBuildCache.clear();\n                        await cacache.rm.all(BUILD_CACHE);\n                        broadcastMessage('message', 'reload');\n                    }\n                }\n                return;\n            }\n        }\n        // 4. Final option: build the file, serve it, and cache it.\n        let finalBuild;\n        try {\n            finalBuild = await buildFile(fileContents, fileLoc, fileBuilder);\n        }\n        catch (err) {\n            console.error(fileLoc, err);\n            return sendError(res, 500);\n        }\n        inMemoryBuildCache.set(fileLoc, Buffer.from(finalBuild, getEncodingType(requestedFileExt)));\n        const originalFileHash = etag(fileContents);\n        cacache.put(BUILD_CACHE, fileLoc, Buffer.from(finalBuild, getEncodingType(requestedFileExt)), { metadata: { originalFileHash } });\n        if (isRoute) {\n            finalBuild += `<script type=\"module\" src=\"/web_modules/@snowpack/hmr.js\"></script>`;\n        }\n        if (isProxyModule) {\n            responseFileExt = '.js';\n            finalBuild = wrapEsmProxyResponse(reqPath, finalBuild, requestedFileExt, true);\n        }\n        sendFile(req, res, finalBuild, responseFileExt);\n    })\n        .listen(port);\n    async function onWatchEvent(fileLoc) {\n        const fileUrl = getUrlFromFile(fileLoc);\n        broadcastMessage('message', JSON.stringify({ url: fileUrl }));\n        inMemoryBuildCache.delete(fileLoc);\n        filesBeingDeleted.add(fileLoc);\n        await cacache.rm.entry(BUILD_CACHE, fileLoc);\n        filesBeingDeleted.delete(fileLoc);\n    }\n    const watcher = chokidar.watch(mountedDirectories.map(([dirDisk]) => dirDisk), {\n        ignored: config.exclude,\n        persistent: true,\n        ignoreInitial: true,\n        disableGlobbing: false,\n    });\n    watcher.on('add', (fileLoc) => onWatchEvent(fileLoc));\n    watcher.on('change', (fileLoc) => onWatchEvent(fileLoc));\n    watcher.on('unlink', (fileLoc) => onWatchEvent(fileLoc));\n    process.on('SIGINT', () => {\n        for (const client of liveReloadClients) {\n            client.end();\n        }\n        process.exit(0);\n    });\n    console.log = (...args) => {\n        messageBus.emit('CONSOLE', { level: 'log', args });\n    };\n    console.warn = (...args) => {\n        messageBus.emit('CONSOLE', { level: 'warn', args });\n    };\n    console.error = (...args) => {\n        messageBus.emit('CONSOLE', { level: 'error', args });\n    };\n    const ips = Object.values(os.networkInterfaces())\n        .reduce((every, i) => [...every, ...(i || [])], [])\n        .filter((i) => i.family === 'IPv4' && i.internal === false)\n        .map((i) => i.address);\n    paint(messageBus, registeredWorkers, undefined, {\n        port,\n        ips,\n        startTimeMs: Date.now() - serverStart,\n    });\n    openInBrowser(port);\n    return new Promise(() => { });\n}\nfunction openInBrowser(port) {\n    const url = `http://localhost:${port}`;\n    let openCmd = 'xdg-open';\n    if (process.platform === 'darwin')\n        openCmd = 'open';\n    if (process.platform === 'win32')\n        openCmd = 'start';\n    execa(openCmd, [url]).catch(() => {\n        // couldn't open automatically, safe to ignore\n    });\n}\n","import path from 'path';\nimport { cosmiconfigSync } from 'cosmiconfig';\nimport { validate } from 'jsonschema';\nimport { all as merge } from 'deepmerge';\nimport chalk from 'chalk';\nconst CONFIG_NAME = 'snowpack';\nconst ALWAYS_EXCLUDE = ['**/node_modules/**/*', '**/.types/**/*'];\n// default settings\nconst DEFAULT_CONFIG = {\n    exclude: ['__tests__/**/*', '**/*.@(spec|test).*'],\n    knownEntrypoints: [],\n    installOptions: {\n        dest: 'web_modules',\n        externalPackage: [],\n        installTypes: false,\n        env: {},\n        alias: {},\n        rollup: {\n            plugins: [],\n            dedupe: [],\n        },\n    },\n    devOptions: {\n        port: 8080,\n        out: 'build',\n        fallback: 'index.html',\n        bundle: undefined,\n    },\n};\nconst configSchema = {\n    type: 'object',\n    properties: {\n        extends: { type: 'string' },\n        knownEntrypoints: { type: 'array', items: { type: 'string' } },\n        exclude: { type: 'array', items: { type: 'string' } },\n        webDependencies: {\n            type: ['object'],\n            additionalProperties: { type: 'string' },\n        },\n        installOptions: {\n            type: 'object',\n            properties: {\n                dest: { type: 'string' },\n                externalPackage: { type: 'array', items: { type: 'string' } },\n                installTypes: { type: 'boolean' },\n                sourceMap: { oneOf: [{ type: 'boolean' }, { type: 'string' }] },\n                alias: {\n                    type: 'object',\n                    additionalProperties: { type: 'string' },\n                },\n                env: {\n                    type: 'object',\n                    additionalProperties: {\n                        oneOf: [\n                            { id: 'EnvVarString', type: 'string' },\n                            { id: 'EnvVarNumber', type: 'number' },\n                            { id: 'EnvVarTrue', type: 'boolean', enum: [true] },\n                        ],\n                    },\n                },\n                rollup: {\n                    type: 'object',\n                    properties: {\n                        plugins: { type: 'array', items: { type: 'object' } },\n                        dedupe: {\n                            type: 'array',\n                            items: { type: 'string' },\n                        },\n                        namedExports: {\n                            type: 'object',\n                            additionalProperties: { type: 'array', items: { type: 'string' } },\n                        },\n                    },\n                },\n            },\n        },\n        devOptions: {\n            type: 'object',\n            properties: {\n                port: { type: 'number' },\n                out: { type: 'string' },\n                fallback: { type: 'string' },\n                bundle: { type: 'boolean' },\n            },\n        },\n        scripts: {\n            type: 'object',\n            additionalProperties: { type: ['string'] },\n        },\n    },\n};\n/**\n * Convert CLI flags to an incomplete Snowpack config representation.\n * We need to be careful about setting properties here if the flag value\n * is undefined, since the deep merge strategy would then overwrite good\n * defaults with 'undefined'.\n */\nfunction expandCliFlags(flags) {\n    const result = {\n        installOptions: {},\n        devOptions: {},\n    };\n    const { help, version, config, ...relevantFlags } = flags;\n    for (const [flag, val] of Object.entries(relevantFlags)) {\n        if (flag === '_' || flag.includes('-')) {\n            continue;\n        }\n        if (configSchema.properties[flag]) {\n            result[flag] = val;\n            continue;\n        }\n        if (configSchema.properties.installOptions.properties[flag]) {\n            result.installOptions[flag] = val;\n            continue;\n        }\n        if (configSchema.properties.devOptions.properties[flag]) {\n            result.devOptions[flag] = val;\n            continue;\n        }\n        console.error(`Unknown CLI flag: \"${flag}\"`);\n        process.exit(1);\n    }\n    if (result.installOptions.env) {\n        result.installOptions.env = result.installOptions.env.reduce((acc, id) => {\n            const index = id.indexOf('=');\n            const [key, val] = index > 0 ? [id.substr(0, index), id.substr(index + 1)] : [id, true];\n            acc[key] = val;\n            return acc;\n        }, {});\n    }\n    return result;\n}\n/** resolve --dest relative to cwd, etc. */\nfunction normalizeConfig(config) {\n    const cwd = process.cwd();\n    config.installOptions.dest = path.resolve(cwd, config.installOptions.dest);\n    config.devOptions.out = path.resolve(cwd, config.devOptions.out);\n    config.exclude = Array.from(new Set([...ALWAYS_EXCLUDE, ...config.exclude]));\n    if (!config.scripts) {\n        config.exclude.push('**/.*');\n        config.scripts = {\n            'mount:*': 'mount . --to .',\n        };\n    }\n    for (const scriptId of Object.keys(config.scripts)) {\n        if (scriptId.includes('::watch')) {\n            continue;\n        }\n        config.scripts[scriptId] = {\n            cmd: config.scripts[scriptId],\n            watch: config.scripts[`${scriptId}::watch`],\n        };\n    }\n    for (const scriptId of Object.keys(config.scripts)) {\n        if (scriptId.includes('::watch')) {\n            delete config.scripts[scriptId];\n        }\n    }\n    for (const scriptId of Object.keys(config.scripts)) {\n        if (!scriptId.startsWith('build:') && !scriptId.startsWith('plugin:')) {\n            continue;\n        }\n        const scriptType = scriptId.split(':')[0];\n        const exts = scriptId.split(':')[1].split(',');\n        if (exts.length === 1) {\n            continue;\n        }\n        for (const ext of exts) {\n            if (config.scripts[`build:${ext}`] || config.scripts[`plugin:${ext}`]) {\n                handleConfigError(`Multiple \"scripts\" match the \"${ext}\" file extension.\\nCurrently, only one script per file type is supported.`);\n            }\n            config.scripts[`${scriptType}:${ext}`] = { ...config.scripts[scriptId] };\n        }\n        delete config.scripts[scriptId];\n    }\n    return config;\n}\nfunction handleConfigError(msg) {\n    console.error(`[error]: ${msg}`);\n    process.exit(1);\n}\nfunction handleValidationErrors(filepath, errors) {\n    console.error(chalk.red(`! ${filepath || 'Configuration error'}`));\n    console.error(errors.map((err) => `    - ${err.toString()}`).join('\\n'));\n    console.error(`    See https://www.snowpack.dev/#configuration for more info.`);\n    process.exit(1);\n}\nfunction handleDeprecatedConfigError(mainMsg, ...msgs) {\n    console.error(chalk.red(mainMsg));\n    msgs.forEach(console.error);\n    console.error(`See https://www.snowpack.dev/#configuration for more info.`);\n    process.exit(1);\n}\nfunction validateConfigAgainstV1(rawConfig, cliFlags) {\n    // Moved!\n    if (rawConfig.dedupe || cliFlags.dedupe) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `dedupe` is now `installOptions.rollup.dedupe`.');\n    }\n    if (rawConfig.namedExports || cliFlags.namedExports) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `namedExports` is now `installOptions.rollup.namedExports`.');\n    }\n    if (rawConfig.rollup) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] top-level `rollup` config is now `installOptions.rollup`.');\n    }\n    if (rawConfig.installOptions?.include) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `installOptions.include` is now `include` but its syntax has also changed!');\n    }\n    if (rawConfig.installOptions?.exclude) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `installOptions.exclude` is now `exclude`.');\n    }\n    if (Array.isArray(rawConfig.webDependencies)) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] The `webDependencies` array is now `knownEntrypoints`.');\n    }\n    if (rawConfig.entrypoints) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `entrypoints` is now `knownEntrypoints`.');\n    }\n    if (rawConfig.include) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] All files are now included by default. \"include\" config is safe to remove.', 'Whitelist & include specific folders via \"mount\" build scripts.');\n    }\n    // Replaced!\n    if (rawConfig.source || cliFlags.source) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `source` is now detected automatically, this config is safe to remove.');\n    }\n    if (rawConfig.stat || cliFlags.stat) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `stat` is now the default output, this config is safe to remove.');\n    }\n    // Removed!\n    if (rawConfig.devOptions?.dist) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `devOptions.dist` is no longer required. This config is safe to remove.', `If you'd still like to host your src/ directory at the \"/_dist/*\" URL, create a mount script:',\n      '    {\"scripts\": {\"mount:src\": \"mount src --to _dist_\"}} `);\n    }\n    if (rawConfig.hash || cliFlags.hash) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `installOptions.hash` has been replaced by `snowpack build`.');\n    }\n    if (rawConfig.installOptions?.nomodule || cliFlags.nomodule) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `installOptions.nomodule` has been replaced by `snowpack build`.');\n    }\n    if (rawConfig.installOptions?.nomoduleOutput || cliFlags.nomoduleOutput) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `installOptions.nomoduleOutput` has been replaced by `snowpack build`.');\n    }\n    if (rawConfig.installOptions?.babel || cliFlags.babel) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `installOptions.babel` has been replaced by `snowpack build`.');\n    }\n    if (rawConfig.installOptions?.optimize || cliFlags.optimize) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `installOptions.optimize` has been replaced by `snowpack build`.');\n    }\n    if (rawConfig.installOptions?.strict || cliFlags.strict) {\n        handleDeprecatedConfigError('[Snowpack v1 -> v2] `installOptions.strict` is no longer supported.');\n    }\n}\nexport function loadAndValidateConfig(flags, pkgManifest) {\n    const explorerSync = cosmiconfigSync(CONFIG_NAME, {\n        // only support these 3 types of config for now\n        searchPlaces: ['package.json', 'snowpack.config.js', 'snowpack.config.json'],\n        // don't support crawling up the folder tree:\n        stopDir: path.dirname(process.cwd()),\n    });\n    let result;\n    // if user specified --config path, load that\n    if (flags.config) {\n        result = explorerSync.load(path.resolve(process.cwd(), flags.config));\n        if (!result) {\n            handleConfigError(`Could not locate Snowpack config at ${flags.config}`);\n        }\n    }\n    // If no config was found above, search for one.\n    result = result || explorerSync.search();\n    // If still no config found, assume none exists and use the default config.\n    if (!result || !result.config || result.isEmpty) {\n        result = { config: { ...DEFAULT_CONFIG } };\n    }\n    // validate against schema; throw helpful user if invalid\n    const config = result.config;\n    validateConfigAgainstV1(config, flags);\n    const cliConfig = expandCliFlags(flags);\n    const validation = validate(config, configSchema, {\n        allowUnknownAttributes: false,\n        propertyName: CONFIG_NAME,\n    });\n    if (validation.errors && validation.errors.length > 0) {\n        handleValidationErrors(result.filepath, validation.errors);\n        process.exit(1);\n    }\n    let extendConfig = {};\n    if (config.extends) {\n        const extendConfigLoc = config.extends.startsWith('.')\n            ? path.resolve(path.dirname(result.filepath), config.extends)\n            : require.resolve(config.extends, { paths: [process.cwd()] });\n        const extendResult = explorerSync.load(extendConfigLoc);\n        if (!extendResult) {\n            handleConfigError(`Could not locate Snowpack config at ${flags.config}`);\n            process.exit(1);\n        }\n        extendConfig = extendResult.config;\n        const extendValidation = validate(extendConfig, configSchema, {\n            allowUnknownAttributes: false,\n            propertyName: CONFIG_NAME,\n        });\n        if (extendValidation.errors && extendValidation.errors.length > 0) {\n            handleValidationErrors(result.filepath, extendValidation.errors);\n            process.exit(1);\n        }\n    }\n    // if valid, apply config over defaults\n    const overwriteMerge = (destinationArray, sourceArray, options) => sourceArray;\n    const mergedConfig = merge([\n        DEFAULT_CONFIG,\n        extendConfig,\n        {\n            webDependencies: pkgManifest.webDependencies,\n            homepage: pkgManifest.homepage,\n        },\n        config,\n        cliConfig,\n    ], { arrayMerge: overwriteMerge });\n    for (const webDependencyName of Object.keys(mergedConfig.webDependencies || {})) {\n        if (pkgManifest.dependencies && pkgManifest.dependencies[webDependencyName]) {\n            handleConfigError(`\"${webDependencyName}\" is included in \"webDependencies\". Please remove it from your package.json \"dependencies\" config.`);\n        }\n        if (pkgManifest.devDependencies && pkgManifest.devDependencies[webDependencyName]) {\n            handleConfigError(`\"${webDependencyName}\" is included in \"webDependencies\". Please remove it from your package.json \"devDependencies\" config.`);\n        }\n    }\n    // if CLI flags present, apply those as overrides\n    return normalizeConfig(mergedConfig);\n}\n","import cacache from 'cacache';\nimport PQueue from 'p-queue';\nimport chalk from 'chalk';\nimport validatePackageName from 'validate-npm-package-name';\nimport { fetchCDNResource, PIKA_CDN, RESOURCE_CACHE } from './util.js';\n/**\n * Given an install specifier, attempt to resolve it from the CDN.\n * If no lockfile exists or if the entry is not found in the lockfile, attempt to resolve\n * it from the CDN directly. Otherwise, use the URL found in the lockfile and attempt to\n * check the local cache first.\n *\n * All resolved URLs are populated into the local cache, where our internal Rollup engine\n * will load them from when it installs your dependencies to disk.\n */\nasync function resolveDependency(installSpecifier, packageSemver, lockfile, canRetry = true) {\n    // Right now, the CDN is only for top-level JS packages. The CDN doesn't support CSS,\n    // non-JS assets, and has limited support for deep package imports. Snowpack\n    // will automatically fall-back any failed/not-found assets from local\n    // node_modules/ instead.\n    if (!validatePackageName(installSpecifier).validForNewPackages) {\n        return null;\n    }\n    // Grab the installUrl from our lockfile if it exists, otherwise resolve it yourself.\n    let installUrl;\n    let installUrlType;\n    if (lockfile && lockfile.imports[installSpecifier]) {\n        installUrl = lockfile.imports[installSpecifier];\n        installUrlType = 'pin';\n    }\n    else {\n        if (packageSemver === 'latest') {\n            console.warn(`warn(${installSpecifier}): Not found in \"dependencies\". Using latest package version...`);\n        }\n        if (packageSemver.startsWith('npm:@reactesm') || packageSemver.startsWith('npm:@pika/react')) {\n            throw new Error(`React workaround packages no longer needed! Revert to the official React & React-DOM packages.`);\n        }\n        if (packageSemver.includes(' ') || packageSemver.includes(':')) {\n            console.warn(`warn(${installSpecifier}): Can't fetch complex semver \"${packageSemver}\" from remote CDN.`);\n            return null;\n        }\n        installUrlType = 'lookup';\n        installUrl = `${PIKA_CDN}/${installSpecifier}@${packageSemver}`;\n    }\n    // Hashed CDN urls never change, so its safe to grab them directly from the local cache\n    // without a network request.\n    if (installUrlType === 'pin') {\n        const cachedResult = await cacache.get.info(RESOURCE_CACHE, installUrl).catch(() => null);\n        if (cachedResult) {\n            if (cachedResult.metadata) {\n                const { pinnedUrl } = cachedResult.metadata;\n                return pinnedUrl;\n            }\n        }\n    }\n    // Otherwise, resolve from the CDN remotely.\n    const { statusCode, headers, body } = await fetchCDNResource(installUrl);\n    if (statusCode !== 200) {\n        console.warn(`Failed to resolve [${statusCode}]: ${installUrl} (${body})`);\n        console.warn(`Falling back to local copy...`);\n        return null;\n    }\n    let importUrlPath = headers['x-import-url'];\n    let pinnedUrlPath = headers['x-pinned-url'];\n    const buildStatus = headers['x-import-status'];\n    const typesUrlPath = headers['x-typescript-types'];\n    const typesUrl = typesUrlPath && `${PIKA_CDN}${typesUrlPath}`;\n    if (installUrlType === 'pin') {\n        const pinnedUrl = installUrl;\n        await cacache.put(RESOURCE_CACHE, pinnedUrl, body, {\n            metadata: { pinnedUrl, typesUrl },\n        });\n        return pinnedUrl;\n    }\n    if (pinnedUrlPath) {\n        const pinnedUrl = `${PIKA_CDN}${pinnedUrlPath}`;\n        await cacache.put(RESOURCE_CACHE, pinnedUrl, body, {\n            metadata: { pinnedUrl, typesUrl },\n        });\n        return pinnedUrl;\n    }\n    if (buildStatus === 'SUCCESS') {\n        console.warn(`Failed to lookup [${statusCode}]: ${installUrl}`);\n        console.warn(`Falling back to local copy...`);\n        return null;\n    }\n    if (!canRetry || buildStatus === 'FAIL') {\n        console.warn(`Failed to build: ${installSpecifier}@${packageSemver}`);\n        console.warn(`Falling back to local copy...`);\n        return null;\n    }\n    console.log(chalk.cyan(`Building ${installSpecifier}@${packageSemver}... (This takes a moment, but will be cached for future use)`));\n    if (!importUrlPath) {\n        throw new Error('X-Import-URL header expected, but none received.');\n    }\n    const { statusCode: lookupStatusCode } = await fetchCDNResource(importUrlPath);\n    if (lookupStatusCode !== 200) {\n        throw new Error(`Unexpected response [${lookupStatusCode}]: ${PIKA_CDN}${importUrlPath}`);\n    }\n    return resolveDependency(installSpecifier, packageSemver, lockfile, false);\n}\nexport async function resolveTargetsFromRemoteCDN(lockfile, pkgManifest, config) {\n    const downloadQueue = new PQueue({ concurrency: 16 });\n    const newLockfile = { imports: {} };\n    let resolutionError;\n    for (const [installSpecifier, installSemver] of Object.entries(config.webDependencies)) {\n        downloadQueue.add(async () => {\n            try {\n                const resolvedUrl = await resolveDependency(installSpecifier, installSemver, lockfile);\n                if (resolvedUrl) {\n                    newLockfile.imports[installSpecifier] = resolvedUrl;\n                }\n            }\n            catch (err) {\n                resolutionError = resolutionError || err;\n            }\n        });\n    }\n    await downloadQueue.onIdle();\n    if (resolutionError) {\n        throw resolutionError;\n    }\n    return newLockfile;\n}\nexport function clearCache() {\n    return cacache.rm.all(RESOURCE_CACHE);\n}\n","import path from 'path';\nimport { resolveDependencyManifest } from './util';\nconst IS_DEEP_PACKAGE_IMPORT = /^(@[\\w-]+\\/)?([\\w-]+)\\/(.*)/;\n/**\n * rollup-plugin-entrypoint-alias\n *\n * Aliases any deep imports from a package to the package name, so that\n * chunking can happen more accurately.\n *\n * Example: lit-element imports from both 'lit-html' & 'lit-html/lit-html.js'.\n * Even though both eventually resolve to the same place, without this plugin\n * we lose the ability to mark \"lit-html\" as an external package.\n */\nexport function rollupPluginEntrypointAlias({ cwd }) {\n    return {\n        name: 'snowpack:rollup-plugin-entrypoint-alias',\n        resolveId(source, importer) {\n            if (!IS_DEEP_PACKAGE_IMPORT.test(source)) {\n                return null;\n            }\n            const [, packageScope, packageName] = source.match(IS_DEEP_PACKAGE_IMPORT);\n            const packageFullName = packageScope ? `${packageScope}${packageName}` : packageName;\n            let manifest;\n            try {\n                const [, _manifest] = resolveDependencyManifest(packageFullName, cwd);\n                manifest = _manifest;\n            }\n            catch (err) {\n                return null;\n            }\n            if (!manifest) {\n                return null;\n            }\n            let needsAlias = (typeof manifest.module === 'string' &&\n                source === path.posix.join(packageFullName, manifest.module)) ||\n                (typeof manifest.browser === 'string' &&\n                    source === path.posix.join(packageFullName, manifest.browser)) ||\n                (typeof manifest.main === 'string' &&\n                    source === path.posix.join(packageFullName, manifest.main));\n            if (!needsAlias) {\n                return null;\n            }\n            return this.resolve(packageFullName, importer, { skipSelf: true }).then((resolved) => {\n                return resolved || null;\n            });\n        },\n    };\n}\n","import mkdirp from 'mkdirp';\nimport cacache from 'cacache';\nimport url from 'url';\nimport fs from 'fs';\nimport path from 'path';\nimport tar from 'tar';\nimport { fetchCDNResource, HAS_CDN_HASH_REGEX, PIKA_CDN, RESOURCE_CACHE } from './util';\nconst CACHED_FILE_ID_PREFIX = 'snowpack-pkg-cache:';\nconst PIKA_CDN_TRIM_LENGTH = PIKA_CDN.length;\n/**\n * rollup-plugin-remote-cdn\n *\n * Load import URLs from a remote CDN, sitting behind a local cache. The local\n * cache acts as a go-between for the resolve & load step: when we get back a\n * successful CDN resolution, we save the file to the local cache and then tell\n * rollup that it's safe to load from the cache in the `load()` hook.\n */\nexport function rollupPluginDependencyCache({ installTypes, log, }) {\n    const allTypesToInstall = new Set();\n    return {\n        name: 'snowpack:rollup-plugin-remote-cdn',\n        async resolveId(source, importer) {\n            let cacheKey;\n            if (source.startsWith(PIKA_CDN)) {\n                cacheKey = source;\n            }\n            else if (source.startsWith('/-/')) {\n                cacheKey = PIKA_CDN + source;\n            }\n            else if (source.startsWith('/pin/')) {\n                cacheKey = PIKA_CDN + source;\n            }\n            else {\n                return null;\n            }\n            // If the source path is a CDN path including a hash, it's assumed the\n            // file will never change and it is safe to pull from our local cache\n            // without a network request.\n            log(cacheKey);\n            if (HAS_CDN_HASH_REGEX.test(cacheKey)) {\n                const cachedResult = await cacache.get\n                    .info(RESOURCE_CACHE, cacheKey)\n                    .catch(( /* ignore */) => null);\n                if (cachedResult) {\n                    return CACHED_FILE_ID_PREFIX + cacheKey;\n                }\n            }\n            // Otherwise, make the remote request and cache the file on success.\n            const response = await fetchCDNResource(cacheKey);\n            if (response.statusCode === 200) {\n                const typesUrlPath = response.headers['x-typescript-types'];\n                const pinnedUrlPath = response.headers['x-pinned-url'];\n                const typesUrl = typesUrlPath && `${PIKA_CDN}${typesUrlPath}`;\n                const pinnedUrl = pinnedUrlPath && `${PIKA_CDN}${pinnedUrlPath}`;\n                await cacache.put(RESOURCE_CACHE, cacheKey, response.body, {\n                    metadata: { pinnedUrl, typesUrl },\n                });\n                return CACHED_FILE_ID_PREFIX + cacheKey;\n            }\n            // If lookup failed, skip this plugin and resolve the import locally instead.\n            // TODO: Log that this has happened (if some sort of verbose mode is enabled).\n            const packageName = cacheKey\n                .substring(PIKA_CDN_TRIM_LENGTH)\n                .replace('/-/', '')\n                .replace('/pin/', '')\n                .split('@')[0];\n            return this.resolve(packageName, importer, { skipSelf: true }).then((resolved) => {\n                let finalResult = resolved;\n                if (!finalResult) {\n                    finalResult = { id: packageName };\n                }\n                return finalResult;\n            });\n        },\n        async load(id) {\n            if (!id.startsWith(CACHED_FILE_ID_PREFIX)) {\n                return null;\n            }\n            const cacheKey = id.substring(CACHED_FILE_ID_PREFIX.length);\n            log(cacheKey);\n            const cachedResult = await cacache.get(RESOURCE_CACHE, cacheKey);\n            const typesUrl = cachedResult.metadata?.typesUrl;\n            if (typesUrl && installTypes) {\n                const typesTarballUrl = typesUrl.replace(/(mode=types.*?)\\/.*/, '$1/all.tgz');\n                allTypesToInstall.add(typesTarballUrl);\n            }\n            return cachedResult.data.toString('utf8');\n        },\n        async writeBundle(options) {\n            if (!installTypes) {\n                return;\n            }\n            await mkdirp(path.join(options.dir, '.types'));\n            const tempDir = await cacache.tmp.mkdir(RESOURCE_CACHE);\n            for (const typesTarballUrl of allTypesToInstall) {\n                let tarballContents;\n                const cachedTarball = await cacache\n                    .get(RESOURCE_CACHE, typesTarballUrl)\n                    .catch(( /* ignore */) => null);\n                if (cachedTarball) {\n                    tarballContents = cachedTarball.data;\n                }\n                else {\n                    const tarballResponse = await fetchCDNResource(typesTarballUrl, 'buffer');\n                    if (tarballResponse.statusCode !== 200) {\n                        continue;\n                    }\n                    tarballContents = tarballResponse.body;\n                    await cacache.put(RESOURCE_CACHE, typesTarballUrl, tarballContents);\n                }\n                const typesUrlParts = url.parse(typesTarballUrl).pathname.split('/');\n                const typesPackageName = url.parse(typesTarballUrl).pathname.startsWith('/-/@')\n                    ? typesUrlParts[2] + '/' + typesUrlParts[3].split('@')[0]\n                    : typesUrlParts[2].split('@')[0];\n                const typesPackageTarLoc = path.join(tempDir, `${typesPackageName}.tgz`);\n                if (typesPackageName.includes('/')) {\n                    await mkdirp(path.dirname(typesPackageTarLoc));\n                }\n                fs.writeFileSync(typesPackageTarLoc, tarballContents);\n                const typesPackageLoc = path.join(options.dir, `.types/${typesPackageName}`);\n                await mkdirp(typesPackageLoc);\n                await tar.x({\n                    file: typesPackageTarLoc,\n                    cwd: typesPackageLoc,\n                });\n            }\n        },\n    };\n}\n","import fs from 'fs';\nimport path from 'path';\nimport zlib from 'zlib';\nexport function rollupPluginDependencyStats(cb) {\n    let outputDir;\n    let existingFileCache = {};\n    let statsSummary = {\n        direct: {},\n        common: {},\n    };\n    function buildExistingFileCache(bundle) {\n        for (let fileName of Object.keys(bundle)) {\n            const filePath = path.join(outputDir, fileName);\n            if (fs.existsSync(filePath)) {\n                const { size } = fs.statSync(filePath);\n                existingFileCache[fileName] = size;\n            }\n        }\n    }\n    function compareDependencies(files, type) {\n        for (let { fileName, contents } of files) {\n            const size = contents.byteLength;\n            statsSummary[type][fileName] = {\n                size: size,\n                gzip: zlib.gzipSync(contents).byteLength,\n                brotli: zlib.brotliCompressSync ? zlib.brotliCompressSync(contents).byteLength : 0,\n            };\n            if (existingFileCache[fileName]) {\n                const delta = (size - existingFileCache[fileName]) / 1000;\n                statsSummary[type][fileName].delta = delta;\n            }\n        }\n    }\n    return {\n        name: 'snowpack:rollup-plugin-stats',\n        generateBundle(options, bundle) {\n            outputDir = options.dir;\n            buildExistingFileCache(bundle);\n        },\n        writeBundle(options, bundle) {\n            const directDependencies = [];\n            const commonDependencies = [];\n            for (const [fileName, assetOrChunk] of Object.entries(bundle)) {\n                const raw = assetOrChunk.type === 'asset' ? assetOrChunk.source : assetOrChunk.code;\n                const contents = Buffer.isBuffer(raw)\n                    ? raw\n                    : typeof raw === 'string'\n                        ? Buffer.from(raw, 'utf8')\n                        : Buffer.from(raw);\n                if (fileName.startsWith('common')) {\n                    commonDependencies.push({ fileName, contents });\n                }\n                else {\n                    directDependencies.push({ fileName, contents });\n                }\n            }\n            compareDependencies(directDependencies, 'direct');\n            compareDependencies(commonDependencies, 'common');\n            cb(statsSummary);\n        },\n    };\n}\n","import chalk from 'chalk';\nimport nodePath from 'path';\nimport fs from 'fs';\nimport path from 'path';\nimport glob from 'glob';\nimport execa from 'execa';\nimport mime from 'mime-types';\nimport validatePackageName from 'validate-npm-package-name';\nimport { init as initESModuleLexer, parse } from 'es-module-lexer';\nimport { isTruthy } from './util';\nconst WEB_MODULES_TOKEN = 'web_modules/';\nconst WEB_MODULES_TOKEN_LENGTH = WEB_MODULES_TOKEN.length;\n// [@\\w] - Match a word-character or @ (valid package name)\n// (?!.*(:\\/\\/)) - Ignore if previous match was a protocol (ex: http://)\nconst BARE_SPECIFIER_REGEX = /^[@\\w](?!.*(:\\/\\/))/;\nconst HAS_NAMED_IMPORTS_REGEX = /^[\\w\\s\\,]*\\{(.*)\\}/s;\nconst SPLIT_NAMED_IMPORTS_REGEX = /\\bas\\s+\\w+|,/s;\nconst DEFAULT_IMPORT_REGEX = /import\\s+(\\w)+(,\\s\\{[\\w\\s]*\\})?\\s+from/s;\nconst HTML_JS_REGEX = /<script.*?>(.*)<\\/script>/gms;\nfunction stripJsExtension(dep) {\n    return dep.replace(/\\.m?js$/i, '');\n}\nfunction createInstallTarget(specifier, all = true) {\n    return {\n        specifier,\n        all,\n        default: false,\n        namespace: false,\n        named: [],\n    };\n}\nfunction removeSpecifierQueryString(specifier) {\n    const queryStringIndex = specifier.indexOf('?');\n    if (queryStringIndex >= 0) {\n        specifier = specifier.substring(0, queryStringIndex);\n    }\n    return specifier;\n}\nfunction getWebModuleSpecifierFromCode(code, imp) {\n    // import.meta: we can ignore\n    if (imp.d === -2) {\n        return null;\n    }\n    // Static imports: easy to parse\n    if (imp.d === -1) {\n        return code.substring(imp.s, imp.e);\n    }\n    // Dynamic imports: a bit trickier to parse. Today, we only support string literals.\n    const importStatement = code.substring(imp.s, imp.e);\n    const importSpecifierMatch = importStatement.match(/^\\s*['\"](.*)['\"]\\s*$/m);\n    return importSpecifierMatch ? importSpecifierMatch[1] : null;\n}\n/**\n * parses an import specifier, looking for a web modules to install. If a web module is not detected,\n * null is returned.\n */\nfunction parseWebModuleSpecifier(specifier) {\n    if (!specifier) {\n        return null;\n    }\n    // If specifier is a \"bare module specifier\" (ie: package name) just return it directly\n    if (BARE_SPECIFIER_REGEX.test(specifier)) {\n        return specifier;\n    }\n    // Clean the specifier, remove any query params that may mess with matching\n    const cleanedSpecifier = removeSpecifierQueryString(specifier);\n    // Otherwise, check that it includes the \"web_modules/\" directory\n    const webModulesIndex = cleanedSpecifier.indexOf(WEB_MODULES_TOKEN);\n    if (webModulesIndex === -1) {\n        return null;\n    }\n    // Check if this matches `@scope/package.js` or `package.js` format.\n    // If it is, assume that this is a top-level pcakage that should be installed without the “.js”\n    const resolvedSpecifier = cleanedSpecifier.substring(webModulesIndex + WEB_MODULES_TOKEN_LENGTH);\n    const resolvedSpecifierWithoutExtension = stripJsExtension(resolvedSpecifier);\n    if (validatePackageName(resolvedSpecifierWithoutExtension).validForNewPackages) {\n        return resolvedSpecifierWithoutExtension;\n    }\n    // Otherwise, this is an explicit import to a file within a package.\n    return resolvedSpecifier;\n}\nfunction parseImportStatement(code, imp) {\n    const webModuleSpecifier = parseWebModuleSpecifier(getWebModuleSpecifierFromCode(code, imp));\n    if (!webModuleSpecifier) {\n        return null;\n    }\n    const importStatement = code.substring(imp.ss, imp.se);\n    if (/^import\\s+type/.test(importStatement)) {\n        return null;\n    }\n    const dynamicImport = imp.d > -1;\n    const defaultImport = !dynamicImport && DEFAULT_IMPORT_REGEX.test(importStatement);\n    const namespaceImport = !dynamicImport && importStatement.includes('*');\n    const namedImports = (importStatement.match(HAS_NAMED_IMPORTS_REGEX) || [, ''])[1]\n        .split(SPLIT_NAMED_IMPORTS_REGEX)\n        .map((name) => name.trim())\n        .filter(isTruthy);\n    return {\n        specifier: webModuleSpecifier,\n        all: dynamicImport,\n        default: defaultImport,\n        namespace: namespaceImport,\n        named: namedImports,\n    };\n}\nfunction getInstallTargetsForFile(code) {\n    const [imports] = parse(code) || [];\n    const allImports = imports\n        .map((imp) => parseImportStatement(code, imp))\n        .filter(isTruthy);\n    return allImports;\n}\nexport function scanDepList(depList, cwd) {\n    return depList\n        .map((whitelistItem) => {\n        if (!glob.hasMagic(whitelistItem)) {\n            return [createInstallTarget(whitelistItem, true)];\n        }\n        else {\n            const nodeModulesLoc = nodePath.join(cwd, 'node_modules');\n            return scanDepList(glob.sync(whitelistItem, { cwd: nodeModulesLoc, nodir: true }), cwd);\n        }\n    })\n        .reduce((flat, item) => flat.concat(item), []);\n}\nexport async function scanImports(cwd, { scripts, exclude }) {\n    await initESModuleLexer;\n    const includeFileSets = await Promise.all(Object.entries(scripts).map(([id, scriptConfig]) => {\n        if (!id.startsWith('mount:')) {\n            return [];\n        }\n        const cmdArr = scriptConfig.cmd.split(/\\s+/);\n        if (cmdArr[0] !== 'mount') {\n            throw new Error(`script[${id}] must use the mount command`);\n        }\n        cmdArr.shift();\n        if (cmdArr[0].includes('web_modules')) {\n            return [];\n        }\n        const dirDisk = nodePath.resolve(cwd, cmdArr[0]);\n        return glob.sync(`**/*`, {\n            ignore: exclude.concat(['**/web_modules/**/*']),\n            cwd: dirDisk,\n            absolute: true,\n            nodir: true,\n        });\n    }));\n    const includeFiles = Array.from(new Set([].concat.apply([], includeFileSets)));\n    if (includeFiles.length === 0) {\n        console.warn(`[ERROR]: No mounted files.`);\n        return [];\n    }\n    // Scan every matched JS file for web dependency imports\n    const loadedFiles = await Promise.all(includeFiles.map(async (filePath) => {\n        const ext = nodePath.extname(filePath);\n        // Always ignore dotfiles\n        if (filePath.startsWith('.')) {\n            return null;\n        }\n        // Probably a license, a README, etc\n        if (ext === '') {\n            return null;\n        }\n        // Our import scanner can handle normal JS & even TypeScript without a problem.\n        if (ext === '.js' || ext === '.mjs' || ext === '.ts') {\n            return fs.promises.readFile(filePath, 'utf-8');\n        }\n        // JSX breaks our import scanner, so we need to transform it before sending it to our scanner.\n        if (ext === '.jsx' || ext === '.tsx') {\n            const esbuildPath = require.resolve('esbuild');\n            const esbuildBinPath = path.join(esbuildPath, '..', '..', 'bin', 'esbuild');\n            const { stdout, stderr } = await execa(esbuildBinPath, [filePath]);\n            return stdout;\n        }\n        if (ext === '.vue' || ext === '.svelte') {\n            const result = await fs.promises.readFile(filePath, 'utf-8');\n            // TODO: Replace with matchAll once Node v10 is out of TLS.\n            // const allMatches = [...result.matchAll(HTML_JS_REGEX)];\n            const allMatches = [];\n            let match;\n            while ((match = HTML_JS_REGEX.exec(result))) {\n                allMatches.push(match);\n            }\n            return allMatches.map(([full, code]) => code).join('\\n');\n        }\n        // If we don't recognize the file type, it could be source. Warn just in case.\n        if (!mime.lookup(nodePath.extname(filePath))) {\n            console.warn(chalk.dim(`ignoring unsupported file \"${nodePath.relative(process.cwd(), filePath)}\"`));\n        }\n        return null;\n    }));\n    return loadedFiles\n        .filter((code) => !!code)\n        .map((code) => getInstallTargetsForFile(code))\n        .reduce((flat, item) => flat.concat(item), [])\n        .sort((impA, impB) => impA.specifier.localeCompare(impB.specifier));\n}\n","import chalk from 'chalk';\n/** The minimum width, in characters, of each size column */\nconst SIZE_COLUMN_WIDTH = 11;\n/** Generic Object.entries() alphabetical sort by keys. */\nfunction entriesSort([filenameA], [filenameB]) {\n    return filenameA.localeCompare(filenameB);\n}\n/** Pretty-prints number of bytes as \"XXX KB\" */\nfunction formatSize(size) {\n    let kb = Math.round((size / 1000) * 100) / 100;\n    if (kb >= 1000) {\n        kb = Math.floor(kb);\n    }\n    let color;\n    if (kb < 15) {\n        color = 'green';\n    }\n    else if (kb < 30) {\n        color = 'yellow';\n    }\n    else {\n        color = 'red';\n    }\n    return chalk[color](`${kb} KB`.padEnd(SIZE_COLUMN_WIDTH));\n}\nfunction formatDelta(delta) {\n    const kb = Math.round(delta * 100) / 100;\n    const color = delta > 0 ? 'red' : 'green';\n    return chalk[color](`Δ ${delta > 0 ? '+' : ''}${kb} KB`);\n}\nfunction formatFileInfo(filename, stats, padEnd, isLastFile) {\n    const lineGlyph = chalk.dim(isLastFile ? '└─' : '├─');\n    const lineName = filename.padEnd(padEnd);\n    const fileStat = formatSize(stats.size);\n    const gzipStat = formatSize(stats.gzip);\n    const brotliStat = formatSize(stats.brotli);\n    const lineStat = fileStat + gzipStat + brotliStat;\n    let lineDelta = '';\n    if (stats.delta) {\n        lineDelta = chalk.dim('[') + formatDelta(stats.delta) + chalk.dim(']');\n    }\n    // Trim trailing whitespace (can mess with formatting), but keep indentation.\n    return `    ` + `${lineGlyph} ${lineName} ${lineStat} ${lineDelta}`.trim();\n}\nfunction formatFiles(files, padEnd) {\n    const strippedFiles = files.map(([filename, stats]) => [\n        filename.replace(/^common\\//, ''),\n        stats,\n    ]);\n    return strippedFiles\n        .map(([filename, stats], index) => formatFileInfo(filename, stats, padEnd, index >= files.length - 1))\n        .join('\\n');\n}\nexport function printStats(dependencyStats) {\n    let output = '';\n    const { direct, common } = dependencyStats;\n    const allDirect = Object.entries(direct).sort(entriesSort);\n    const allCommon = Object.entries(common).sort(entriesSort);\n    const maxFileNameLength = [...allCommon, ...allDirect].reduce((max, [filename]) => Math.max(filename.length, max), 'web_modules/'.length) + 1;\n    output +=\n        `  ⦿ ${chalk.bold('web_modules/'.padEnd(maxFileNameLength + 4))}` +\n            chalk.bold.underline('size'.padEnd(SIZE_COLUMN_WIDTH - 2)) +\n            '  ' +\n            chalk.bold.underline('gzip'.padEnd(SIZE_COLUMN_WIDTH - 2)) +\n            '  ' +\n            chalk.bold.underline('brotli'.padEnd(SIZE_COLUMN_WIDTH - 2)) +\n            `\\n`;\n    output += `${formatFiles(allDirect, maxFileNameLength)}\\n`;\n    if (Object.values(common).length > 0) {\n        output += `  ⦿ ${chalk.bold('web_modules/common/ (Shared)')}\\n`;\n        output += `${formatFiles(allCommon, maxFileNameLength)}\\n`;\n    }\n    return `\\n${output}\\n`;\n}\n","import path from 'path';\n/**\n * rollup-plugin-react-fix\n *\n * React is such a strange package, and causes some strange bug in\n * Rollup where this export is expected but missing. Adding it back\n * ourselves manually here.\n */\nexport function rollupPluginReactFix() {\n    return {\n        name: 'snowpack:rollup-plugin-react-fix',\n        transform(code, id) {\n            if (id.endsWith(path.join('react', 'index.js'))) {\n                return code + `\\nexport { react as __moduleExports };`;\n            }\n        },\n    };\n}\n","import rollupPluginAlias from '@rollup/plugin-alias';\nimport rollupPluginCommonjs from '@rollup/plugin-commonjs';\nimport rollupPluginJson from '@rollup/plugin-json';\nimport rollupPluginNodeResolve from '@rollup/plugin-node-resolve';\nimport rollupPluginReplace from '@rollup/plugin-replace';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport isNodeBuiltin from 'is-builtin-module';\nimport mkdirp from 'mkdirp';\nimport ora from 'ora';\nimport path from 'path';\nimport rimraf from 'rimraf';\nimport { rollup } from 'rollup';\nimport validatePackageName from 'validate-npm-package-name';\nimport yargs from 'yargs-parser';\nimport { command as buildCommand } from './commands/build';\nimport { command as devCommand } from './commands/dev';\nimport { loadAndValidateConfig } from './config.js';\nimport { clearCache, resolveTargetsFromRemoteCDN } from './resolve-remote.js';\nimport { rollupPluginEntrypointAlias } from './rollup-plugin-entrypoint-alias.js';\nimport { rollupPluginDependencyCache } from './rollup-plugin-remote-cdn.js';\nimport { rollupPluginDependencyStats } from './rollup-plugin-stats.js';\nimport { scanDepList, scanImports } from './scan-imports.js';\nimport { printStats } from './stats-formatter.js';\nimport { isTruthy, MISSING_PLUGIN_SUGGESTIONS, readLockfile, resolveDependencyManifest, writeLockfile, } from './util.js';\nimport { rollupPluginReactFix } from './rollup-plugin-react-fix';\nconst ALWAYS_SHOW_ERRORS = new Set(['react', 'react-dom']);\nconst cwd = process.cwd();\nconst banner = chalk.bold(`snowpack`) + ` installing... `;\nconst installResults = [];\nlet dependencyStats = null;\nlet spinner = ora(banner);\nlet spinnerHasError = false;\nfunction printHelp() {\n    console.log(`\n${chalk.bold(`snowpack`)} - Install npm dependencies to run natively on the web.\n${chalk.bold('Options:')}\n  --dest [path]             Specify destination directory (default: \"web_modules/\").\n  --clean                   Clear out the destination directory before install.\n  --optimize                Transpile, minify, and optimize installed dependencies for production.\n  --env                     Set environment variable(s) inside dependencies:\n                                - if only NAME given, reads value from real env var\n                                - if \\`NAME=value\\`, uses given value\n                                - NODE_ENV defaults to \"production\" with \"--optimize\" (overridable)\n  --babel                   Transpile installed dependencies. Also enabled with \"--optimize\".\n  --include [glob]          Auto-detect imports from file(s). Supports glob.\n  --exclude [glob]          Exclude files from --include. Follows glob’s ignore pattern.\n  --config [path]           Location of Snowpack config file.\n  --strict                  Only install pure ESM dependency trees. Fail if a CJS module is encountered.\n  --no-source-map           Skip emitting source map files (.js.map) into dest\n  --stat                    Logs install statistics after installing, with information on install targets and file sizes. Useful for CI, performance review.\n  --nomodule [path]         Your app’s entry file for generating a <script nomodule> bundle\n  --nomodule-output [path]  Filename for nomodule output (default: \"app.nomodule.js\")\n    ${chalk.bold('Advanced:')}\n  --external-package [val]  Internal use only, may be removed at any time.\n    `.trim());\n}\nfunction formatInstallResults() {\n    return installResults\n        .map(([d, result]) => {\n        if (result === 'SUCCESS') {\n            return chalk.green(d);\n        }\n        if (result === 'ASSET') {\n            return chalk.yellow(d);\n        }\n        if (result === 'FAIL') {\n            return chalk.red(d);\n        }\n        return d;\n    })\n        .join(', ');\n}\nfunction logError(msg) {\n    if (!spinnerHasError) {\n        spinner.stopAndPersist({ symbol: chalk.cyan('⠼') });\n    }\n    spinnerHasError = true;\n    spinner = ora(chalk.red(msg));\n    spinner.fail();\n}\nfunction logUpdate(msg) {\n    spinner.text = banner + msg;\n}\nclass ErrorWithHint extends Error {\n    constructor(message, hint) {\n        super(message);\n        this.hint = hint;\n    }\n}\n// Add common, well-used non-esm packages here so that Rollup doesn't die trying to analyze them.\nconst PACKAGES_TO_AUTO_DETECT_EXPORTS = [\n    path.join('react', 'index.js'),\n    path.join('react-dom', 'index.js'),\n    'react-is',\n    'prop-types',\n    'scheduler',\n    'rxjs',\n    'exenv',\n    'body-scroll-lock',\n];\nfunction detectExports(filePath) {\n    try {\n        const fileLoc = require.resolve(filePath, { paths: [cwd] });\n        if (fs.existsSync(fileLoc)) {\n            return Object.keys(require(fileLoc)).filter((e) => e[0] !== '_');\n        }\n    }\n    catch (err) {\n        // ignore\n    }\n}\n/**\n * Resolve a \"webDependencies\" input value to the correct absolute file location.\n * Supports both npm package names, and file paths relative to the node_modules directory.\n * Follows logic similar to Node's resolution logic, but using a package.json's ESM \"module\"\n * field instead of the CJS \"main\" field.\n */\nfunction resolveWebDependency(dep, isExplicit) {\n    // if dep includes a file extension, check that dep isn't a package before returning\n    if (path.extname(dep) && !validatePackageName(dep).validForNewPackages) {\n        const isJSFile = ['.js', '.mjs', '.cjs'].includes(path.extname(dep));\n        return {\n            type: isJSFile ? 'JS' : 'ASSET',\n            loc: require.resolve(dep, { paths: [cwd] }),\n        };\n    }\n    const [depManifestLoc, depManifest] = resolveDependencyManifest(dep, cwd);\n    if (!depManifest) {\n        throw new ErrorWithHint(`\"${dep}\" not found. Have you installed the package via npm?`, depManifestLoc && chalk.italic(depManifestLoc));\n    }\n    if (depManifest.name &&\n        (depManifest.name.startsWith('@reactesm') || depManifest.name.startsWith('@pika/react'))) {\n        throw new Error(`React workaround packages no longer needed! Revert back to the official React & React-DOM packages.`);\n    }\n    let foundEntrypoint = depManifest['browser:module'] ||\n        depManifest.module ||\n        depManifest['main:esnext'] ||\n        depManifest.browser;\n    // Some packages define \"browser\" as an object. We'll do our best to find the\n    // right entrypoint in an entrypoint object, or fail otherwise.\n    // See: https://github.com/defunctzombie/package-browser-field-spec\n    if (typeof foundEntrypoint === 'object') {\n        foundEntrypoint =\n            foundEntrypoint[dep] ||\n                foundEntrypoint['./index.js'] ||\n                foundEntrypoint['./index'] ||\n                foundEntrypoint['./'] ||\n                foundEntrypoint['.'];\n    }\n    // If the package was a part of the explicit whitelist, fallback to it's main CJS entrypoint.\n    if (!foundEntrypoint && isExplicit) {\n        foundEntrypoint = depManifest.main || 'index.js';\n    }\n    if (typeof foundEntrypoint !== 'string') {\n        throw new Error(`\"${dep}\" has unexpected entrypoint: ${JSON.stringify(foundEntrypoint)}.`);\n    }\n    return {\n        type: 'JS',\n        loc: path.join(depManifestLoc, '..', foundEntrypoint),\n    };\n}\n/**\n * Formats the snowpack dependency name from a \"webDependencies\" input value:\n * 2. Remove any \".js\"/\".mjs\" extension (will be added automatically by Rollup)\n */\nfunction getWebDependencyName(dep) {\n    return dep.replace(/\\.m?js$/i, '');\n}\n/**\n * Takes object of env var mappings and converts it to actual\n * replacement specs as expected by @rollup/plugin-replace. The\n * `optimize` arg is used to derive NODE_ENV default.\n *\n * @param env\n * @param optimize\n */\nfunction getRollupReplaceKeys(env) {\n    const result = Object.keys(env).reduce((acc, id) => {\n        const val = env[id];\n        acc[`process.env.${id}`] = `${JSON.stringify(val === true ? process.env[id] : val)}`;\n        return acc;\n    }, {\n        'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV || 'production'),\n        'process.env.': '({}).',\n    });\n    return result;\n}\nexport async function install(installTargets, { hasBrowserlistConfig, lockfile }, config) {\n    const { webDependencies, installOptions: { installTypes, dest: destLoc, externalPackage: externalPackages, alias: installAlias, sourceMap, env, rollup: userDefinedRollup, }, } = config;\n    const knownNamedExports = { ...userDefinedRollup.namedExports };\n    for (const filePath of PACKAGES_TO_AUTO_DETECT_EXPORTS) {\n        knownNamedExports[filePath] = knownNamedExports[filePath] || detectExports(filePath) || [];\n    }\n    // @ts-ignore\n    if (!webDependencies && !process.versions.pnp && !fs.existsSync(path.join(cwd, 'node_modules'))) {\n        logError('no \"node_modules\" directory exists. Did you run \"npm install\" first?');\n        return;\n    }\n    const allInstallSpecifiers = new Set(installTargets\n        .filter((dep) => !externalPackages.includes(dep.specifier))\n        .map((dep) => dep.specifier)\n        .map((specifier) => installAlias[specifier] || specifier)\n        .sort());\n    const installEntrypoints = {};\n    const assetEntrypoints = {};\n    const importMap = { imports: {} };\n    const installTargetsMap = {};\n    const skipFailures = false;\n    for (const installSpecifier of allInstallSpecifiers) {\n        const targetName = getWebDependencyName(installSpecifier);\n        if (lockfile && lockfile.imports[installSpecifier]) {\n            installEntrypoints[targetName] = lockfile.imports[installSpecifier];\n            importMap.imports[installSpecifier] = `./${targetName}.js`;\n            installResults.push([targetName, 'SUCCESS']);\n            logUpdate(formatInstallResults());\n            continue;\n        }\n        try {\n            const { type: targetType, loc: targetLoc } = resolveWebDependency(installSpecifier, true);\n            if (targetType === 'JS') {\n                installEntrypoints[targetName] = targetLoc;\n                importMap.imports[installSpecifier] = `./${targetName}.js`;\n                Object.entries(installAlias)\n                    .filter(([key, value]) => value === installSpecifier)\n                    .forEach(([key, value]) => {\n                    importMap.imports[key] = `./${targetName}.js`;\n                });\n                installTargetsMap[targetLoc] = installTargets.filter((t) => installSpecifier === t.specifier);\n                installResults.push([installSpecifier, 'SUCCESS']);\n            }\n            else if (targetType === 'ASSET') {\n                assetEntrypoints[targetName] = targetLoc;\n                installResults.push([installSpecifier, 'ASSET']);\n            }\n            logUpdate(formatInstallResults());\n        }\n        catch (err) {\n            installResults.push([installSpecifier, 'FAIL']);\n            logUpdate(formatInstallResults());\n            if (skipFailures && !ALWAYS_SHOW_ERRORS.has(installSpecifier)) {\n                continue;\n            }\n            // An error occurred! Log it.\n            logError(err.message || err);\n            if (err.hint) {\n                // Note: Wait 1ms to guarantee a log message after the spinner\n                setTimeout(() => console.log(err.hint), 1);\n            }\n            return false;\n        }\n    }\n    if (Object.keys(installEntrypoints).length === 0 && Object.keys(assetEntrypoints).length === 0) {\n        logError(`No ESM dependencies found!`);\n        console.log(chalk.dim(`  At least one dependency must have an ESM \"module\" entrypoint. You can find modern, web-ready packages at ${chalk.underline('https://www.pika.dev')}`));\n        return false;\n    }\n    let isCircularImportFound = false;\n    const inputOptions = {\n        input: installEntrypoints,\n        external: externalPackages,\n        treeshake: { moduleSideEffects: 'no-external' },\n        plugins: [\n            rollupPluginReplace(getRollupReplaceKeys(env)),\n            rollupPluginEntrypointAlias({ cwd }),\n            !!webDependencies &&\n                rollupPluginDependencyCache({\n                    installTypes,\n                    log: (url) => logUpdate(chalk.dim(url)),\n                }),\n            rollupPluginAlias({\n                entries: Object.entries(installAlias).map(([alias, mod]) => ({\n                    find: alias,\n                    replacement: mod,\n                })),\n            }),\n            rollupPluginNodeResolve({\n                mainFields: ['browser:module', 'module', 'browser', 'main'].filter(isTruthy),\n                extensions: ['.mjs', '.cjs', '.js', '.json'],\n                // whether to prefer built-in modules (e.g. `fs`, `path`) or local ones with the same names\n                preferBuiltins: false,\n                dedupe: userDefinedRollup.dedupe,\n            }),\n            rollupPluginJson({\n                preferConst: true,\n                indent: '  ',\n                compact: false,\n                namedExports: true,\n            }),\n            rollupPluginCommonjs({\n                extensions: ['.js', '.cjs'],\n                namedExports: knownNamedExports,\n            }),\n            rollupPluginDependencyStats((info) => (dependencyStats = info)),\n            rollupPluginReactFix(),\n            ...userDefinedRollup.plugins,\n        ].filter(Boolean),\n        onwarn(warning, warn) {\n            if (warning.code === 'CIRCULAR_DEPENDENCY') {\n                if (!isCircularImportFound) {\n                    isCircularImportFound = true;\n                    logError(`Warning: 1+ circular dependencies found via \"${warning.importer}\".`);\n                }\n                return;\n            }\n            if (warning.code === 'UNRESOLVED_IMPORT') {\n                logError(`'${warning.source}' is imported by '${warning.importer}', but could not be resolved.`);\n                if (isNodeBuiltin(warning.source)) {\n                    console.log(chalk.dim(`  '${warning.source}' is a Node.js builtin module that won't exist in the browser.`));\n                    console.log(chalk.dim(`  Find a more web-friendly alternative, or add the \"rollup-plugin-node-polyfills\" plugin to your Snowpack config file.`));\n                }\n                else {\n                    console.log(chalk.dim(`  Make sure that the package is installed and that the file exists.`));\n                }\n                return;\n            }\n            warn(warning);\n        },\n    };\n    const outputOptions = {\n        dir: destLoc,\n        format: 'esm',\n        sourcemap: sourceMap,\n        exports: 'named',\n        chunkFileNames: 'common/[name]-[hash].js',\n    };\n    if (Object.keys(installEntrypoints).length > 0) {\n        try {\n            const packageBundle = await rollup(inputOptions);\n            logUpdate(formatInstallResults());\n            await packageBundle.write(outputOptions);\n        }\n        catch (err) {\n            const { loc } = err;\n            if (!loc || !loc.file) {\n                throw err;\n            }\n            // NOTE: Rollup will fail instantly on error. Because of that, we can\n            // only report one error at a time. `err.watchFiles` also exists, but\n            // for now `err.loc.file` has all the information that we need.\n            const failedExtension = path.extname(loc.file);\n            const suggestion = MISSING_PLUGIN_SUGGESTIONS[failedExtension];\n            if (!suggestion) {\n                throw err;\n            }\n            // Display posix-style on all environments, mainly to help with CI :)\n            const fileName = loc.file.replace(cwd + path.sep, '').replace(/\\\\/g, '/');\n            logError(`${chalk.bold('snowpack')} could not import ${fileName}. ${suggestion}`);\n            return;\n        }\n    }\n    await writeLockfile(path.join(destLoc, 'import-map.json'), importMap);\n    Object.entries(assetEntrypoints).forEach(([assetName, assetLoc]) => {\n        mkdirp.sync(path.dirname(`${destLoc}/${assetName}`));\n        fs.copyFileSync(assetLoc, `${destLoc}/${assetName}`);\n    });\n    return true;\n}\nexport async function cli(args) {\n    // parse CLI flags\n    const cliFlags = yargs(args, { array: ['env', 'exclude', 'externalPackage'] });\n    if (cliFlags.help) {\n        printHelp();\n        process.exit(0);\n    }\n    if (cliFlags.version) {\n        console.log(require('../package.json').version);\n        process.exit(0);\n    }\n    if (cliFlags.reload) {\n        console.log(`${chalk.yellow('ℹ')} clearing CDN cache...`);\n        await clearCache();\n    }\n    if (cliFlags['_'].length > 3) {\n        console.log(`Unexpected multiple commands`);\n        process.exit(1);\n    }\n    // Load the current package manifest\n    let pkgManifest;\n    try {\n        pkgManifest = require(path.join(cwd, 'package.json'));\n    }\n    catch (err) {\n        console.log(chalk.red('[ERROR] package.json required but no file was found.'));\n        process.exit(1);\n    }\n    // load config\n    const config = loadAndValidateConfig(cliFlags, pkgManifest);\n    // load lockfile\n    let lockfile = await readLockfile(cwd);\n    let newLockfile = null;\n    if (cliFlags['_'][2] === 'build') {\n        await buildCommand({\n            cwd,\n            config,\n        });\n        return;\n    }\n    if (cliFlags['_'][2] === 'dev') {\n        await devCommand({\n            cwd,\n            config,\n        });\n        return;\n    }\n    const { exclude, scripts, installOptions: { dest }, knownEntrypoints, webDependencies, } = config;\n    const hasBrowserlistConfig = !!pkgManifest.browserslist ||\n        !!process.env.BROWSERSLIST ||\n        fs.existsSync(path.join(cwd, '.browserslistrc')) ||\n        fs.existsSync(path.join(cwd, 'browserslist'));\n    const installTargets = [];\n    if (knownEntrypoints) {\n        installTargets.push(...scanDepList(knownEntrypoints, cwd));\n    }\n    if (webDependencies) {\n        installTargets.push(...scanDepList(Object.keys(webDependencies), cwd));\n    }\n    {\n        installTargets.push(...(await scanImports(cwd, config)));\n    }\n    if (installTargets.length === 0) {\n        logError('Nothing to install.');\n        return;\n    }\n    spinner.start();\n    const startTime = Date.now();\n    if (webDependencies && Object.keys(webDependencies).length > 0) {\n        newLockfile = await resolveTargetsFromRemoteCDN(lockfile, pkgManifest, config).catch((err) => {\n            logError(err.message || err);\n            process.exit(1);\n        });\n    }\n    rimraf.sync(dest);\n    await mkdirp(dest);\n    const finalResult = await install(installTargets, { hasBrowserlistConfig, lockfile: newLockfile }, config).catch((err) => {\n        if (err.loc) {\n            console.log('\\n' + chalk.red.bold(`✘ ${err.loc.file}`));\n        }\n        if (err.url) {\n            console.log(chalk.dim(`👉 ${err.url}`));\n        }\n        throw err;\n    });\n    if (finalResult) {\n        spinner.succeed(chalk.bold(`snowpack`) +\n            ` install complete.` +\n            chalk.dim(` [${((Date.now() - startTime) / 1000).toFixed(2)}s]`));\n        if (!!dependencyStats) {\n            console.log(printStats(dependencyStats));\n        }\n    }\n    if (newLockfile) {\n        await writeLockfile(path.join(cwd, 'snowpack.lock.json'), newLockfile);\n    }\n    // If an error happened, set the exit code so that programmatic usage of the CLI knows.\n    // We were seeing race conditions here, so add a little buffer.\n    if (spinnerHasError) {\n        setTimeout(() => {\n            spinner.warn(chalk(`Finished with warnings.`));\n            process.exitCode = 1;\n        }, 20);\n    }\n}\n"],"names":["getStateString","workerState","isWatch","state","Array","isArray","chalk","dim","done","error","red","green","config","watch","WORKER_BASE_STATE","output","paint","bus","registeredWorkers","buildMode","devMode","consoleOutput","hasBeenCleared","missingWebModule","allWorkerStates","workerId","repaint","process","stdout","write","ansiEscapes","clearTerminal","bold","cyan","port","ip","ips","startTimeMs","dest","dotLength","length","dots","padEnd","stateStr","missingPackageName","deepPackagePathParts","split","startsWith","shift","underline","chalkFn","trim","replace","overallStatus","Object","values","reduce","result","exit","on","id","msg","undefined","level","args","util","format","apply","specifier","jsx","ts","tsx","vue","svelte","php","parse","require","spliceString","source","withSlice","start","end","slice","scanCodeImportsExports","code","imports","filter","imp","d","importStatement","substring","s","e","importSpecifierMatch","match","transformEsmImports","_code","replaceImport","rewrittenCode","reverse","spec","rewrittenImport","JSON","stringify","wrapEsmProxyResponse","url","ext","hasHmr","copy","command","cwd","env","NODE_ENV","messageBus","EventEmitter","allRegisteredWorkers","entries","scripts","relevantWorkers","allBuildExtensions","allWorkerPromises","dependencyImportMapLoc","path","join","installOptions","dependencyImportMap","err","isBundled","devOptions","bundle","isBundledHardcoded","resolve","paths","buildDirectoryLoc","out","finalDirectoryLoc","console","workerConfig","cmdArr","cmd","Error","dirUrl","dirDisk","to","yargs","rimraf","sync","mkdirp","push","log","emit","warn","relDest","relative","sep","workerPromise","execa","npmRunPath","extendEnv","shell","catch","toString","then","stderr","b","stdOutput","includes","endsWith","test","errorMatch","mountDirDetails","map","scriptConfig","dirDest","Boolean","includeFileSets","allFiles","glob","ignore","exclude","absolute","nodir","dot","allBuildNeededFiles","Promise","all","f","extname","substr","outPath","dirname","fs","copyFile","readFile","encoding","extToReplace","srcFileExtensionMapping","RegExp","resolvedUrl","allProxiedFiles","add","posix","writeFile","allBuiltFromFiles","Set","fileExtension","input","createReadStream","extToFind","mkdir","recursive","modulePath","build","message","proxiedFileLoc","proxiedCode","proxiedExt","proxiedUrl","proxyCode","proxyFileLoc","prepareBuildDirectoryForParcel","srcLoc","has","tempBuildManifest","name","babel","devDependencies","browserslist","fallbackFile","fallback","parcelOptions","homepage","bundleAppPromise","PIKA_CDN","CACHE_DIR","cachedir","RESOURCE_CACHE","BUILD_CACHE","HAS_CDN_HASH_REGEX","readLockfile","lockfileContents","readFileSync","writeLockfile","loc","importMap","sortedImportMap","key","keys","sort","writeFileSync","fetchCDNResource","resourceUrl","responseType","got","headers","throwHttpErrors","isTruthy","item","resolveDependencyManifest","dep","depManifest","fullPath","searchPath","indexOfSearch","lastIndexOf","manifestPath","manifestStr","MISSING_PLUGIN_SUGGESTIONS","getEncodingType","sendFile","req","res","body","writeHead","mime","contentType","sendError","status","sendMessage","channel","data","inMemoryBuildCache","Map","filesBeingDeleted","filesBeingBuilt","liveReloadClients","serverStart","Date","now","hmrCode","__dirname","mountedDirectories","broadcastMessage","client","setTimeout","getUrlFromFile","fileLoc","fileExt","resolvedDirUrl","buildFile","fileContents","fileBuilder","fileBuilderPromise","get","filename","set","delete","getFileBuilderForWorker","selectedWorker","options","cmdWithFile","http","createServer","reqUrl","reqPath","decodeURI","pathname","method","statusCode","Connection","setInterval","splice","indexOf","attemptedFileLoads","attemptLoadFile","requestedFile","stat","isFile","isProxyModule","requestedFileExt","toLowerCase","isRoute","responseFileExt","getFileFromUrl","resource","extMatcher","srcFile","prefix","hotCachedResponse","cachedBuildData","cacache","originalFileHash","metadata","newFileHash","etag","coldCachedResponse","serverResponse","checkFinalBuildAnyway","equals","Buffer","from","clear","rm","finalBuild","put","listen","onWatchEvent","fileUrl","entry","watcher","chokidar","ignored","persistent","ignoreInitial","disableGlobbing","os","networkInterfaces","every","i","family","internal","address","openInBrowser","openCmd","platform","CONFIG_NAME","ALWAYS_EXCLUDE","DEFAULT_CONFIG","knownEntrypoints","externalPackage","installTypes","alias","rollup","plugins","dedupe","configSchema","type","properties","extends","items","webDependencies","additionalProperties","sourceMap","oneOf","enum","namedExports","expandCliFlags","flags","relevantFlags","flag","val","acc","index","normalizeConfig","scriptId","scriptType","exts","handleConfigError","handleValidationErrors","filepath","errors","handleDeprecatedConfigError","mainMsg","msgs","forEach","validateConfigAgainstV1","rawConfig","cliFlags","include","entrypoints","dist","hash","nomodule","nomoduleOutput","optimize","strict","loadAndValidateConfig","pkgManifest","explorerSync","cosmiconfigSync","searchPlaces","stopDir","load","search","isEmpty","cliConfig","validation","validate","allowUnknownAttributes","propertyName","extendConfig","extendConfigLoc","extendResult","extendValidation","overwriteMerge","destinationArray","sourceArray","mergedConfig","merge","arrayMerge","webDependencyName","dependencies","resolveDependency","installSpecifier","packageSemver","lockfile","canRetry","validatePackageName","validForNewPackages","installUrl","installUrlType","cachedResult","info","pinnedUrl","importUrlPath","pinnedUrlPath","buildStatus","typesUrlPath","typesUrl","lookupStatusCode","resolveTargetsFromRemoteCDN","downloadQueue","PQueue","concurrency","newLockfile","resolutionError","installSemver","onIdle","clearCache","IS_DEEP_PACKAGE_IMPORT","rollupPluginEntrypointAlias","resolveId","importer","packageScope","packageName","packageFullName","manifest","_manifest","needsAlias","module","browser","main","skipSelf","resolved","CACHED_FILE_ID_PREFIX","PIKA_CDN_TRIM_LENGTH","rollupPluginDependencyCache","allTypesToInstall","cacheKey","response","finalResult","typesTarballUrl","writeBundle","dir","tempDir","tmp","tarballContents","cachedTarball","tarballResponse","typesUrlParts","typesPackageName","typesPackageTarLoc","typesPackageLoc","tar","x","file","rollupPluginDependencyStats","cb","outputDir","existingFileCache","statsSummary","direct","common","buildExistingFileCache","fileName","filePath","existsSync","size","statSync","compareDependencies","files","contents","byteLength","gzip","zlib","gzipSync","brotli","brotliCompressSync","delta","generateBundle","directDependencies","commonDependencies","assetOrChunk","raw","isBuffer","WEB_MODULES_TOKEN","WEB_MODULES_TOKEN_LENGTH","BARE_SPECIFIER_REGEX","HAS_NAMED_IMPORTS_REGEX","SPLIT_NAMED_IMPORTS_REGEX","DEFAULT_IMPORT_REGEX","HTML_JS_REGEX","stripJsExtension","createInstallTarget","default","namespace","named","removeSpecifierQueryString","queryStringIndex","getWebModuleSpecifierFromCode","parseWebModuleSpecifier","cleanedSpecifier","webModulesIndex","resolvedSpecifier","resolvedSpecifierWithoutExtension","parseImportStatement","webModuleSpecifier","ss","se","dynamicImport","defaultImport","namespaceImport","namedImports","getInstallTargetsForFile","allImports","scanDepList","depList","whitelistItem","hasMagic","nodeModulesLoc","nodePath","flat","concat","scanImports","initESModuleLexer","includeFiles","loadedFiles","promises","esbuildPath","esbuildBinPath","allMatches","exec","full","lookup","impA","impB","localeCompare","SIZE_COLUMN_WIDTH","entriesSort","filenameA","filenameB","formatSize","kb","Math","round","floor","color","formatDelta","formatFileInfo","stats","isLastFile","lineGlyph","lineName","fileStat","gzipStat","brotliStat","lineStat","lineDelta","formatFiles","strippedFiles","printStats","dependencyStats","allDirect","allCommon","maxFileNameLength","max","rollupPluginReactFix","transform","banner","installResults","spinner","ora","spinnerHasError","printHelp","formatInstallResults","yellow","logError","stopAndPersist","symbol","fail","logUpdate","text","ErrorWithHint","constructor","hint","PACKAGES_TO_AUTO_DETECT_EXPORTS","detectExports","resolveWebDependency","isExplicit","isJSFile","depManifestLoc","italic","foundEntrypoint","getWebDependencyName","getRollupReplaceKeys","install","installTargets","hasBrowserlistConfig","destLoc","externalPackages","installAlias","userDefinedRollup","knownNamedExports","versions","pnp","allInstallSpecifiers","installEntrypoints","assetEntrypoints","installTargetsMap","targetName","targetType","targetLoc","value","t","isCircularImportFound","inputOptions","external","treeshake","moduleSideEffects","rollupPluginReplace","rollupPluginAlias","mod","find","replacement","rollupPluginNodeResolve","mainFields","extensions","preferBuiltins","rollupPluginJson","preferConst","indent","compact","rollupPluginCommonjs","onwarn","warning","isNodeBuiltin","outputOptions","sourcemap","exports","chunkFileNames","packageBundle","failedExtension","suggestion","assetName","assetLoc","copyFileSync","cli","array","help","version","reload","buildCommand","devCommand","BROWSERSLIST","startTime","succeed","toFixed","exitCode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,SAASA,cAAT,CAAwBC,WAAxB,EAAqCC,OAArC,EAA8C;AAC1C,MAAID,WAAW,CAACE,KAAhB,EAAuB;AACnB,QAAIC,KAAK,CAACC,OAAN,CAAcJ,WAAW,CAACE,KAA1B,CAAJ,EAAsC;AAClC,aAAOG,KAAK,CAACL,WAAW,CAACE,KAAZ,CAAkB,CAAlB,CAAD,CAAL,CAA4BF,WAAW,CAACE,KAAZ,CAAkB,CAAlB,CAA5B,CAAP;AACH;;AACD,WAAOG,KAAK,CAACC,GAAN,CAAUN,WAAW,CAACE,KAAtB,CAAP;AACH;;AACD,MAAIF,WAAW,CAACO,IAAhB,EAAsB;AAClB,WAAOP,WAAW,CAACQ,KAAZ,GAAoBH,KAAK,CAACI,GAAN,CAAU,QAAV,CAApB,GAA0CJ,KAAK,CAACK,KAAN,CAAY,MAAZ,CAAjD;AACH;;AACD,MAAIT,OAAJ,EAAa;AACT,QAAID,WAAW,CAACW,MAAZ,CAAmBC,KAAvB,EAA8B;AAC1B,aAAOP,KAAK,CAACC,GAAN,CAAU,UAAV,CAAP;AACH;AACJ;;AACD,SAAOD,KAAK,CAACC,GAAN,CAAU,OAAV,CAAP;AACH;;AACD,MAAMO,iBAAiB,GAAG;AAAEN,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE,IAAtB;AAA4BM,EAAAA,MAAM,EAAE;AAApC,CAA1B;AACO,SAASC,KAAT,CAAeC,GAAf,EAAoBC,iBAApB,EAAuCC,SAAvC,EAAkDC,OAAlD,EAA2D;AAC9D,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,cAAc,GAAG,KAArB;AACA,MAAIC,gBAAgB,GAAG,IAAvB;AACA,QAAMC,eAAe,GAAG,EAAxB;;AACA,OAAK,MAAM,CAACC,QAAD,EAAWb,MAAX,CAAX,IAAiCM,iBAAjC,EAAoD;AAChDM,IAAAA,eAAe,CAACC,QAAD,CAAf,qCAAiCX,iBAAjC;AAAoDF,MAAAA;AAApD;AACH;;AACD,WAASc,OAAT,GAAmB;AACfC,IAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBC,WAAW,CAACC,aAAjC;AACAJ,IAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,GAAEvB,KAAK,CAAC0B,IAAN,CAAW,UAAX,CAAuB,MAA/C,EAFe;;AAIf,QAAIZ,OAAJ,EAAa;AACTO,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,KAAIvB,KAAK,CAAC0B,IAAN,CAAWC,IAAX,CAAiB,oBAAmBb,OAAO,CAACc,IAAK,EAAjD,CAAoD,EAA9E;;AACA,WAAK,MAAMC,EAAX,IAAiBf,OAAO,CAACgB,GAAzB,EAA8B;AAC1BT,QAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,GAAEvB,KAAK,CAAC2B,IAAN,CAAY,KAAZ,CAAkB,GAAE3B,KAAK,CAAC0B,IAAN,CAAWC,IAAX,CAAiB,UAASE,EAAG,IAAGf,OAAO,CAACc,IAAK,EAA7C,CAAgD,EAA5F;AACH;;AACDP,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,OAAOvB,KAAK,CAACC,GAAN,CAAW,uBAAsBa,OAAO,CAACiB,WAAY,SAArD,CAA5B;AACH;;AACD,QAAIlB,SAAJ,EAAe;AACXQ,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,OAAOvB,KAAK,CAAC0B,IAAN,CAAWC,IAAX,CAAgBd,SAAS,CAACmB,IAA1B,CAA5B;AACAX,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBvB,KAAK,CAACC,GAAN,CAAW,mCAAX,CAArB;AACH;;AACD,SAAK,MAAM,CAACkB,QAAD,EAAWb,MAAX,CAAX,IAAiCM,iBAAjC,EAAoD;AAChD,YAAMjB,WAAW,GAAGuB,eAAe,CAACC,QAAD,CAAnC;AACA,YAAMc,SAAS,GAAG,KAAKd,QAAQ,CAACe,MAAhC;AACA,YAAMC,IAAI,GAAG,GAAGC,MAAH,CAAUH,SAAV,EAAqB,GAArB,CAAb;AACA,YAAMI,QAAQ,GAAG3C,cAAc,CAACC,WAAD,EAAc,CAAC,CAACmB,OAAhB,CAA/B;AACAO,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,KAAIJ,QAAS,GAAEnB,KAAK,CAACC,GAAN,CAAUkC,IAAV,CAAgB,IAAGE,QAAS,KAAjE;AACH;;AACDhB,IAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,IAArB;;AACA,QAAIN,gBAAJ,EAAsB;AAClB,UAAI,CAACqB,kBAAD,EAAqB,GAAGC,oBAAxB,IAAgDtB,gBAAgB,CAACuB,KAAjB,CAAuB,GAAvB,CAApD;;AACA,UAAIF,kBAAkB,CAACG,UAAnB,CAA8B,GAA9B,CAAJ,EAAwC;AACpCH,QAAAA,kBAAkB,IAAI,MAAMC,oBAAoB,CAACG,KAArB,EAA5B;AACH;;AACDrB,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,GAAEvB,KAAK,CAACI,GAAN,CAAUuC,SAAV,CAAoBjB,IAApB,CAAyB,YAAzB,CAAuC,MAA/D;AACAL,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,aAAYvB,KAAK,CAAC0B,IAAN,CAAWT,gBAAX,CAA6B,wBAA/D;AACAI,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,8BAA6BvB,KAAK,CAAC0B,IAAN,CAAW,cAAX,CAA2B,oCAA9E;AACAL,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,cAAavB,KAAK,CAAC0B,IAAN,CAAWY,kBAAX,CAA+B,8DAAlE;AACAjB,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,cAAavB,KAAK,CAAC0B,IAAN,CAAW,kBAAX,CAA+B,oCAAlE;AACAL,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,IAArB;AACH;;AACD,SAAK,MAAM,CAACJ,QAAD,EAAWb,MAAX,CAAX,IAAiCM,iBAAjC,EAAoD;AAChD,YAAMjB,WAAW,GAAGuB,eAAe,CAACC,QAAD,CAAnC;;AACA,UAAIxB,WAAW,IAAIA,WAAW,CAACc,MAA/B,EAAuC;AACnC,cAAMmC,OAAO,GAAG9C,KAAK,CAACC,OAAN,CAAcJ,WAAW,CAACQ,KAA1B,IAAmCH,KAAK,CAACI,GAAzC,GAA+CJ,KAA/D;AACAqB,QAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,GAAEqB,OAAO,CAACD,SAAR,CAAkBjB,IAAlB,CAAuB,OAAOP,QAA9B,CAAwC,MAAhE;AACAE,QAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB5B,WAAW,CAACc,MAAZ,GACf,OAAOd,WAAW,CAACc,MAAZ,CAAmBoC,IAAnB,GAA0BC,OAA1B,CAAkC,MAAlC,EAA0C,MAA1C,CADQ,GAEf9B,cAAc,GACVhB,KAAK,CAACC,GAAN,CAAU,mBAAV,CADU,GAEVD,KAAK,CAACC,GAAN,CAAU,mBAAV,CAJV;AAKAoB,QAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,MAArB;AACH;AACJ;;AACD,QAAIR,aAAJ,EAAmB;AACfM,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,GAAEvB,KAAK,CAAC2C,SAAN,CAAgBjB,IAAhB,CAAqB,WAArB,CAAkC,MAA1D;AACAL,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBR,aAAa,GAC5B,OAAOA,aAAa,CAAC8B,IAAd,GAAqBC,OAArB,CAA6B,MAA7B,EAAqC,MAArC,CADqB,GAE5B9B,cAAc,GACVhB,KAAK,CAACC,GAAN,CAAU,mBAAV,CADU,GAEVD,KAAK,CAACC,GAAN,CAAU,mBAAV,CAJV;AAKAoB,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,MAArB;AACH;;AACD,UAAMwB,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc/B,eAAd,EAA+BgC,MAA/B,CAAsC,CAACC,MAAD,EAAS;AAAEjD,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAT,KAA6B;AACrF,aAAO;AACHD,QAAAA,IAAI,EAAEiD,MAAM,CAACjD,IAAP,IAAeA,IADlB;AAEHC,QAAAA,KAAK,EAAEgD,MAAM,CAAChD,KAAP,IAAgBA;AAFpB,OAAP;AAIH,KALqB,CAAtB;;AAMA,QAAI4C,aAAa,CAAC5C,KAAlB,EAAyB;AACrBkB,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,GAAEvB,KAAK,CAAC2C,SAAN,CAAgBvC,GAAhB,CAAoBsB,IAApB,CAAyB,UAAzB,CAAqC,MAA7D;AACAL,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,8BAArB;AACAF,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,MAArB;AACAF,MAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH,KALD,MAMK,IAAIL,aAAa,CAAC7C,IAAlB,EAAwB;AACzBmB,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,GAAEvB,KAAK,CAAC2C,SAAN,CAAgBtC,KAAhB,CAAsBqB,IAAtB,CAA2B,mBAA3B,CAAgD,MAAxE;AACH;AACJ;;AACDf,EAAAA,GAAG,CAAC0C,EAAJ,CAAO,YAAP,EAAqB,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KAAiB;AAClCrC,IAAAA,eAAe,CAACoC,EAAD,CAAf,CAAoB7C,MAApB,IAA8B8C,GAA9B;AACAnC,IAAAA,OAAO;AACV,GAHD;AAIAT,EAAAA,GAAG,CAAC0C,EAAJ,CAAO,eAAP,EAAwB,CAAC;AAAEC,IAAAA,EAAF;AAAMzD,IAAAA;AAAN,GAAD,KAAmB;AACvC,QAAI,OAAOA,KAAP,KAAiB2D,SAArB,EAAgC;AAC5BtC,MAAAA,eAAe,CAACoC,EAAD,CAAf,CAAoBzD,KAApB,GAA4BA,KAA5B;AACH;;AACDuB,IAAAA,OAAO;AACV,GALD;AAMAT,EAAAA,GAAG,CAAC0C,EAAJ,CAAO,iBAAP,EAA0B,CAAC;AAAEC,IAAAA,EAAF;AAAMnD,IAAAA;AAAN,GAAD,KAAmB;AACzCe,IAAAA,eAAe,CAACoC,EAAD,CAAf,CAAoBzD,KAApB,GAA4B,IAA5B;AACAqB,IAAAA,eAAe,CAACoC,EAAD,CAAf,CAAoBpD,IAApB,GAA2B,IAA3B;AACAgB,IAAAA,eAAe,CAACoC,EAAD,CAAf,CAAoBnD,KAApB,GAA4Be,eAAe,CAACoC,EAAD,CAAf,CAAoBnD,KAApB,IAA6BA,KAAzD;AACAiB,IAAAA,OAAO;AACV,GALD;AAMAT,EAAAA,GAAG,CAAC0C,EAAJ,CAAO,cAAP,EAAuB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAY;AAC/BpC,IAAAA,eAAe,CAACoC,EAAD,CAAf,qCAA2B9C,iBAA3B;AAA8CF,MAAAA,MAAM,EAAEY,eAAe,CAACoC,EAAD,CAAf,CAAoBhD;AAA1E;AACAc,IAAAA,OAAO;AACV,GAHD;AAIAT,EAAAA,GAAG,CAAC0C,EAAJ,CAAO,SAAP,EAAkB,CAAC;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAqB;AACnC3C,IAAAA,aAAa,IAAK,IAAG0C,KAAM,KAAIE,IAAI,CAACC,MAAL,CAAYC,KAAZ,CAAkBF,IAAlB,EAAwBD,IAAxB,CAA8B,IAA7D;AACAtC,IAAAA,OAAO;AACV,GAHD;AAIAT,EAAAA,GAAG,CAAC0C,EAAJ,CAAO,aAAP,EAAsB,MAAM;AACxBpC,IAAAA,gBAAgB,GAAG,IAAnB;;AACA,QAAIF,aAAJ,EAAmB;AACfA,MAAAA,aAAa,GAAI,EAAjB;AACAC,MAAAA,cAAc,GAAG,IAAjB;AACAI,MAAAA,OAAO;AACV;AACJ,GAPD;AAQAT,EAAAA,GAAG,CAAC0C,EAAJ,CAAO,oBAAP,EAA6B,CAAC;AAAES,IAAAA;AAAF,GAAD,KAAmB;AAC5C7C,IAAAA,gBAAgB,GAAG6C,SAAnB;AACA1C,IAAAA,OAAO;AACV,GAHD,EAjH8D;AAsH9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,EAAAA,OAAO;AACV;;ACzJD,8BAAe;AACX2C,EAAAA,GAAG,EAAE,IADM;AAEXC,EAAAA,EAAE,EAAE,IAFO;AAGXC,EAAAA,GAAG,EAAE,IAHM;AAIXC,EAAAA,GAAG,EAAE,IAJM;AAKXC,EAAAA,MAAM,EAAE,IALG;AAMXC,EAAAA,GAAG,EAAE;AANM,CAAf;;ACAA,MAAM;AAAEC,EAAAA;AAAF,IAAYC,OAAO,CAAC,iBAAD,CAAzB;;AACA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,SAA9B,EAAyCC,KAAzC,EAAgDC,GAAhD,EAAqD;AACjD,SAAOH,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBF,KAAhB,KAA0BD,SAAS,IAAI,EAAvC,IAA6CD,MAAM,CAACI,KAAP,CAAaD,GAAb,CAApD;AACH;;AACD,AAAO,eAAeE,sBAAf,CAAsCC,IAAtC,EAA4C;AAC/C,QAAM,CAACC,OAAD,IAAY,MAAMV,KAAK,CAACS,IAAD,CAA7B;AACA,SAAOC,OAAO,CAACC,MAAR,CAAgBC,GAAD,IAAS;AAC3B;AACA,QAAIA,GAAG,CAACC,CAAJ,KAAU,CAAC,CAAf,EAAkB;AACd,aAAO,KAAP;AACH,KAJ0B;;;AAM3B,QAAID,GAAG,CAACC,CAAJ,GAAQ,CAAC,CAAb,EAAgB;AACZ,YAAMC,eAAe,GAAGL,IAAI,CAACM,SAAL,CAAeH,GAAG,CAACI,CAAnB,EAAsBJ,GAAG,CAACK,CAA1B,CAAxB;AACA,YAAMC,oBAAoB,GAAGJ,eAAe,CAACK,KAAhB,CAAsB,uBAAtB,CAA7B;AACA,aAAO,CAAC,CAACD,oBAAT;AACH;;AACD,WAAO,IAAP;AACH,GAZM,CAAP;AAaH;AACD,AAAO,eAAeE,mBAAf,CAAmCC,KAAnC,EAA0CC,aAA1C,EAAyD;AAC5D,QAAMZ,OAAO,GAAG,MAAMF,sBAAsB,CAACa,KAAD,CAA5C;AACA,MAAIE,aAAa,GAAGF,KAApB;;AACA,OAAK,MAAMT,GAAX,IAAkBF,OAAO,CAACc,OAAR,EAAlB,EAAqC;AACjC,QAAIC,IAAI,GAAGF,aAAa,CAACR,SAAd,CAAwBH,GAAG,CAACI,CAA5B,EAA+BJ,GAAG,CAACK,CAAnC,CAAX;;AACA,QAAIL,GAAG,CAACC,CAAJ,GAAQ,CAAC,CAAb,EAAgB;AACZ,YAAMK,oBAAoB,GAAGO,IAAI,CAACN,KAAL,CAAW,uBAAX,CAA7B;AACAM,MAAAA,IAAI,GAAGP,oBAAoB,CAAC,CAAD,CAA3B;AACH;;AACD,QAAIQ,eAAe,GAAGJ,aAAa,CAACG,IAAD,CAAnC;;AACA,QAAIb,GAAG,CAACC,CAAJ,GAAQ,CAAC,CAAb,EAAgB;AACZa,MAAAA,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeF,eAAf,CAAlB;AACH;;AACDH,IAAAA,aAAa,GAAGrB,YAAY,CAACqB,aAAD,EAAgBG,eAAhB,EAAiCd,GAAG,CAACI,CAArC,EAAwCJ,GAAG,CAACK,CAA5C,CAA5B;AACH;;AACD,SAAOM,aAAP;AACH;;ACpCM,SAASM,oBAAT,CAA8BC,GAA9B,EAAmCrB,IAAnC,EAAyCsB,GAAzC,EAA8CC,MAAM,GAAG,KAAvD,EAA8D;AACjE,MAAID,GAAG,KAAK,MAAZ,EAAoB;AAChB,WAAQ;;;kDAGkCJ,IAAI,CAACC,SAAL,CAAenB,IAAf,CAAqB;;MAEjEuB,MAAM,GACG;;YAEHL,IAAI,CAACC,SAAL,CAAeE,GAAf,CAAoB;;;;KAHpB,GAQE,EAAG;GAbT;AAeH;;AACD,SAAQ,kBAAiBH,IAAI,CAACC,SAAL,CAAeE,GAAf,CAAoB,GAA7C;AACH;;ACLD,MAAM;AAAEG,EAAAA;AAAF,IAAWhC,OAAO,CAAC,UAAD,CAAxB;;AACA,AAAO,eAAeiC,OAAf,CAAuB;AAAEC,EAAAA,GAAF;AAAOlG,EAAAA;AAAP,CAAvB,EAAwC;AAC3Ce,EAAAA,OAAO,CAACoF,GAAR,CAAYC,QAAZ,GAAuB,YAAvB;AACA,QAAMC,UAAU,GAAG,IAAIC,mBAAJ,EAAnB;AACA,QAAMC,oBAAoB,GAAG7D,MAAM,CAAC8D,OAAP,CAAexG,MAAM,CAACyG,OAAtB,CAA7B;AACA,QAAMC,eAAe,GAAG,EAAxB;AACA,QAAMC,kBAAkB,GAAG,EAA3B;AACA,QAAMC,iBAAiB,GAAG,EAA1B;AACA,QAAMC,sBAAsB,GAAGC,IAAI,CAACC,IAAL,CAAU/G,MAAM,CAACgH,cAAP,CAAsBtF,IAAhC,EAAsC,iBAAtC,CAA/B;AACA,MAAIuF,mBAAmB,GAAG;AAAExC,IAAAA,OAAO,EAAE;AAAX,GAA1B;;AACA,MAAI;AACAwC,IAAAA,mBAAmB,GAAGjD,OAAO,CAAC6C,sBAAD,CAA7B;AACH,GAFD,CAGA,OAAOK,GAAP,EAAY;AAEX;;AACD,MAAIC,SAAS,GAAGnH,MAAM,CAACoH,UAAP,CAAkBC,MAAlC;AACA,QAAMC,kBAAkB,GAAGH,SAAS,KAAKjE,SAAzC;;AACA,MAAI,CAACoE,kBAAL,EAAyB;AACrB,QAAI;AACAtD,MAAAA,OAAO,CAACuD,OAAR,CAAgB,gBAAhB,EAAkC;AAAEC,QAAAA,KAAK,EAAE,CAACtB,GAAD;AAAT,OAAlC;;AACAiB,MAAAA,SAAS,GAAG,IAAZ;AACH,KAHD,CAIA,OAAOD,GAAP,EAAY;AACRC,MAAAA,SAAS,GAAG,KAAZ;AACH;AACJ;;AACD,QAAMM,iBAAiB,GAAGN,SAAS,GAAGL,IAAI,CAACC,IAAL,CAAUb,GAAV,EAAgB,QAAhB,CAAH,GAA8BlG,MAAM,CAACoH,UAAP,CAAkBM,GAAnF;AACA,QAAMC,iBAAiB,GAAG3H,MAAM,CAACoH,UAAP,CAAkBM,GAA5C;;AACA,MAAInB,oBAAoB,CAAC3E,MAArB,KAAgC,CAApC,EAAuC;AACnCgG,IAAAA,OAAO,CAAC/H,KAAR,CAAcH,KAAK,CAACI,GAAN,CAAW,8CAAX,CAAd;AACA8H,IAAAA,OAAO,CAAC/H,KAAR,CAAe,uEAAf;AACA;AACH;;AAED,OAAK,MAAM,CAACmD,EAAD,EAAK6E,YAAL,CAAX,IAAiCtB,oBAAjC,EAAuD;AACnD,QAAI,CAACvD,EAAE,CAACb,UAAH,CAAc,QAAd,CAAL,EAA8B;AAC1B;AACH;;AACD,UAAM2F,MAAM,GAAGD,YAAY,CAACE,GAAb,CAAiB7F,KAAjB,CAAuB,KAAvB,CAAf;;AACA,QAAI4F,MAAM,CAAC,CAAD,CAAN,KAAc,OAAlB,EAA2B;AACvB,YAAM,IAAIE,KAAJ,CAAW,UAAShF,EAAG,8BAAvB,CAAN;AACH;;AACD8E,IAAAA,MAAM,CAAC1F,KAAP;AACA,QAAI6F,MAAJ,EAAYC,OAAZ;AACAA,IAAAA,OAAO,GAAGpB,IAAI,CAACS,OAAL,CAAarB,GAAb,EAAkB4B,MAAM,CAAC,CAAD,CAAxB,CAAV;;AACA,QAAIA,MAAM,CAAClG,MAAP,KAAkB,CAAtB,EAAyB;AACrBqG,MAAAA,MAAM,GAAGH,MAAM,CAAC,CAAD,CAAf;AACH,KAFD,MAGK;AACD,YAAM;AAAEK,QAAAA;AAAF,UAASC,KAAK,CAACN,MAAD,CAApB;AACAG,MAAAA,MAAM,GAAGE,EAAT;AACH;AAEJ;;AACDE,EAAAA,MAAM,CAACC,IAAP,CAAYX,iBAAZ;AACAY,EAAAA,MAAM,CAACD,IAAP,CAAYX,iBAAZ;;AACA,MAAIA,iBAAiB,KAAKF,iBAA1B,EAA6C;AACzCY,IAAAA,MAAM,CAACC,IAAP,CAAYb,iBAAZ;AACAc,IAAAA,MAAM,CAACD,IAAP,CAAYb,iBAAZ;AACH,GA3D0C;;;AA6D3C,OAAK,MAAM,CAACzE,EAAD,EAAK6E,YAAL,CAAX,IAAiCtB,oBAAjC,EAAuD;AACnD,QAAIvD,EAAE,CAACb,UAAH,CAAc,QAAd,KACAa,EAAE,CAACb,UAAH,CAAc,SAAd,CADA,IAEAa,EAAE,CAACb,UAAH,CAAc,UAAd,CAFA,IAGAa,EAAE,CAACb,UAAH,CAAc,QAAd,CAHJ,EAG6B;AACzBuE,MAAAA,eAAe,CAAC8B,IAAhB,CAAqB,CAACxF,EAAD,EAAK6E,YAAL,CAArB;AACH;;AACD,QAAI7E,EAAE,CAACb,UAAH,CAAc,QAAd,KAA2Ba,EAAE,CAACb,UAAH,CAAc,SAAd,CAA/B,EAAyD;AACrD,YAAM2D,GAAG,GAAG9C,EAAE,CAACd,KAAH,CAAS,GAAT,EAAc,CAAd,CAAZ;AACAyE,MAAAA,kBAAkB,CAAC6B,IAAnB,CAAwB1C,GAAxB,EAFqD;AAGrD;AACA;AACA;AACH;AACJ;;AACDY,EAAAA,eAAe,CAAC8B,IAAhB,CAAqB,CAAC,UAAD,EAAa;AAAET,IAAAA,GAAG,EAAE,IAAP;AAAa9H,IAAAA,KAAK,EAAEiD;AAApB,GAAb,CAArB;;AACA0E,EAAAA,OAAO,CAACa,GAAR,GAAc,CAAC,GAAGrF,IAAJ,KAAa;AACvBiD,IAAAA,UAAU,CAACqC,IAAX,CAAgB,SAAhB,EAA2B;AAAEvF,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA;AAAhB,KAA3B;AACH,GAFD;;AAGAwE,EAAAA,OAAO,CAACe,IAAR,GAAe,CAAC,GAAGvF,IAAJ,KAAa;AACxBiD,IAAAA,UAAU,CAACqC,IAAX,CAAgB,SAAhB,EAA2B;AAAEvF,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA;AAAjB,KAA3B;AACH,GAFD;;AAGAwE,EAAAA,OAAO,CAAC/H,KAAR,GAAgB,CAAC,GAAGuD,IAAJ,KAAa;AACzBiD,IAAAA,UAAU,CAACqC,IAAX,CAAgB,SAAhB,EAA2B;AAAEvF,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA;AAAlB,KAA3B;AACH,GAFD;;AAGA,MAAIwF,OAAO,GAAG9B,IAAI,CAAC+B,QAAL,CAAc3C,GAAd,EAAmBlG,MAAM,CAACoH,UAAP,CAAkBM,GAArC,CAAd;;AACA,MAAI,CAACkB,OAAO,CAACzG,UAAR,CAAoB,KAAI2E,IAAI,CAACgC,GAAI,EAAjC,CAAL,EAA0C;AACtCF,IAAAA,OAAO,GAAI,IAAG9B,IAAI,CAACgC,GAAI,EAAb,GAAiBF,OAA3B;AACH;;AACDxI,EAAAA,KAAK,CAACiG,UAAD,EAAaK,eAAb,EAA8B;AAAEhF,IAAAA,IAAI,EAAEkH;AAAR,GAA9B,EAAiD1F,SAAjD,CAAL;;AACA,MAAI,CAACiE,SAAL,EAAgB;AACZd,IAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAC7B1F,MAAAA,EAAE,EAAE,UADyB;AAE7BzD,MAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,KAAT;AAFsB,KAAjC;AAIH;;AACD,OAAK,MAAM,CAACyD,EAAD,EAAK6E,YAAL,CAAX,IAAiCnB,eAAjC,EAAkD;AAC9C,QAAI,CAAC1D,EAAE,CAACb,UAAH,CAAc,UAAd,CAAL,EAAgC;AAC5B;AACH;;AACDkE,IAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,MAAAA,EAAF;AAAMzD,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,QAAZ;AAAb,KAAjC;AACA,UAAMwJ,aAAa,GAAGC,KAAK,CAAC/C,OAAN,CAAc4B,YAAY,CAACE,GAA3B,EAAgC;AAClD5B,MAAAA,GAAG,EAAE8C,UAAU,CAAC9C,GAAX,EAD6C;AAElD+C,MAAAA,SAAS,EAAE,IAFuC;AAGlDC,MAAAA,KAAK,EAAE,IAH2C;AAIlDjD,MAAAA;AAJkD,KAAhC,CAAtB;AAMAU,IAAAA,iBAAiB,CAAC4B,IAAlB,CAAuBO,aAAvB;AACAA,IAAAA,aAAa,CAACK,KAAd,CAAqBlC,GAAD,IAAS;AACzBb,MAAAA,UAAU,CAACqC,IAAX,CAAgB,YAAhB,EAA8B;AAAE1F,QAAAA,EAAF;AAAMG,QAAAA,KAAK,EAAE,OAAb;AAAsBF,QAAAA,GAAG,EAAEiE,GAAG,CAACmC,QAAJ;AAA3B,OAA9B;AACAhD,MAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,QAAAA,EAAF;AAAMnD,QAAAA,KAAK,EAAEqH;AAAb,OAAnC;AACH,KAHD;AAIA6B,IAAAA,aAAa,CAACO,IAAd,CAAmB,MAAM;AACrBjD,MAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,QAAAA,EAAF;AAAMnD,QAAAA,KAAK,EAAE;AAAb,OAAnC;AACH,KAFD;AAGA,UAAM;AAAEmB,MAAAA,MAAF;AAAUuI,MAAAA;AAAV,QAAqBR,aAA3B;AACA/H,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAE+B,EAAR,CAAW,MAAX,EAAoByG,CAAD,IAAO;AACtB,UAAIC,SAAS,GAAGD,CAAC,CAACH,QAAF,EAAhB;;AACA,UAAII,SAAS,CAACC,QAAV,CAAmB,SAAnB,KAAiCD,SAAS,CAACC,QAAV,CAAmB,OAAnB,CAArC,EAAkE;AAC9DrD,QAAAA,UAAU,CAACqC,IAAX,CAAgB,cAAhB,EAAgC;AAAE1F,UAAAA;AAAF,SAAhC;AACAyG,QAAAA,SAAS,GAAGA,SAAS,CAACjH,OAAV,CAAkB,OAAlB,EAA2B,EAA3B,EAA+BA,OAA/B,CAAuC,SAAvC,EAAkD,EAAlD,CAAZ;AACH;;AACD,UAAIQ,EAAE,CAAC2G,QAAH,CAAY,MAAZ,CAAJ,EAAyB;AACrB,YAAIF,SAAS,CAACC,QAAV,CAAmB,SAAnB,KAAiCD,SAAS,CAACC,QAAV,CAAmB,OAAnB,CAArC,EAAkE;AAC9DrD,UAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,YAAAA,EAAF;AAAMzD,YAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,QAAZ;AAAb,WAAjC;AACH;;AACD,YAAI,+BAA+BqK,IAA/B,CAAoCH,SAApC,CAAJ,EAAoD;AAChDpD,UAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,YAAAA,EAAF;AAAMzD,YAAAA,KAAK,EAAE;AAAb,WAAjC;AACH;;AACD,cAAMsK,UAAU,GAAGJ,SAAS,CAACvE,KAAV,CAAgB,mBAAhB,CAAnB;;AACA,YAAI2E,UAAU,IAAIA,UAAU,CAAC,CAAD,CAAV,KAAkB,GAApC,EAAyC;AACrCxD,UAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,YAAAA,EAAF;AAAMzD,YAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,KAAV;AAAb,WAAjC;AACH;AACJ;;AACD8G,MAAAA,UAAU,CAACqC,IAAX,CAAgB,YAAhB,EAA8B;AAAE1F,QAAAA,EAAF;AAAMG,QAAAA,KAAK,EAAE,KAAb;AAAoBF,QAAAA,GAAG,EAAEwG;AAAzB,OAA9B;AACH,KAnBD;AAoBAF,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAExG,EAAR,CAAW,MAAX,EAAoByG,CAAD,IAAO;AACtBnD,MAAAA,UAAU,CAACqC,IAAX,CAAgB,YAAhB,EAA8B;AAAE1F,QAAAA,EAAF;AAAMG,QAAAA,KAAK,EAAE,OAAb;AAAsBF,QAAAA,GAAG,EAAEuG,CAAC,CAACH,QAAF;AAA3B,OAA9B;AACH,KAFD;AAGH;;AACD,QAAMS,eAAe,GAAGpD,eAAe,CAClCqD,GADmB,CACf,CAAC,CAAC/G,EAAD,EAAKgH,YAAL,CAAD,KAAwB;AAC7B,QAAI,CAAChH,EAAE,CAACb,UAAH,CAAc,QAAd,CAAL,EAA8B;AAC1B,aAAO,KAAP;AACH;;AACD,UAAM2F,MAAM,GAAGkC,YAAY,CAACjC,GAAb,CAAiB7F,KAAjB,CAAuB,KAAvB,CAAf;;AACA,QAAI4F,MAAM,CAAC,CAAD,CAAN,KAAc,OAAlB,EAA2B;AACvB,YAAM,IAAIE,KAAJ,CAAW,UAAShF,EAAG,8BAAvB,CAAN;AACH;;AACD8E,IAAAA,MAAM,CAAC1F,KAAP;AACA,QAAI6H,OAAJ,EAAa/B,OAAb;AACAA,IAAAA,OAAO,GAAGpB,IAAI,CAACS,OAAL,CAAarB,GAAb,EAAkB4B,MAAM,CAAC,CAAD,CAAxB,CAAV;;AACA,QAAIA,MAAM,CAAClG,MAAP,KAAkB,CAAtB,EAAyB;AACrBqI,MAAAA,OAAO,GAAGnD,IAAI,CAACS,OAAL,CAAaE,iBAAb,EAAgCK,MAAM,CAAC,CAAD,CAAtC,CAAV;AACH,KAFD,MAGK;AACD,YAAM;AAAEK,QAAAA;AAAF,UAASC,KAAK,CAACN,MAAD,CAApB;AACAmC,MAAAA,OAAO,GAAGnD,IAAI,CAACS,OAAL,CAAaE,iBAAb,EAAgCU,EAAhC,CAAV;AACH;;AACD,WAAO,CAACnF,EAAD,EAAKkF,OAAL,EAAc+B,OAAd,CAAP;AACH,GApBuB,EAqBnBvF,MArBmB,CAqBZwF,OArBY,CAAxB;AAsBA,QAAMC,eAAe,GAAG,EAAxB;;AACA,OAAK,MAAM,CAACnH,EAAD,EAAKkF,OAAL,EAAc+B,OAAd,CAAX,IAAqCH,eAArC,EAAsD;AAClDzD,IAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,MAAAA,EAAF;AAAMzD,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,QAAZ;AAAb,KAAjC;AACA,QAAI6K,QAAJ;;AACA,QAAI;AACAA,MAAAA,QAAQ,GAAGC,IAAI,CAAC/B,IAAL,CAAW,MAAX,EAAkB;AACzBgC,QAAAA,MAAM,EAAEtK,MAAM,CAACuK,OADU;AAEzBrE,QAAAA,GAAG,EAAEgC,OAFoB;AAGzBsC,QAAAA,QAAQ,EAAE,IAHe;AAIzBC,QAAAA,KAAK,EAAE,IAJkB;AAKzBC,QAAAA,GAAG,EAAE;AALoB,OAAlB,CAAX;AAOA,YAAMC,mBAAmB,GAAG,EAA5B;AACA,YAAMC,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACL,GAAT,CAAa,MAAOe,CAAP,IAAa;AACxCA,QAAAA,CAAC,GAAGhE,IAAI,CAACS,OAAL,CAAauD,CAAb,CAAJ,CADwC;;AAExC,YAAInE,kBAAkB,CAAC+C,QAAnB,CAA4B5C,IAAI,CAACiE,OAAL,CAAaD,CAAb,EAAgBE,MAAhB,CAAuB,CAAvB,CAA5B,CAAJ,EAA4D;AACxDL,UAAAA,mBAAmB,CAACnC,IAApB,CAAyBsC,CAAzB;AACA;AACH;;AACD,cAAMG,OAAO,GAAGH,CAAC,CAACtI,OAAF,CAAU0F,OAAV,EAAmB+B,OAAnB,CAAhB;AACA1B,QAAAA,MAAM,CAACD,IAAP,CAAYxB,IAAI,CAACoE,OAAL,CAAaD,OAAb,CAAZ;;AACA,YAAInE,IAAI,CAACiE,OAAL,CAAaD,CAAb,MAAoB,KAAxB,EAA+B;AAC3B,iBAAOK,WAAE,CAACC,QAAH,CAAYN,CAAZ,EAAeG,OAAf,CAAP;AACH;;AACD,YAAIzG,IAAI,GAAG,MAAM2G,WAAE,CAACE,QAAH,CAAYP,CAAZ,EAAe;AAAEQ,UAAAA,QAAQ,EAAE;AAAZ,SAAf,CAAjB;AACA9G,QAAAA,IAAI,GAAG,MAAMW,mBAAmB,CAACX,IAAD,EAAQgB,IAAD,IAAU;AAC7C,cAAIA,IAAI,CAACrD,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AACzB,mBAAOqD,IAAP;AACH;;AACD,cAAIA,IAAI,CAACrD,UAAL,CAAgB,GAAhB,KAAwBqD,IAAI,CAACrD,UAAL,CAAgB,IAAhB,CAAxB,IAAiDqD,IAAI,CAACrD,UAAL,CAAgB,KAAhB,CAArD,EAA6E;AACzE,kBAAM2D,GAAG,GAAGgB,IAAI,CAACiE,OAAL,CAAavF,IAAb,EAAmBwF,MAAnB,CAA0B,CAA1B,CAAZ;;AACA,gBAAI,CAAClF,GAAL,EAAU;AACN,qBAAON,IAAI,GAAG,KAAd;AACH;;AACD,kBAAM+F,YAAY,GAAGC,uBAAuB,CAAC1F,GAAD,CAA5C;;AACA,gBAAIyF,YAAJ,EAAkB;AACd/F,cAAAA,IAAI,GAAGA,IAAI,CAAChD,OAAL,CAAa,IAAIiJ,MAAJ,CAAY,GAAE3F,GAAI,GAAlB,CAAb,EAAoCyF,YAApC,CAAP;AACH;;AACD,gBAAI,CAACpE,SAAD,IAAc,CAACoE,YAAY,IAAIzF,GAAjB,MAA0B,IAA5C,EAAkD;AAC9C,oBAAM4F,WAAW,GAAG5E,IAAI,CAACS,OAAL,CAAaT,IAAI,CAACoE,OAAL,CAAaD,OAAb,CAAb,EAAoCzF,IAApC,CAApB;AACAmG,cAAAA,eAAe,CAACC,GAAhB,CAAoBF,WAApB;AACAlG,cAAAA,IAAI,GAAGA,IAAI,GAAG,WAAd;AACH;;AACD,mBAAOA,IAAP;AACH;;AACD,cAAIyB,mBAAmB,CAACxC,OAApB,CAA4Be,IAA5B,CAAJ,EAAuC;AACnC,mBAAOsB,IAAI,CAAC+E,KAAL,CAAWtE,OAAX,CAAoB,cAApB,EAAmCN,mBAAmB,CAACxC,OAApB,CAA4Be,IAA5B,CAAnC,CAAP;AACH;;AACDa,UAAAA,UAAU,CAACqC,IAAX,CAAgB,oBAAhB,EAAsC;AAAElF,YAAAA,SAAS,EAAEgC;AAAb,WAAtC;AACA,iBAAQ,gBAAeA,IAAK,KAA5B;AACH,SAzB+B,CAAhC;AA0BA,eAAO2F,WAAE,CAACW,SAAH,CAAab,OAAb,EAAsBzG,IAAtB,CAAP;AACH,OAvCiB,CAAZ,CAAN;AAwCA2F,MAAAA,eAAe,CAAC3B,IAAhB,CAAqB,CAACN,OAAD,EAAU+B,OAAV,EAAmBU,mBAAnB,CAArB;AACAtE,MAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,QAAAA;AAAF,OAAnC;AACH,KAnDD,CAoDA,OAAOkE,GAAP,EAAY;AACRb,MAAAA,UAAU,CAACqC,IAAX,CAAgB,YAAhB,EAA8B;AAAE1F,QAAAA,EAAF;AAAMG,QAAAA,KAAK,EAAE,OAAb;AAAsBF,QAAAA,GAAG,EAAEiE,GAAG,CAACmC,QAAJ;AAA3B,OAA9B;AACAhD,MAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,QAAAA,EAAF;AAAMnD,QAAAA,KAAK,EAAEqH;AAAb,OAAnC;AACH;AACJ;;AACD,QAAM6E,iBAAiB,GAAG,IAAIC,GAAJ,EAA1B;AACA,QAAML,eAAe,GAAG,IAAIK,GAAJ,EAAxB;;AACA,OAAK,MAAM,CAAChJ,EAAD,EAAK6E,YAAL,CAAX,IAAiCnB,eAAjC,EAAkD;AAC9C,QAAI,CAAC1D,EAAE,CAACb,UAAH,CAAc,QAAd,CAAD,IAA4B,CAACa,EAAE,CAACb,UAAH,CAAc,SAAd,CAAjC,EAA2D;AACvD;AACH;;AACDkE,IAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,MAAAA,EAAF;AAAMzD,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,QAAZ;AAAb,KAAjC;;AACA,SAAK,MAAM,CAAC2I,OAAD,EAAU+B,OAAV,EAAmBG,QAAnB,CAAX,IAA2CD,eAA3C,EAA4D;AACxD,WAAK,MAAMW,CAAX,IAAgBV,QAAhB,EAA0B;AACtB,cAAM6B,aAAa,GAAGnF,IAAI,CAACiE,OAAL,CAAaD,CAAb,EAAgBE,MAAhB,CAAuB,CAAvB,CAAtB;;AACA,YAAI,CAAChI,EAAE,CAAC0G,QAAH,CAAa,IAAGuC,aAAc,EAA9B,CAAD,IAAqC,CAACjJ,EAAE,CAAC0G,QAAH,CAAa,IAAGuC,aAAc,EAA9B,CAA1C,EAA4E;AACxE;AACH;;AACD,YAAI;AAAElE,UAAAA;AAAF,YAAUF,YAAd;;AACA,YAAI7E,EAAE,CAACb,UAAH,CAAc,QAAd,CAAJ,EAA6B;AACzB4F,UAAAA,GAAG,GAAGA,GAAG,CAACvF,OAAJ,CAAY,OAAZ,EAAqBsI,CAArB,CAAN;AACA,gBAAM;AAAE9J,YAAAA,MAAF;AAAUuI,YAAAA;AAAV,cAAqB,MAAMP,KAAK,CAAC/C,OAAN,CAAc8B,GAAd,EAAmB;AAChD5B,YAAAA,GAAG,EAAE8C,UAAU,CAAC9C,GAAX,EAD2C;AAEhD+C,YAAAA,SAAS,EAAE,IAFqC;AAGhDC,YAAAA,KAAK,EAAE,IAHyC;AAIhDjD,YAAAA,GAJgD;AAKhDgG,YAAAA,KAAK,EAAEC,mBAAgB,CAACrB,CAAD;AALyB,WAAnB,CAAjC;;AAOA,cAAIvB,MAAJ,EAAY;AACR3B,YAAAA,OAAO,CAAC/H,KAAR,CAAc0J,MAAd;AACH;;AACD,cAAI,CAACvI,MAAL,EAAa;AACT;AACH;;AACD,cAAIiK,OAAO,GAAGH,CAAC,CAACtI,OAAF,CAAU0F,OAAV,EAAmB+B,OAAnB,CAAd;AACA,gBAAMmC,SAAS,GAAGtF,IAAI,CAACiE,OAAL,CAAaD,CAAb,EAAgBE,MAAhB,CAAuB,CAAvB,CAAlB;AACA,gBAAMO,YAAY,GAAGC,uBAAuB,CAACY,SAAD,CAA5C;;AACA,cAAIb,YAAJ,EAAkB;AACdN,YAAAA,OAAO,GAAGA,OAAO,CAACzI,OAAR,CAAgB,IAAIiJ,MAAJ,CAAY,GAAEW,SAAU,GAAxB,CAAhB,EAA6Cb,YAA7C,CAAV;AACH;;AACD,cAAI/G,IAAI,GAAGxD,MAAX;;AACA,cAAI8F,IAAI,CAACiE,OAAL,CAAaE,OAAb,MAA0B,KAA9B,EAAqC;AACjCzG,YAAAA,IAAI,GAAG,MAAMW,mBAAmB,CAACX,IAAD,EAAQgB,IAAD,IAAU;AAC7C,kBAAIA,IAAI,CAACrD,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AACzB,uBAAOqD,IAAP;AACH;;AACD,kBAAIA,IAAI,CAACrD,UAAL,CAAgB,GAAhB,KAAwBqD,IAAI,CAACrD,UAAL,CAAgB,IAAhB,CAAxB,IAAiDqD,IAAI,CAACrD,UAAL,CAAgB,KAAhB,CAArD,EAA6E;AACzE,sBAAM2D,GAAG,GAAGgB,IAAI,CAACiE,OAAL,CAAavF,IAAb,EAAmBwF,MAAnB,CAA0B,CAA1B,CAAZ;;AACA,oBAAI,CAAClF,GAAL,EAAU;AACN,yBAAON,IAAI,GAAG,KAAd;AACH;;AACD,sBAAM+F,YAAY,GAAGC,uBAAuB,CAAC1F,GAAD,CAA5C;;AACA,oBAAIyF,YAAJ,EAAkB;AACd/F,kBAAAA,IAAI,GAAGA,IAAI,CAAChD,OAAL,CAAa,IAAIiJ,MAAJ,CAAY,GAAE3F,GAAI,GAAlB,CAAb,EAAoCyF,YAApC,CAAP;AACH;;AACD,oBAAI,CAACpE,SAAD,IAAc,CAACoE,YAAY,IAAIzF,GAAjB,MAA0B,IAA5C,EAAkD;AAC9C,wBAAM4F,WAAW,GAAG5E,IAAI,CAACS,OAAL,CAAaT,IAAI,CAACoE,OAAL,CAAaD,OAAb,CAAb,EAAoCzF,IAApC,CAApB;AACAmG,kBAAAA,eAAe,CAACC,GAAhB,CAAoBF,WAApB;AACAlG,kBAAAA,IAAI,GAAGA,IAAI,GAAG,WAAd;AACH;;AACD,uBAAOA,IAAP;AACH;;AACD,kBAAIyB,mBAAmB,CAACxC,OAApB,CAA4Be,IAA5B,CAAJ,EAAuC;AACnC,uBAAOsB,IAAI,CAAC+E,KAAL,CAAWtE,OAAX,CAAoB,cAApB,EAAmCN,mBAAmB,CAACxC,OAApB,CAA4Be,IAA5B,CAAnC,CAAP;AACH;;AACDa,cAAAA,UAAU,CAACqC,IAAX,CAAgB,oBAAhB,EAAsC;AAAElF,gBAAAA,SAAS,EAAEgC;AAAb,eAAtC;AACA,qBAAQ,gBAAeA,IAAK,KAA5B;AACH,aAzB+B,CAAhC;AA0BH;;AACD,gBAAM2F,WAAE,CAACkB,KAAH,CAASvF,IAAI,CAACoE,OAAL,CAAaD,OAAb,CAAT,EAAgC;AAAEqB,YAAAA,SAAS,EAAE;AAAb,WAAhC,CAAN;AACA,gBAAMnB,WAAE,CAACW,SAAH,CAAab,OAAb,EAAsBzG,IAAtB,CAAN;AACAuH,UAAAA,iBAAiB,CAACH,GAAlB,CAAsBd,CAAtB;AACH;;AACD,YAAI9H,EAAE,CAACb,UAAH,CAAc,SAAd,CAAJ,EAA8B;AAC1B,gBAAMoK,UAAU,GAAGvI,OAAO,CAACuD,OAAR,CAAgBQ,GAAhB,EAAqB;AAAEP,YAAAA,KAAK,EAAE,CAACtB,GAAD;AAAT,WAArB,CAAnB;;AACA,gBAAM;AAAEsG,YAAAA;AAAF,cAAYxI,OAAO,CAACuI,UAAD,CAAzB;;AACA,cAAI;AACA,gBAAI;AAAE1J,cAAAA;AAAF,gBAAa,MAAM2J,KAAK,CAAC1B,CAAD,CAA5B;AACH,WAFD,CAGA,OAAO5D,GAAP,EAAY;AACRA,YAAAA,GAAG,CAACuF,OAAJ,GAAe,IAAGzJ,EAAG,KAAIkE,GAAG,CAACuF,OAAQ,EAArC;AACA7E,YAAAA,OAAO,CAAC/H,KAAR,CAAcqH,GAAd;AACAb,YAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,cAAAA,EAAF;AAAMnD,cAAAA,KAAK,EAAEqH;AAAb,aAAnC;AACA;AACH;;AACD,cAAI+D,OAAO,GAAGH,CAAC,CAACtI,OAAF,CAAU0F,OAAV,EAAmB+B,OAAnB,CAAd;AACA,gBAAMmC,SAAS,GAAGtF,IAAI,CAACiE,OAAL,CAAaD,CAAb,EAAgBE,MAAhB,CAAuB,CAAvB,CAAlB;AACA,gBAAMO,YAAY,GAAGC,uBAAuB,CAACY,SAAD,CAA5C;;AACA,cAAIb,YAAJ,EAAkB;AACdN,YAAAA,OAAO,GAAGA,OAAO,CAACzI,OAAR,CAAgB,IAAIiJ,MAAJ,CAAY,GAAEW,SAAU,GAAxB,CAAhB,EAA6Cb,YAA7C,CAAV;AACH;;AACD,cAAI/G,IAAI,GAAG3B,MAAX;;AACA,cAAIiE,IAAI,CAACiE,OAAL,CAAaE,OAAb,MAA0B,KAA9B,EAAqC;AACjCzG,YAAAA,IAAI,GAAG,MAAMW,mBAAmB,CAACX,IAAD,EAAQgB,IAAD,IAAU;AAC7C,kBAAIA,IAAI,CAACrD,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AACzB,uBAAOqD,IAAP;AACH;;AACD,kBAAIA,IAAI,CAACrD,UAAL,CAAgB,GAAhB,KAAwBqD,IAAI,CAACrD,UAAL,CAAgB,IAAhB,CAAxB,IAAiDqD,IAAI,CAACrD,UAAL,CAAgB,KAAhB,CAArD,EAA6E;AACzE,sBAAM2D,GAAG,GAAGgB,IAAI,CAACiE,OAAL,CAAavF,IAAb,EAAmBwF,MAAnB,CAA0B,CAA1B,CAAZ;;AACA,oBAAI,CAAClF,GAAL,EAAU;AACN,yBAAON,IAAI,GAAG,KAAd;AACH;;AACD,sBAAM+F,YAAY,GAAGC,uBAAuB,CAAC1F,GAAD,CAA5C;;AACA,oBAAIyF,YAAJ,EAAkB;AACd/F,kBAAAA,IAAI,GAAGA,IAAI,CAAChD,OAAL,CAAa,IAAIiJ,MAAJ,CAAY,GAAE3F,GAAI,GAAlB,CAAb,EAAoCyF,YAApC,CAAP;AACH;;AACD,oBAAI,CAACA,YAAY,IAAIzF,GAAjB,MAA0B,IAA9B,EAAoC;AAChC,wBAAM4F,WAAW,GAAG5E,IAAI,CAACS,OAAL,CAAaT,IAAI,CAACoE,OAAL,CAAaD,OAAb,CAAb,EAAoCzF,IAApC,CAApB;AACAmG,kBAAAA,eAAe,CAACC,GAAhB,CAAoBF,WAApB;AACAlG,kBAAAA,IAAI,GAAGA,IAAI,GAAG,WAAd;AACH;;AACD,uBAAOA,IAAP;AACH;;AACD,kBAAIyB,mBAAmB,CAACxC,OAApB,CAA4Be,IAA5B,CAAJ,EAAuC;AACnC,uBAAOsB,IAAI,CAAC+E,KAAL,CAAWtE,OAAX,CAAoB,cAApB,EAAmCN,mBAAmB,CAACxC,OAApB,CAA4Be,IAA5B,CAAnC,CAAP;AACH;;AACDa,cAAAA,UAAU,CAACqC,IAAX,CAAgB,oBAAhB,EAAsC;AAAElF,gBAAAA,SAAS,EAAEgC;AAAb,eAAtC;AACA,qBAAQ,gBAAeA,IAAK,KAA5B;AACH,aAzB+B,CAAhC;AA0BH;;AACD,gBAAM2F,WAAE,CAACkB,KAAH,CAASvF,IAAI,CAACoE,OAAL,CAAaD,OAAb,CAAT,EAAgC;AAAEqB,YAAAA,SAAS,EAAE;AAAb,WAAhC,CAAN;AACA,gBAAMnB,WAAE,CAACW,SAAH,CAAab,OAAb,EAAsBzG,IAAtB,CAAN;AACH;AACJ;AACJ;;AACD6B,IAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,MAAAA,EAAF;AAAMnD,MAAAA,KAAK,EAAE;AAAb,KAAnC;AACH;;AACD,QAAM+K,OAAO,CAACC,GAAR,CAAYjE,iBAAZ,CAAN;;AACA,OAAK,MAAM8F,cAAX,IAA6Bf,eAA7B,EAA8C;AAC1C,UAAMgB,WAAW,GAAG,MAAMxB,WAAE,CAACE,QAAH,CAAYqB,cAAZ,EAA4B;AAAEpB,MAAAA,QAAQ,EAAE;AAAZ,KAA5B,CAA1B;AACA,UAAMsB,UAAU,GAAG9F,IAAI,CAACiE,OAAL,CAAa2B,cAAb,CAAnB;AACA,UAAMG,UAAU,GAAGH,cAAc,CAAC1B,MAAf,CAAsBvD,iBAAiB,CAAC7F,MAAxC,CAAnB;AACA,UAAMkL,SAAS,GAAGlH,oBAAoB,CAACiH,UAAD,EAAaF,WAAb,EAA0BC,UAA1B,CAAtC;AACA,UAAMG,YAAY,GAAGL,cAAc,GAAG,WAAtC;AACA,UAAMvB,WAAE,CAACW,SAAH,CAAaiB,YAAb,EAA2BD,SAA3B,EAAsC;AAAExB,MAAAA,QAAQ,EAAE;AAAZ,KAAtC,CAAN;AACH;;AACD,MAAI,CAACnE,SAAL,EAAgB;AACZd,IAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,MAAAA,EAAE,EAAE,UAAN;AAAkBnD,MAAAA,KAAK,EAAE;AAAzB,KAAnC;AACAwG,IAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAC7B1F,MAAAA,EAAE,EAAE,UADyB;AAE7BzD,MAAAA,KAAK,EAAE,CAAC,MAAD,EAAS+H,kBAAkB,GAAG,KAAH,GAAW,QAAtC;AAFsB,KAAjC;;AAIA,QAAI,CAACA,kBAAL,EAAyB;AACrBjB,MAAAA,UAAU,CAACqC,IAAX,CAAgB,YAAhB,EAA8B;AAC1B1F,QAAAA,EAAE,EAAE,UADsB;AAE1BG,QAAAA,KAAK,EAAE,KAFmB;AAG1BF,QAAAA,GAAG,EAAG;AAHoB,OAA9B;AAKH;AACJ,GAbD,MAcK;AAAA;;AACDoD,IAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,MAAAA,EAAE,EAAE,UAAN;AAAkBzD,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,QAAZ;AAAzB,KAAjC;;AACA,mBAAeyN,8BAAf,GAAgD;AAC5C;AACA;AACA,YAAMhH,IAAI,CAACyB,iBAAD,EAAoBE,iBAApB,EAAuC;AAC7CjD,QAAAA,MAAM,EAAGuI,MAAD,IAAY;AAChB,iBAAO,CAAClB,iBAAiB,CAACmB,GAAlB,CAAsBD,MAAtB,CAAR;AACH;AAH4C,OAAvC,CAAJ,CAIH7D,KAJG,CAIIlC,GAAD,IAAS;AACdb,QAAAA,UAAU,CAACqC,IAAX,CAAgB,YAAhB,EAA8B;AAAE1F,UAAAA,EAAE,EAAE,UAAN;AAAkBG,UAAAA,KAAK,EAAE,OAAzB;AAAkCF,UAAAA,GAAG,EAAEiE,GAAG,CAACmC,QAAJ;AAAvC,SAA9B;AACAhD,QAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,UAAAA,EAAE,EAAE,UAAN;AAAkBnD,UAAAA,KAAK,EAAEqH;AAAzB,SAAnC;AACA,cAAMA,GAAN;AACH,OARK,CAAN;AASA,YAAMiG,iBAAiB,GAAGzH,IAAI,CAAC3B,KAAL,CAAW,MAAMoH,WAAE,CAACE,QAAH,CAAYvE,IAAI,CAACC,IAAL,CAAUb,GAAV,EAAe,cAAf,CAAZ,EAA4C;AAAEoF,QAAAA,QAAQ,EAAE;AAAZ,OAA5C,CAAjB,CAA1B;AACA,aAAO6B,iBAAiB,CAACC,IAAzB;AACA,aAAOD,iBAAiB,CAACE,KAAzB;AACAF,MAAAA,iBAAiB,CAACG,eAAlB,GAAoCH,iBAAiB,CAACG,eAAlB,IAAqC,EAAzE;AACAH,MAAAA,iBAAiB,CAACG,eAAlB,CAAkC,aAAlC,IACIH,iBAAiB,CAACG,eAAlB,CAAkC,aAAlC,KAAoD,QADxD;AAEAH,MAAAA,iBAAiB,CAACI,YAAlB,GACIJ,iBAAiB,CAACI,YAAlB,IAAkC,wDADtC;AAEA,YAAMpC,WAAE,CAACW,SAAH,CAAahF,IAAI,CAACC,IAAL,CAAUU,iBAAV,EAA6B,cAA7B,CAAb,EAA2D/B,IAAI,CAACC,SAAL,CAAewH,iBAAf,EAAkC,IAAlC,EAAwC,CAAxC,CAA3D,CAAN;AACA,YAAMhC,WAAE,CAACW,SAAH,CAAahF,IAAI,CAACC,IAAL,CAAUU,iBAAV,EAA6B,UAA7B,CAAb,EAAwD,iBAAgB/B,IAAI,CAACC,SAAL,CAAe3B,OAAO,CAACuD,OAAR,CAAgB,kCAAhB,CAAf,CAAoE,KAA5I,CAAN;AACA,YAAMiG,YAAY,GAAG,MAAMrC,WAAE,CAACE,QAAH,CAAYvE,IAAI,CAACC,IAAL,CAAUU,iBAAV,EAA6BzH,MAAM,CAACoH,UAAP,CAAkBqG,QAA/C,CAAZ,EAAsE;AAAEnC,QAAAA,QAAQ,EAAE;AAAZ,OAAtE,CAA3B;AACA,YAAMH,WAAE,CAACW,SAAH,CAAahF,IAAI,CAACC,IAAL,CAAUU,iBAAV,EAA6BzH,MAAM,CAACoH,UAAP,CAAkBqG,QAA/C,CAAb,EAAuED,YAAY,CAAChL,OAAb,CAAqB,mBAArB,EAA0C,EAA1C,CAAvE,CAAN,CAvB4C;;AAyB5C6F,MAAAA,MAAM,CAACC,IAAP,CAAYxB,IAAI,CAACC,IAAL,CAAUU,iBAAV,EAA6B,mBAA7B,CAAZ;AACAY,MAAAA,MAAM,CAACC,IAAP,CAAYxB,IAAI,CAACC,IAAL,CAAUU,iBAAV,EAA6B,YAA7B,CAAZ;AACAY,MAAAA,MAAM,CAACC,IAAP,CAAYxB,IAAI,CAACC,IAAL,CAAUU,iBAAV,EAA6B,eAA7B,CAAZ;AACH;;AACD,UAAMuF,8BAA8B,EAApC;AACA,UAAMU,aAAa,GAAG,CAAC,OAAD,EAAU1N,MAAM,CAACoH,UAAP,CAAkBqG,QAA5B,EAAsC,WAAtC,EAAmD9F,iBAAnD,CAAtB;;AACA,QAAI3H,MAAM,CAAC2N,QAAX,EAAqB;AACjBD,MAAAA,aAAa,CAAClF,IAAd,CAAmB,cAAnB,EAAmCxI,MAAM,CAAC2N,QAA1C;AACH;;AACD,UAAMC,gBAAgB,GAAG5E,KAAK,CAAC,QAAD,EAAW0E,aAAX,EAA0B;AACpDxH,MAAAA,GAAG,EAAEuB,iBAD+C;AAEpDtB,MAAAA,GAAG,EAAE8C,UAAU,CAAC9C,GAAX,EAF+C;AAGpD+C,MAAAA,SAAS,EAAE;AAHyC,KAA1B,CAA9B;AAKA,6BAAA0E,gBAAgB,CAAC5M,MAAjB,gFAAyB+B,EAAzB,CAA4B,MAA5B,EAAqCyG,CAAD,IAAO;AACvCnD,MAAAA,UAAU,CAACqC,IAAX,CAAgB,YAAhB,EAA8B;AAAE1F,QAAAA,EAAE,EAAE,UAAN;AAAkBG,QAAAA,KAAK,EAAE,KAAzB;AAAgCF,QAAAA,GAAG,EAAEuG,CAAC,CAACH,QAAF;AAArC,OAA9B;AACH,KAFD;AAGA,8BAAAuE,gBAAgB,CAACrE,MAAjB,kFAAyBxG,EAAzB,CAA4B,MAA5B,EAAqCyG,CAAD,IAAO;AACvCnD,MAAAA,UAAU,CAACqC,IAAX,CAAgB,YAAhB,EAA8B;AAAE1F,QAAAA,EAAE,EAAE,UAAN;AAAkBG,QAAAA,KAAK,EAAE,KAAzB;AAAgCF,QAAAA,GAAG,EAAEuG,CAAC,CAACH,QAAF;AAArC,OAA9B;AACH,KAFD;AAGAuE,IAAAA,gBAAgB,CAACxE,KAAjB,CAAwBlC,GAAD,IAAS;AAC5Bb,MAAAA,UAAU,CAACqC,IAAX,CAAgB,YAAhB,EAA8B;AAAE1F,QAAAA,EAAE,EAAE,UAAN;AAAkBG,QAAAA,KAAK,EAAE,OAAzB;AAAkCF,QAAAA,GAAG,EAAEiE,GAAG,CAACmC,QAAJ;AAAvC,OAA9B;AACAhD,MAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,QAAAA,EAAE,EAAE,UAAN;AAAkBnD,QAAAA,KAAK,EAAEqH;AAAzB,OAAnC;AACH,KAHD;AAIA0G,IAAAA,gBAAgB,CAACtE,IAAjB,CAAsB,MAAM;AACxBjD,MAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,QAAAA,EAAE,EAAE,UAAN;AAAkBnD,QAAAA,KAAK,EAAE;AAAzB,OAAnC;AACH,KAFD;AAGA,UAAM+N,gBAAN;AACH;;AACD,MAAIjG,iBAAiB,KAAKF,iBAA1B,EAA6C;AACzCY,IAAAA,MAAM,CAACC,IAAP,CAAYb,iBAAZ;AACH;AACJ;;ACvbM,MAAMoG,QAAQ,GAAI,sBAAlB;AACP,AAAO,MAAMC,SAAS,GAAGC,QAAQ,CAAC,UAAD,CAA1B;AACP,AAAO,MAAMC,cAAc,GAAGlH,IAAI,CAACC,IAAL,CAAU+G,SAAV,EAAqB,eAArB,CAAvB;AACP,AAAO,MAAMG,WAAW,GAAGnH,IAAI,CAACC,IAAL,CAAU+G,SAAV,EAAqB,iBAArB,CAApB;AACP,AAAO,MAAMI,kBAAkB,GAAG,oBAA3B;AACP,AAAO,eAAeC,YAAf,CAA4BjI,GAA5B,EAAiC;AACpC,MAAI;AACA,QAAIkI,gBAAgB,GAAGjD,WAAE,CAACkD,YAAH,CAAgBvH,IAAI,CAACC,IAAL,CAAUb,GAAV,EAAe,oBAAf,CAAhB,EAAsD;AACzEoF,MAAAA,QAAQ,EAAE;AAD+D,KAAtD,CAAvB;AAGH,GAJD,CAKA,OAAOpE,GAAP,EAAY;AACR;AACA,WAAO,IAAP;AACH,GATmC;;;AAWpC,SAAOxB,IAAI,CAAC3B,KAAL,CAAWqK,gBAAX,CAAP;AACH;AACD,AAAO,eAAeE,aAAf,CAA6BC,GAA7B,EAAkCC,SAAlC,EAA6C;AAChD,QAAMC,eAAe,GAAG;AAAEhK,IAAAA,OAAO,EAAE;AAAX,GAAxB;;AACA,OAAK,MAAMiK,GAAX,IAAkBhM,MAAM,CAACiM,IAAP,CAAYH,SAAS,CAAC/J,OAAtB,EAA+BmK,IAA/B,EAAlB,EAAyD;AACrDH,IAAAA,eAAe,CAAChK,OAAhB,CAAwBiK,GAAxB,IAA+BF,SAAS,CAAC/J,OAAV,CAAkBiK,GAAlB,CAA/B;AACH;;AACDvD,EAAAA,WAAE,CAAC0D,aAAH,CAAiBN,GAAjB,EAAsB7I,IAAI,CAACC,SAAL,CAAe8I,eAAf,EAAgCvL,SAAhC,EAA2C,CAA3C,CAAtB,EAAqE;AAAEoI,IAAAA,QAAQ,EAAE;AAAZ,GAArE;AACH;AACD,AAAO,SAASwD,gBAAT,CAA0BC,WAA1B,EAAuCC,YAAvC,EAAqD;AACxD,MAAI,CAACD,WAAW,CAAC5M,UAAZ,CAAuB0L,QAAvB,CAAL,EAAuC;AACnCkB,IAAAA,WAAW,GAAGlB,QAAQ,GAAGkB,WAAzB;AACH,GAHuD;;;AAKxD,SAAOE,GAAG,CAACF,WAAD,EAAc;AACpBC,IAAAA,YAAY,EAAEA,YADM;AAEpBE,IAAAA,OAAO,EAAE;AAAE,oBAAe;AAAjB,KAFW;AAGpBC,IAAAA,eAAe,EAAE;AAHG,GAAd,CAAV;AAKH;AACD,AAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AAC3B,SAAOnF,OAAO,CAACmF,IAAD,CAAd;AACH;AACD;;;;;;;;;AAQA,AAAO,SAASC,yBAAT,CAAmCC,GAAnC,EAAwCrJ,GAAxC,EAA6C;AAChD;AACA;AACA;AACA;AACA,MAAI;AACA,UAAMsJ,WAAW,GAAGxL,OAAO,CAACuD,OAAR,CAAiB,GAAEgI,GAAI,eAAvB,EAAuC;AAAE/H,MAAAA,KAAK,EAAE,CAACtB,GAAD;AAAT,KAAvC,CAApB;;AACA,WAAO,CAACsJ,WAAD,EAAcxL,OAAO,CAACwL,WAAD,CAArB,CAAP;AACH,GAHD,CAIA,OAAOtI,GAAP,EAAY;AACR;AACA,QAAIA,GAAG,CAAC1C,IAAJ,KAAa,+BAAjB,EAAkD;AAC9C,YAAM,IAAIwD,KAAJ,CAAW,mBAAkBuH,GAAI,uBAAsBrJ,GAAI,IAA3D,CAAN;AACH;AACJ,GAd+C;AAgBhD;AACA;AACA;AACA;;;AACA,MAAIrD,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,CAAb;;AACA,MAAI;AACA,UAAM4M,QAAQ,GAAGzL,OAAO,CAACuD,OAAR,CAAgBgI,GAAhB,EAAqB;AAAE/H,MAAAA,KAAK,EAAE,CAACtB,GAAD;AAAT,KAArB,CAAjB,CADA;AAGA;;;AACA,UAAMwJ,UAAU,GAAI,GAAE5I,IAAI,CAACgC,GAAI,eAAchC,IAAI,CAACgC,GAAI,GAAEyG,GAAG,CAAC/M,OAAJ,CAAY,GAAZ,EAAiBsE,IAAI,CAACgC,GAAtB,CAA2B,EAAnF;AACA,UAAM6G,aAAa,GAAGF,QAAQ,CAACG,WAAT,CAAqBF,UAArB,CAAtB;;AACA,QAAIC,aAAa,IAAI,CAArB,EAAwB;AACpB,YAAME,YAAY,GAAGJ,QAAQ,CAAC3K,SAAT,CAAmB,CAAnB,EAAsB6K,aAAa,GAAGD,UAAU,CAAC9N,MAA3B,GAAoC,CAA1D,IAA+D,cAApF;AACAiB,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAYgN,YAAZ;AACA,YAAMC,WAAW,GAAG3E,WAAE,CAACkD,YAAH,CAAgBwB,YAAhB,EAA8B;AAAEvE,QAAAA,QAAQ,EAAE;AAAZ,OAA9B,CAApB;AACAzI,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAY6C,IAAI,CAAC3B,KAAL,CAAW+L,WAAX,CAAZ;AACH;AACJ,GAZD,CAaA,OAAO5I,GAAP,EAAY;AAEX,GAfD,SAgBQ;AACJ,WAAOrE,MAAP;AACH;AACJ;AACD;;;;;AAIA,AAAO,MAAMkN,0BAA0B,GAAG;AACtC,UAAQ,kHAD8B;AAEtC,aAAW,iHAF2B;AAGtC,UAAQ;AAH8B,CAAnC;;AChGP;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AAmBA,SAASC,eAAT,CAAyBlK,GAAzB,EAA8B;AAC1B,MAAIA,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,MAAzB,IAAmCA,GAAG,KAAK,OAA/C,EAAwD;AACpD,WAAO,MAAP;AACH,GAFD,MAGK;AACD,WAAO,QAAP;AACH;AACJ;;AACD,MAAMmK,QAAQ,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAiBtK,GAAG,GAAG,OAAvB,KAAmC;AAChDqK,EAAAA,GAAG,CAACE,SAAJ,CAAc,GAAd,EAAmB;AACf,oBAAgBC,IAAI,CAACC,WAAL,CAAiBzK,GAAjB,KAAyB,0BAD1B;AAEf,mCAA+B;AAFhB,GAAnB;AAIAqK,EAAAA,GAAG,CAAClP,KAAJ,CAAUmP,IAAV,EAAgBJ,eAAe,CAAClK,GAAD,CAA/B;AACAqK,EAAAA,GAAG,CAAC9L,GAAJ;AACH,CAPD;;AAQA,MAAMmM,SAAS,GAAG,CAACL,GAAD,EAAMM,MAAN,KAAiB;AAC/BN,EAAAA,GAAG,CAACE,SAAJ,CAAcI,MAAd;AACAN,EAAAA,GAAG,CAAC9L,GAAJ;AACH,CAHD;;AAIA,MAAMqM,WAAW,GAAG,CAACP,GAAD,EAAMQ,OAAN,EAAeC,IAAf,KAAwB;AACxCT,EAAAA,GAAG,CAAClP,KAAJ,CAAW,UAAS0P,OAAQ,kBAAiBC,IAAK,IAAlD;AACAT,EAAAA,GAAG,CAAClP,KAAJ,CAAU,MAAV;AACH,CAHD;;AAIA,AAAO,eAAegF,SAAf,CAAuB;AAAEC,EAAAA,GAAF;AAAOlG,EAAAA;AAAP,CAAvB,EAAwC;AAC3C4H,EAAAA,OAAO,CAACa,GAAR,CAAY/I,KAAK,CAAC0B,IAAN,CAAW,4BAAX,CAAZ;AACAwG,EAAAA,OAAO,CAACa,GAAR,CAAY,wDAAZ;AACAb,EAAAA,OAAO,CAACa,GAAR,CAAY,gBAAZ;AACA,QAAM;AAAEnH,IAAAA;AAAF,MAAWtB,MAAM,CAACoH,UAAxB,CAJ2C;;AAM3C,MAAIyJ,kBAAkB,GAAG,IAAIC,GAAJ,EAAzB;AACA,QAAMC,iBAAiB,GAAG,IAAI/E,GAAJ,EAA1B;AACA,QAAMgF,eAAe,GAAG,IAAIF,GAAJ,EAAxB;AACA,QAAMG,iBAAiB,GAAG,EAA1B;AACA,QAAM5K,UAAU,GAAG,IAAIC,mBAAJ,EAAnB;AACA,QAAM4K,WAAW,GAAGC,IAAI,CAACC,GAAL,EAApB;AACA,QAAMC,OAAO,GAAG,MAAMlG,WAAE,CAACE,QAAH,CAAYvE,IAAI,CAACC,IAAL,CAAUuK,SAAV,EAAqB,kBAArB,CAAZ,CAAtB;AACA,QAAMzK,sBAAsB,GAAGC,IAAI,CAACC,IAAL,CAAU/G,MAAM,CAACgH,cAAP,CAAsBtF,IAAhC,EAAsC,iBAAtC,CAA/B;AACA,MAAIuF,mBAAmB,GAAG;AAAExC,IAAAA,OAAO,EAAE;AAAX,GAA1B;;AACA,MAAI;AACAwC,IAAAA,mBAAmB,GAAGjD,OAAO,CAAC6C,sBAAD,CAA7B;AACH,GAFD,CAGA,OAAOK,GAAP,EAAY;AAEX;;AACD,QAAM5G,iBAAiB,GAAGoC,MAAM,CAAC8D,OAAP,CAAexG,MAAM,CAACyG,OAAtB,CAA1B,CArB2C;;AAuB3C,QAAM8K,kBAAkB,GAAG,EAA3B;;AACA,QAAMC,gBAAgB,GAAG,CAACb,OAAD,EAAUC,IAAV,KAAmB;AACxC,SAAK,MAAMa,MAAX,IAAqBR,iBAArB,EAAwC;AACpCP,MAAAA,WAAW,CAACe,MAAD,EAASd,OAAT,EAAkBC,IAAlB,CAAX;AACH;AACJ,GAJD;;AAKA,OAAK,MAAM,CAAC5N,EAAD,EAAK6E,YAAL,CAAX,IAAiCvH,iBAAjC,EAAoD;AAChD,QAAI,CAAC0C,EAAE,CAACb,UAAH,CAAc,QAAd,CAAL,EAA8B;AAC1B;AACH;;AACD,UAAM2F,MAAM,GAAGD,YAAY,CAACE,GAAb,CAAiB7F,KAAjB,CAAuB,KAAvB,CAAf;;AACA,QAAI4F,MAAM,CAAC,CAAD,CAAN,KAAc,OAAlB,EAA2B;AACvB,YAAM,IAAIE,KAAJ,CAAW,UAAShF,EAAG,8BAAvB,CAAN;AACH;;AACD8E,IAAAA,MAAM,CAAC1F,KAAP;AACA,QAAI6F,MAAJ,EAAYC,OAAZ;AACAA,IAAAA,OAAO,GAAGpB,IAAI,CAACS,OAAL,CAAarB,GAAb,EAAkB4B,MAAM,CAAC,CAAD,CAAxB,CAAV;;AACA,QAAIA,MAAM,CAAClG,MAAP,KAAkB,CAAtB,EAAyB;AACrBqG,MAAAA,MAAM,GAAGH,MAAM,CAAC,CAAD,CAAf;AACH,KAFD,MAGK;AACD,YAAM;AAAEK,QAAAA;AAAF,UAASC,KAAK,CAACN,MAAD,CAApB;AACAG,MAAAA,MAAM,GAAGE,EAAT;AACH;;AACDoJ,IAAAA,kBAAkB,CAAC/I,IAAnB,CAAwB,CAACN,OAAD,EAAUD,MAAV,CAAxB;AACAyJ,IAAAA,UAAU,CAAC,MAAMrL,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,MAAAA,EAAF;AAAMzD,MAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT;AAAb,KAAjC,CAAP,EAA2E,GAA3E,CAAV;AACH;;AACD,OAAK,MAAM,CAACyD,EAAD,EAAK6E,YAAL,CAAX,IAAiCvH,iBAAjC,EAAoD;AAChD,QAAI;AAAEyH,MAAAA;AAAF,QAAUF,YAAd;;AACA,QAAI,CAAC7E,EAAE,CAACb,UAAH,CAAc,UAAd,CAAL,EAAgC;AAC5B;AACH;;AACD,QAAI0F,YAAY,CAAC5H,KAAjB,EAAwB;AACpB8H,MAAAA,GAAG,IAAIF,YAAY,CAAC5H,KAAb,CAAmBuC,OAAnB,CAA2B,IAA3B,EAAiC,EAAjC,CAAP;AACH,KAP+C;AAShD;AACA;;;AACA,UAAMuG,aAAa,GAAGC,KAAK,CAAC/C,OAAN,CAAc8B,GAAd,EAAmB;AACrC5B,MAAAA,GAAG,EAAE8C,UAAU,CAAC9C,GAAX,EADgC;AAErC+C,MAAAA,SAAS,EAAE,IAF0B;AAGrCC,MAAAA,KAAK,EAAE,IAH8B;AAIrCjD,MAAAA;AAJqC,KAAnB,CAAtB;AAMA,UAAM;AAAElF,MAAAA,MAAF;AAAUuI,MAAAA;AAAV,QAAqBR,aAA3B;AACA/H,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAE+B,EAAR,CAAW,MAAX,EAAoByG,CAAD,IAAO;AACtB,UAAIC,SAAS,GAAGD,CAAC,CAACH,QAAF,EAAhB;;AACA,UAAII,SAAS,CAACC,QAAV,CAAmB,SAAnB,KAAiCD,SAAS,CAACC,QAAV,CAAmB,OAAnB,CAArC,EAAkE;AAC9DrD,QAAAA,UAAU,CAACqC,IAAX,CAAgB,cAAhB,EAAgC;AAAE1F,UAAAA;AAAF,SAAhC;AACAyG,QAAAA,SAAS,GAAGA,SAAS,CAACjH,OAAV,CAAkB,OAAlB,EAA2B,EAA3B,EAA+BA,OAA/B,CAAuC,SAAvC,EAAkD,EAAlD,CAAZ;AACH;;AACD,UAAIQ,EAAE,CAAC2G,QAAH,CAAY,MAAZ,CAAJ,EAAyB;AACrB,YAAIF,SAAS,CAACC,QAAV,CAAmB,SAAnB,KAAiCD,SAAS,CAACC,QAAV,CAAmB,OAAnB,CAArC,EAAkE;AAC9DrD,UAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,YAAAA,EAAF;AAAMzD,YAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,QAAZ;AAAb,WAAjC;AACH;;AACD,YAAI,+BAA+BqK,IAA/B,CAAoCH,SAApC,CAAJ,EAAoD;AAChDpD,UAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,YAAAA,EAAF;AAAMzD,YAAAA,KAAK,EAAE;AAAb,WAAjC;AACH;;AACD,cAAMsK,UAAU,GAAGJ,SAAS,CAACvE,KAAV,CAAgB,mBAAhB,CAAnB;;AACA,YAAI2E,UAAU,IAAIA,UAAU,CAAC,CAAD,CAAV,KAAkB,GAApC,EAAyC;AACrCxD,UAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,YAAAA,EAAF;AAAMzD,YAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,KAAV;AAAb,WAAjC;AACH;AACJ;;AACD8G,MAAAA,UAAU,CAACqC,IAAX,CAAgB,YAAhB,EAA8B;AAAE1F,QAAAA,EAAF;AAAMG,QAAAA,KAAK,EAAE,KAAb;AAAoBF,QAAAA,GAAG,EAAEwG;AAAzB,OAA9B;AACH,KAnBD;AAoBAF,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAExG,EAAR,CAAW,MAAX,EAAoByG,CAAD,IAAO;AACtBnD,MAAAA,UAAU,CAACqC,IAAX,CAAgB,YAAhB,EAA8B;AAAE1F,QAAAA,EAAF;AAAMG,QAAAA,KAAK,EAAE,OAAb;AAAsBF,QAAAA,GAAG,EAAEuG,CAAC,CAACH,QAAF;AAA3B,OAA9B;AACH,KAFD;AAGAE,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAExG,EAAR,CAAW,MAAX,EAAoByG,CAAD,IAAO,EAA1B;AACAT,IAAAA,aAAa,CAACK,KAAd,CAAqBlC,GAAD,IAAS;AACzBb,MAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,QAAAA,EAAF;AAAMnD,QAAAA,KAAK,EAAEqH;AAAb,OAAnC;AACH,KAFD;AAGA6B,IAAAA,aAAa,CAACO,IAAd,CAAmB,MAAM;AACrBjD,MAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAAE1F,QAAAA,EAAF;AAAMnD,QAAAA,KAAK,EAAE;AAAb,OAAnC;AACH,KAFD;AAGH;;AACD,WAAS8R,cAAT,CAAwBC,OAAxB,EAAiC;AAC7B,SAAK,MAAM,CAAC1J,OAAD,EAAUD,MAAV,CAAX,IAAgCsJ,kBAAhC,EAAoD;AAChD,UAAIK,OAAO,CAACzP,UAAR,CAAmB+F,OAAO,GAAGpB,IAAI,CAACgC,GAAlC,CAAJ,EAA4C;AACxC,cAAM+I,OAAO,GAAG/K,IAAI,CAACiE,OAAL,CAAa6G,OAAb,EAAsB5G,MAAtB,CAA6B,CAA7B,CAAhB;AACA,cAAM8G,cAAc,GAAG7J,MAAM,KAAK,GAAX,GAAiB,EAAjB,GAAsB,MAAMA,MAAnD;AACA,eAAO2J,OAAO,CACTpP,OADE,CACM0F,OADN,EACe4J,cADf,EAEFtP,OAFE,CAEM,SAFN,EAEiB,GAFjB,EAGFA,OAHE,CAGM,IAAIiJ,MAAJ,CAAY,GAAEoG,OAAQ,GAAtB,CAHN,EAGiCrG,uBAAuB,CAACqG,OAAD,CAAvB,IAAoCA,OAHrE,CAAP;AAIH;AACJ;;AACD,WAAO,IAAP;AACH;;AACD,iBAAeE,SAAf,CAAyBC,YAAzB,EAAuCJ,OAAvC,EAAgDK,WAAhD,EAA6D;AACzD,QAAIA,WAAJ,EAAiB;AACb,UAAIC,kBAAkB,GAAGlB,eAAe,CAACmB,GAAhB,CAAoBP,OAApB,CAAzB;;AACA,UAAI,CAACM,kBAAL,EAAyB;AACrBA,QAAAA,kBAAkB,GAAGD,WAAW,CAACD,YAAD,EAAe;AAAEI,UAAAA,QAAQ,EAAER;AAAZ,SAAf,CAAhC;AACAZ,QAAAA,eAAe,CAACqB,GAAhB,CAAoBT,OAApB,EAA6BM,kBAA7B;AACH;;AACDF,MAAAA,YAAY,GAAG,MAAME,kBAArB;AACAlB,MAAAA,eAAe,CAACsB,MAAhB,CAAuBV,OAAvB;AACH;;AACD,UAAM9L,GAAG,GAAGgB,IAAI,CAACiE,OAAL,CAAa6G,OAAb,EAAsB5G,MAAtB,CAA6B,CAA7B,CAAZ;;AACA,QAAIlF,GAAG,KAAK,IAAR,IAAgB0F,uBAAuB,CAAC1F,GAAD,CAAvB,KAAiC,IAArD,EAA2D;AACvDkM,MAAAA,YAAY,GAAG,MAAM7M,mBAAmB,CAAC6M,YAAD,EAAgBxM,IAAD,IAAU;AAC7D,YAAIA,IAAI,CAACrD,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AACzB,iBAAOqD,IAAP;AACH;;AACD,YAAIA,IAAI,CAACrD,UAAL,CAAgB,GAAhB,KAAwBqD,IAAI,CAACrD,UAAL,CAAgB,IAAhB,CAAxB,IAAiDqD,IAAI,CAACrD,UAAL,CAAgB,KAAhB,CAArD,EAA6E;AACzE,gBAAM2D,GAAG,GAAGgB,IAAI,CAACiE,OAAL,CAAavF,IAAb,EAAmBwF,MAAnB,CAA0B,CAA1B,CAAZ;;AACA,cAAI,CAAClF,GAAL,EAAU;AACN,mBAAON,IAAI,GAAG,KAAd;AACH;;AACD,gBAAM+F,YAAY,GAAGC,uBAAuB,CAAC1F,GAAD,CAA5C;;AACA,cAAIyF,YAAJ,EAAkB;AACd/F,YAAAA,IAAI,GAAGA,IAAI,CAAChD,OAAL,CAAa,IAAIiJ,MAAJ,CAAY,GAAE3F,GAAI,GAAlB,CAAb,EAAoCyF,YAApC,CAAP;AACH;;AACD,cAAI,CAACA,YAAY,IAAIzF,GAAjB,MAA0B,IAA9B,EAAoC;AAChCN,YAAAA,IAAI,GAAGA,IAAI,GAAG,WAAd;AACH;;AACD,iBAAOA,IAAP;AACH;;AACD,YAAIyB,mBAAmB,CAACxC,OAApB,CAA4Be,IAA5B,CAAJ,EAAuC;AACnC,iBAAOsB,IAAI,CAAC+E,KAAL,CAAWtE,OAAX,CAAoB,cAApB,EAAmCN,mBAAmB,CAACxC,OAApB,CAA4Be,IAA5B,CAAnC,CAAP;AACH;;AACDa,QAAAA,UAAU,CAACqC,IAAX,CAAgB,oBAAhB,EAAsC;AAAElF,UAAAA,SAAS,EAAEgC;AAAb,SAAtC;AACA,eAAQ,gBAAeA,IAAK,KAA5B;AACH,OAvBuC,CAAxC;AAwBH;;AACD,WAAOwM,YAAP;AACH;;AACD,WAASO,uBAAT,CAAiCX,OAAjC,EAA0CY,cAA1C,EAA0D;AACtD,UAAM,CAACxP,EAAD,EAAK;AAAE+E,MAAAA;AAAF,KAAL,IAAgByK,cAAtB;;AACA,QAAIxP,EAAE,CAACb,UAAH,CAAc,SAAd,CAAJ,EAA8B;AAC1B,YAAMoK,UAAU,GAAGvI,OAAO,CAACuD,OAAR,CAAgBQ,GAAhB,EAAqB;AAAEP,QAAAA,KAAK,EAAE,CAACtB,GAAD;AAAT,OAArB,CAAnB;;AACA,YAAM;AAAEsG,QAAAA;AAAF,UAAYxI,OAAO,CAACuI,UAAD,CAAzB;;AACA,aAAO,OAAO/H,IAAP,EAAaiO,OAAb,KAAyB;AAC5BpM,QAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,UAAAA,EAAF;AAAMzD,UAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,QAAZ;AAAb,SAAjC;;AACA,YAAI;AACA,cAAI;AAAEsD,YAAAA;AAAF,cAAa,MAAM2J,KAAK,CAACoF,OAAD,CAA5B;AACA,iBAAO/O,MAAP;AACH,SAHD,CAIA,OAAOqE,GAAP,EAAY;AACRA,UAAAA,GAAG,CAACuF,OAAJ,GAAe,IAAGzJ,EAAG,KAAIkE,GAAG,CAACuF,OAAQ,EAArC;AACA7E,UAAAA,OAAO,CAAC/H,KAAR,CAAcqH,GAAd;AACA,iBAAO,EAAP;AACH,SARD,SASQ;AACJb,UAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,YAAAA,EAAF;AAAMzD,YAAAA,KAAK,EAAE;AAAb,WAAjC;AACH;AACJ,OAdD;AAeH;;AACD,QAAIyD,EAAE,CAACb,UAAH,CAAc,QAAd,CAAJ,EAA6B;AACzB,aAAO,OAAOqC,IAAP,EAAaiO,OAAb,KAAyB;AAC5BpM,QAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,UAAAA,EAAF;AAAMzD,UAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,QAAZ;AAAb,SAAjC;AACA,YAAImT,WAAW,GAAG3K,GAAG,CAACvF,OAAJ,CAAY,OAAZ,EAAqBiQ,OAAO,CAACL,QAA7B,CAAlB;AACA,cAAM;AAAEpR,UAAAA,MAAF;AAAUuI,UAAAA;AAAV,YAAqB,MAAMP,KAAK,CAAC/C,OAAN,CAAcyM,WAAd,EAA2B;AACxDvM,UAAAA,GAAG,EAAE8C,UAAU,CAAC9C,GAAX,EADmD;AAExD+C,UAAAA,SAAS,EAAE,IAF6C;AAGxDC,UAAAA,KAAK,EAAE,IAHiD;AAIxD+C,UAAAA,KAAK,EAAE1H,IAJiD;AAKxD0B,UAAAA;AALwD,SAA3B,CAAjC;;AAOA,YAAIqD,MAAJ,EAAY;AACR3B,UAAAA,OAAO,CAAC/H,KAAR,CAAc0J,MAAd;AACH;;AACDlD,QAAAA,UAAU,CAACqC,IAAX,CAAgB,eAAhB,EAAiC;AAAE1F,UAAAA,EAAF;AAAMzD,UAAAA,KAAK,EAAE;AAAb,SAAjC;AACA,eAAOyB,MAAP;AACH,OAfD;AAgBH;AACJ;;AACD2R,EAAAA,IAAI,CACCC,YADL,CACkB,OAAO1C,GAAP,EAAYC,GAAZ,KAAoB;AAClC,UAAM0C,MAAM,GAAG3C,GAAG,CAACrK,GAAnB;AACA,QAAIiN,OAAO,GAAGC,SAAS,CAAClN,GAAG,CAAC9B,KAAJ,CAAU8O,MAAV,EAAkBG,QAAnB,CAAvB,CAFkC;;AAIlC7C,IAAAA,GAAG,CAACpN,EAAJ,CAAO,QAAP,EAAiB,MAAM;AACnB,YAAM;AAAEkQ,QAAAA,MAAF;AAAUpN,QAAAA;AAAV,UAAkBqK,GAAxB;AACA,YAAM;AAAEgD,QAAAA;AAAF,UAAiB/C,GAAvB;;AACA,UAAI+C,UAAU,KAAK,GAAnB,EAAwB;AACpB7M,QAAAA,UAAU,CAACqC,IAAX,CAAgB,iBAAhB,EAAmC;AAC/BuK,UAAAA,MAD+B;AAE/BpN,UAAAA,GAF+B;AAG/BqN,UAAAA;AAH+B,SAAnC;AAKH;AACJ,KAVD;;AAWA,QAAIJ,OAAO,KAAK,aAAhB,EAA+B;AAC3B3C,MAAAA,GAAG,CAACE,SAAJ,CAAc,GAAd,EAAmB;AACf8C,QAAAA,UAAU,EAAE,YADG;AAEf,wBAAgB,mBAFD;AAGf,yBAAiB,UAHF;AAIf,uCAA+B;AAJhB,OAAnB;AAMAzC,MAAAA,WAAW,CAACP,GAAD,EAAM,WAAN,EAAmB,OAAnB,CAAX;AACAiD,MAAAA,WAAW,CAAC1C,WAAD,EAAc,KAAd,EAAqBP,GAArB,EAA0B,MAA1B,EAAkC,SAAlC,CAAX;AACAc,MAAAA,iBAAiB,CAACzI,IAAlB,CAAuB2H,GAAvB;AACAD,MAAAA,GAAG,CAACnN,EAAJ,CAAO,OAAP,EAAgB,MAAM;AAClBkO,QAAAA,iBAAiB,CAACoC,MAAlB,CAAyBpC,iBAAiB,CAACqC,OAAlB,CAA0BnD,GAA1B,CAAzB,EAAyD,CAAzD;AACH,OAFD;AAGA;AACH;;AACD,QAAI2C,OAAO,KAAK,+BAAhB,EAAiD;AAC7C7C,MAAAA,QAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWkB,OAAX,EAAoB,KAApB,CAAR;AACA;AACH;;AACD,UAAMkC,kBAAkB,GAAG,EAA3B;;AACA,aAASC,eAAT,CAAyBC,aAAzB,EAAwC;AACpCF,MAAAA,kBAAkB,CAAC/K,IAAnB,CAAwBiL,aAAxB;AACA,aAAOtI,WAAE,CACJuI,IADE,CACGD,aADH,EAEFnK,IAFE,CAEIoK,IAAD,IAAWA,IAAI,CAACC,MAAL,KAAgBF,aAAhB,GAAgC,IAF9C,EAGFrK,KAHE,CAGI,MAAM;AAAK;AAHf,OAAP;AAIH;;AACD,QAAIwK,aAAa,GAAG,KAApB;;AACA,QAAId,OAAO,CAACnJ,QAAR,CAAiB,WAAjB,CAAJ,EAAmC;AAC/BiK,MAAAA,aAAa,GAAG,IAAhB;AACAd,MAAAA,OAAO,GAAGA,OAAO,CAACtQ,OAAR,CAAgB,WAAhB,EAA6B,EAA7B,CAAV;AACH;;AACD,QAAIqR,gBAAgB,GAAG/M,IAAI,CAAC/C,KAAL,CAAW+O,OAAX,EAAoBhN,GAApB,CAAwBgO,WAAxB,EAAvB;AACA,QAAIC,OAAO,GAAG,KAAd;AACA,QAAI9B,WAAJ,CAjDkC;AAmDlC;AACA;AACA;AACA;AACA;AACA;;AACA,QAAI+B,eAAe,GAAGH,gBAAtB;;AACA,mBAAeI,cAAf,CAA8BC,QAA9B,EAAwC;AACpC,WAAK,MAAM,CAAChM,OAAD,EAAUD,MAAV,CAAX,IAAgCsJ,kBAAhC,EAAoD;AAChD,YAAIkC,aAAJ;;AACA,YAAIxL,MAAM,KAAK,GAAf,EAAoB;AAChBwL,UAAAA,aAAa,GAAG3M,IAAI,CAACC,IAAL,CAAUmB,OAAV,EAAmBgM,QAAnB,CAAhB;AACH,SAFD,MAGK,IAAIA,QAAQ,CAAC/R,UAAT,CAAoB,MAAM8F,MAA1B,CAAJ,EAAuC;AACxCwL,UAAAA,aAAa,GAAG3M,IAAI,CAACC,IAAL,CAAUmB,OAAV,EAAmBgM,QAAQ,CAAC1R,OAAT,CAAiByF,MAAjB,EAAyB,GAAzB,CAAnB,CAAhB;AACH,SAFI,MAGA;AACD;AACH;;AACD,YAAI4L,gBAAJ,EAAsB;AAClB,eAAK,MAAM,CAAC7Q,EAAD,EAAK6E,YAAL,CAAX,IAAiCvH,iBAAjC,EAAoD;AAChD,gBAAI,CAAC0C,EAAE,CAACb,UAAH,CAAc,QAAd,CAAD,IAA4B,CAACa,EAAE,CAACb,UAAH,CAAc,SAAd,CAAjC,EAA2D;AACvD;AACH;;AACD,kBAAMgS,UAAU,GAAGnR,EAAE,CAACd,KAAH,CAAS,GAAT,EAAc,CAAd,CAAnB;;AACA,gBAAIiS,UAAU,KAAKN,gBAAgB,CAAC7I,MAAjB,CAAwB,CAAxB,CAAf,IACAQ,uBAAuB,CAAC2I,UAAD,CAAvB,KAAwCN,gBAAgB,CAAC7I,MAAjB,CAAwB,CAAxB,CAD5C,EACwE;AACpE,oBAAMoJ,OAAO,GAAGX,aAAa,CAACjR,OAAd,CAAsBqR,gBAAtB,EAAyC,IAAGM,UAAW,EAAvD,CAAhB;AACA,oBAAMvC,OAAO,GAAG,MAAM4B,eAAe,CAACY,OAAD,CAArC;;AACA,kBAAIxC,OAAJ,EAAa;AACT,uBAAO,CAACA,OAAD,EAAU,CAAC5O,EAAD,EAAK6E,YAAL,CAAV,CAAP;AACH;AACJ;AACJ;;AACD,gBAAM+J,OAAO,GAAG,MAAM4B,eAAe,CAACC,aAAD,CAArC;;AACA,cAAI7B,OAAJ,EAAa;AACT,mBAAO,CAACA,OAAD,EAAU,IAAV,CAAP;AACH;AACJ,SAnBD,MAoBK;AACD,cAAIA,OAAO,GAAG,CAAC,MAAM4B,eAAe,CAACC,aAAa,GAAG,OAAjB,CAAtB,MACT,MAAMD,eAAe,CAACC,aAAa,GAAG,YAAjB,CADZ,MAET,MAAMD,eAAe,CAACC,aAAa,GAAG,aAAjB,CAFZ,CAAd;;AAGA,cAAI,CAAC7B,OAAD,IAAY3J,MAAM,KAAK,GAAvB,IAA8BjI,MAAM,CAACoH,UAAP,CAAkBqG,QAApD,EAA8D;AAC1D,kBAAMD,YAAY,GAAGvF,MAAM,KAAK,GAAX,GACfnB,IAAI,CAACC,IAAL,CAAUmB,OAAV,EAAmBlI,MAAM,CAACoH,UAAP,CAAkBqG,QAArC,CADe,GAEf3G,IAAI,CAACC,IAAL,CAAUb,GAAV,EAAelG,MAAM,CAACoH,UAAP,CAAkBqG,QAAjC,CAFN;AAGAmE,YAAAA,OAAO,GAAG,MAAM4B,eAAe,CAAChG,YAAD,CAA/B;AACH;;AACD,cAAIoE,OAAJ,EAAa;AACToC,YAAAA,eAAe,GAAG,OAAlB;AACAD,YAAAA,OAAO,GAAG,IAAV;AACH;;AACD,iBAAO,CAACnC,OAAD,EAAU,IAAV,CAAP;AACH;AACJ;;AACD,aAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACH;;AACD,UAAM,CAACA,OAAD,EAAUY,cAAV,IAA4B,MAAMyB,cAAc,CAACnB,OAAD,CAAtD;;AACA,QAAIiB,OAAJ,EAAa;AACT1N,MAAAA,UAAU,CAACqC,IAAX,CAAgB,aAAhB;AACH;;AACD,QAAI,CAACkJ,OAAL,EAAc;AACV,YAAMyC,MAAM,GAAG3U,KAAK,CAACI,GAAN,CAAU,MAAV,CAAf;AACA8H,MAAAA,OAAO,CAAC/H,KAAR,CAAe,SAAQgT,MAAO,KAAIU,kBAAkB,CAACxJ,GAAnB,CAAwBwE,GAAD,IAAS8F,MAAM,GAAG9F,GAAzC,EAA8CxH,IAA9C,CAAmD,IAAnD,CAAyD,EAA3F;AACA,aAAOyJ,SAAS,CAACL,GAAD,EAAM,GAAN,CAAhB;AACH;;AACD,QAAIqC,cAAJ,EAAoB;AAChBP,MAAAA,WAAW,GAAGM,uBAAuB,CAACX,OAAD,EAAUY,cAAV,CAArC;AACH,KAxHiC;;;AA0HlC,QAAI8B,iBAAiB,GAAGzD,kBAAkB,CAACsB,GAAnB,CAAuBP,OAAvB,CAAxB;;AACA,QAAI0C,iBAAJ,EAAuB;AACnB,UAAIP,OAAJ,EAAa;AACTO,QAAAA,iBAAiB,GACbA,iBAAiB,CAACjL,QAAlB,KACK,qEAFT;AAGH;;AACD,UAAIuK,aAAJ,EAAmB;AACfI,QAAAA,eAAe,GAAG,KAAlB;AACAM,QAAAA,iBAAiB,GAAG1O,oBAAoB,CAACkN,OAAD,EAAUwB,iBAAiB,CAACjL,QAAlB,EAAV,EAAwCwK,gBAAxC,EAA0D,IAA1D,CAAxC;AACH;;AACD5D,MAAAA,QAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWmE,iBAAX,EAA8BN,eAA9B,CAAR;AACA;AACH,KAvIiC;;;AAyIlC,QAAIhC,YAAJ;;AACA,QAAI;AACAA,MAAAA,YAAY,GAAG,MAAM7G,WAAE,CAACE,QAAH,CAAYuG,OAAZ,EAAqB5B,eAAe,CAAC6D,gBAAD,CAApC,CAArB;AACH,KAFD,CAGA,OAAO3M,GAAP,EAAY;AACRU,MAAAA,OAAO,CAAC/H,KAAR,CAAc+R,OAAd,EAAuB1K,GAAvB;AACA,aAAOsJ,SAAS,CAACL,GAAD,EAAM,GAAN,CAAhB;AACH,KAhJiC;AAkJlC;AACA;;;AACA,UAAMoE,eAAe,GAAG,CAACxD,iBAAiB,CAAC7D,GAAlB,CAAsB0E,OAAtB,CAAD,KACnB,MAAM4C,OAAO,CAACrC,GAAR,CAAYlE,WAAZ,EAAyB2D,OAAzB,EAAkCxI,KAAlC,CAAwC,MAAM,IAA9C,CADa,CAAxB;;AAEA,QAAImL,eAAJ,EAAqB;AACjB,YAAM;AAAEE,QAAAA;AAAF,UAAuBF,eAAe,CAACG,QAA7C;AACA,YAAMC,WAAW,GAAGC,IAAI,CAAC5C,YAAD,CAAxB;;AACA,UAAIyC,gBAAgB,KAAKE,WAAzB,EAAsC;AAClC,cAAME,kBAAkB,GAAGN,eAAe,CAAC3D,IAA3C;AACAC,QAAAA,kBAAkB,CAACwB,GAAnB,CAAuBT,OAAvB,EAAgCiD,kBAAhC;AACA,YAAIC,cAAc,GAAGD,kBAArB;;AACA,YAAId,OAAJ,EAAa;AACTe,UAAAA,cAAc,GACVA,cAAc,CAACzL,QAAf,KACK,qEAFT;AAGH;;AACD,YAAIuK,aAAJ,EAAmB;AACfI,UAAAA,eAAe,GAAG,KAAlB;AACAc,UAAAA,cAAc,GAAGlP,oBAAoB,CAACkN,OAAD,EAAU+B,kBAAkB,CAACxL,QAAnB,EAAV,EAAyCwK,gBAAzC,EAA2D,IAA3D,CAArC;AACH,SAZiC;;;AAclC5D,QAAAA,QAAQ,CAACC,GAAD,EAAMC,GAAN,EAAW2E,cAAX,EAA2Bd,eAA3B,CAAR;AACA,YAAIe,qBAAqB,GAAG,IAA5B;;AACA,YAAI;AACAA,UAAAA,qBAAqB,GAAG,MAAMhD,SAAS,CAACC,YAAD,EAAeJ,OAAf,EAAwBK,WAAxB,CAAvC;;AACA,cAAI8C,qBAAqB,IAAInB,aAA7B,EAA4C;AACxCmB,YAAAA,qBAAqB,GAAGnP,oBAAoB,CAACkN,OAAD,EAAUiC,qBAAV,EAAiClB,gBAAjC,EAAmD,IAAnD,CAA5C;AACH;AACJ,SALD,CAMA,OAAO3M,GAAP,EAAY;AAEX,SARD,SASQ;AACJ,cAAI,CAAC6N,qBAAD,IACA,CAACF,kBAAkB,CAACG,MAAnB,CAA0BC,MAAM,CAACC,IAAP,CAAYH,qBAAZ,EAAmC/E,eAAe,CAAC6D,gBAAD,CAAlD,CAA1B,CADL,EACuG;AACnGhD,YAAAA,kBAAkB,CAACsE,KAAnB;AACA,kBAAMX,OAAO,CAACY,EAAR,CAAWvK,GAAX,CAAeoD,WAAf,CAAN;AACAuD,YAAAA,gBAAgB,CAAC,SAAD,EAAY,QAAZ,CAAhB;AACH;AACJ;;AACD;AACH;AACJ,KA5LiC;;;AA8LlC,QAAI6D,UAAJ;;AACA,QAAI;AACAA,MAAAA,UAAU,GAAG,MAAMtD,SAAS,CAACC,YAAD,EAAeJ,OAAf,EAAwBK,WAAxB,CAA5B;AACH,KAFD,CAGA,OAAO/K,GAAP,EAAY;AACRU,MAAAA,OAAO,CAAC/H,KAAR,CAAc+R,OAAd,EAAuB1K,GAAvB;AACA,aAAOsJ,SAAS,CAACL,GAAD,EAAM,GAAN,CAAhB;AACH;;AACDU,IAAAA,kBAAkB,CAACwB,GAAnB,CAAuBT,OAAvB,EAAgCqD,MAAM,CAACC,IAAP,CAAYG,UAAZ,EAAwBrF,eAAe,CAAC6D,gBAAD,CAAvC,CAAhC;AACA,UAAMY,gBAAgB,GAAGG,IAAI,CAAC5C,YAAD,CAA7B;AACAwC,IAAAA,OAAO,CAACc,GAAR,CAAYrH,WAAZ,EAAyB2D,OAAzB,EAAkCqD,MAAM,CAACC,IAAP,CAAYG,UAAZ,EAAwBrF,eAAe,CAAC6D,gBAAD,CAAvC,CAAlC,EAA8F;AAAEa,MAAAA,QAAQ,EAAE;AAAED,QAAAA;AAAF;AAAZ,KAA9F;;AACA,QAAIV,OAAJ,EAAa;AACTsB,MAAAA,UAAU,IAAK,qEAAf;AACH;;AACD,QAAIzB,aAAJ,EAAmB;AACfI,MAAAA,eAAe,GAAG,KAAlB;AACAqB,MAAAA,UAAU,GAAGzP,oBAAoB,CAACkN,OAAD,EAAUuC,UAAV,EAAsBxB,gBAAtB,EAAwC,IAAxC,CAAjC;AACH;;AACD5D,IAAAA,QAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWkF,UAAX,EAAuBrB,eAAvB,CAAR;AACH,GAlND,EAmNKuB,MAnNL,CAmNYjU,IAnNZ;;AAoNA,iBAAekU,YAAf,CAA4B5D,OAA5B,EAAqC;AACjC,UAAM6D,OAAO,GAAG9D,cAAc,CAACC,OAAD,CAA9B;AACAJ,IAAAA,gBAAgB,CAAC,SAAD,EAAY9L,IAAI,CAACC,SAAL,CAAe;AAAEE,MAAAA,GAAG,EAAE4P;AAAP,KAAf,CAAZ,CAAhB;AACA5E,IAAAA,kBAAkB,CAACyB,MAAnB,CAA0BV,OAA1B;AACAb,IAAAA,iBAAiB,CAACnF,GAAlB,CAAsBgG,OAAtB;AACA,UAAM4C,OAAO,CAACY,EAAR,CAAWM,KAAX,CAAiBzH,WAAjB,EAA8B2D,OAA9B,CAAN;AACAb,IAAAA,iBAAiB,CAACuB,MAAlB,CAAyBV,OAAzB;AACH;;AACD,QAAM+D,OAAO,GAAGC,QAAQ,CAAC3V,KAAT,CAAesR,kBAAkB,CAACxH,GAAnB,CAAuB,CAAC,CAAC7B,OAAD,CAAD,KAAeA,OAAtC,CAAf,EAA+D;AAC3E2N,IAAAA,OAAO,EAAE7V,MAAM,CAACuK,OAD2D;AAE3EuL,IAAAA,UAAU,EAAE,IAF+D;AAG3EC,IAAAA,aAAa,EAAE,IAH4D;AAI3EC,IAAAA,eAAe,EAAE;AAJ0D,GAA/D,CAAhB;AAMAL,EAAAA,OAAO,CAAC5S,EAAR,CAAW,KAAX,EAAmB6O,OAAD,IAAa4D,YAAY,CAAC5D,OAAD,CAA3C;AACA+D,EAAAA,OAAO,CAAC5S,EAAR,CAAW,QAAX,EAAsB6O,OAAD,IAAa4D,YAAY,CAAC5D,OAAD,CAA9C;AACA+D,EAAAA,OAAO,CAAC5S,EAAR,CAAW,QAAX,EAAsB6O,OAAD,IAAa4D,YAAY,CAAC5D,OAAD,CAA9C;AACA7Q,EAAAA,OAAO,CAACgC,EAAR,CAAW,QAAX,EAAqB,MAAM;AACvB,SAAK,MAAM0O,MAAX,IAAqBR,iBAArB,EAAwC;AACpCQ,MAAAA,MAAM,CAACpN,GAAP;AACH;;AACDtD,IAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH,GALD;;AAMA8E,EAAAA,OAAO,CAACa,GAAR,GAAc,CAAC,GAAGrF,IAAJ,KAAa;AACvBiD,IAAAA,UAAU,CAACqC,IAAX,CAAgB,SAAhB,EAA2B;AAAEvF,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA;AAAhB,KAA3B;AACH,GAFD;;AAGAwE,EAAAA,OAAO,CAACe,IAAR,GAAe,CAAC,GAAGvF,IAAJ,KAAa;AACxBiD,IAAAA,UAAU,CAACqC,IAAX,CAAgB,SAAhB,EAA2B;AAAEvF,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA;AAAjB,KAA3B;AACH,GAFD;;AAGAwE,EAAAA,OAAO,CAAC/H,KAAR,GAAgB,CAAC,GAAGuD,IAAJ,KAAa;AACzBiD,IAAAA,UAAU,CAACqC,IAAX,CAAgB,SAAhB,EAA2B;AAAEvF,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA;AAAlB,KAA3B;AACH,GAFD;;AAGA,QAAM5B,GAAG,GAAGkB,MAAM,CAACC,MAAP,CAAcsT,EAAE,CAACC,iBAAH,EAAd,EACPtT,MADO,CACA,CAACuT,KAAD,EAAQC,CAAR,KAAc,CAAC,GAAGD,KAAJ,EAAW,IAAIC,CAAC,IAAI,EAAT,CAAX,CADd,EACwC,EADxC,EAEP1R,MAFO,CAEC0R,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAa,MAAb,IAAuBD,CAAC,CAACE,QAAF,KAAe,KAF7C,EAGPvM,GAHO,CAGFqM,CAAD,IAAOA,CAAC,CAACG,OAHN,CAAZ;AAIAnW,EAAAA,KAAK,CAACiG,UAAD,EAAa/F,iBAAb,EAAgC4C,SAAhC,EAA2C;AAC5C5B,IAAAA,IAD4C;AAE5CE,IAAAA,GAF4C;AAG5CC,IAAAA,WAAW,EAAE0P,IAAI,CAACC,GAAL,KAAaF;AAHkB,GAA3C,CAAL;AAKAsF,EAAAA,aAAa,CAAClV,IAAD,CAAb;AACA,SAAO,IAAIsJ,OAAJ,CAAY,MAAM,EAAlB,CAAP;AACH;;AACD,SAAS4L,aAAT,CAAuBlV,IAAvB,EAA6B;AACzB,QAAMuE,GAAG,GAAI,oBAAmBvE,IAAK,EAArC;AACA,MAAImV,OAAO,GAAG,UAAd;AACA,MAAI1V,OAAO,CAAC2V,QAAR,KAAqB,QAAzB,EACID,OAAO,GAAG,MAAV;AACJ,MAAI1V,OAAO,CAAC2V,QAAR,KAAqB,OAAzB,EACID,OAAO,GAAG,OAAV;AACJzN,EAAAA,KAAK,CAACyN,OAAD,EAAU,CAAC5Q,GAAD,CAAV,CAAL,CAAsBuD,KAAtB,CAA4B,MAAM;AAEjC,GAFD;AAGH;;ACxgBD,MAAMuN,WAAW,GAAG,UAApB;AACA,MAAMC,cAAc,GAAG,CAAC,sBAAD,EAAyB,gBAAzB,CAAvB;;AAEA,MAAMC,cAAc,GAAG;AACnBtM,EAAAA,OAAO,EAAE,CAAC,gBAAD,EAAmB,qBAAnB,CADU;AAEnBuM,EAAAA,gBAAgB,EAAE,EAFC;AAGnB9P,EAAAA,cAAc,EAAE;AACZtF,IAAAA,IAAI,EAAE,aADM;AAEZqV,IAAAA,eAAe,EAAE,EAFL;AAGZC,IAAAA,YAAY,EAAE,KAHF;AAIZ7Q,IAAAA,GAAG,EAAE,EAJO;AAKZ8Q,IAAAA,KAAK,EAAE,EALK;AAMZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,MAAM,EAAE;AAFJ;AANI,GAHG;AAcnBhQ,EAAAA,UAAU,EAAE;AACR9F,IAAAA,IAAI,EAAE,IADE;AAERoG,IAAAA,GAAG,EAAE,OAFG;AAGR+F,IAAAA,QAAQ,EAAE,YAHF;AAIRpG,IAAAA,MAAM,EAAEnE;AAJA;AAdO,CAAvB;AAqBA,MAAMmU,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,QADW;AAEjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,OAAO,EAAE;AAAEF,MAAAA,IAAI,EAAE;AAAR,KADD;AAERR,IAAAA,gBAAgB,EAAE;AAAEQ,MAAAA,IAAI,EAAE,OAAR;AAAiBG,MAAAA,KAAK,EAAE;AAAEH,QAAAA,IAAI,EAAE;AAAR;AAAxB,KAFV;AAGR/M,IAAAA,OAAO,EAAE;AAAE+M,MAAAA,IAAI,EAAE,OAAR;AAAiBG,MAAAA,KAAK,EAAE;AAAEH,QAAAA,IAAI,EAAE;AAAR;AAAxB,KAHD;AAIRI,IAAAA,eAAe,EAAE;AACbJ,MAAAA,IAAI,EAAE,CAAC,QAAD,CADO;AAEbK,MAAAA,oBAAoB,EAAE;AAAEL,QAAAA,IAAI,EAAE;AAAR;AAFT,KAJT;AAQRtQ,IAAAA,cAAc,EAAE;AACZsQ,MAAAA,IAAI,EAAE,QADM;AAEZC,MAAAA,UAAU,EAAE;AACR7V,QAAAA,IAAI,EAAE;AAAE4V,UAAAA,IAAI,EAAE;AAAR,SADE;AAERP,QAAAA,eAAe,EAAE;AAAEO,UAAAA,IAAI,EAAE,OAAR;AAAiBG,UAAAA,KAAK,EAAE;AAAEH,YAAAA,IAAI,EAAE;AAAR;AAAxB,SAFT;AAGRN,QAAAA,YAAY,EAAE;AAAEM,UAAAA,IAAI,EAAE;AAAR,SAHN;AAIRM,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE,CAAC;AAAEP,YAAAA,IAAI,EAAE;AAAR,WAAD,EAAsB;AAAEA,YAAAA,IAAI,EAAE;AAAR,WAAtB;AAAT,SAJH;AAKRL,QAAAA,KAAK,EAAE;AACHK,UAAAA,IAAI,EAAE,QADH;AAEHK,UAAAA,oBAAoB,EAAE;AAAEL,YAAAA,IAAI,EAAE;AAAR;AAFnB,SALC;AASRnR,QAAAA,GAAG,EAAE;AACDmR,UAAAA,IAAI,EAAE,QADL;AAEDK,UAAAA,oBAAoB,EAAE;AAClBE,YAAAA,KAAK,EAAE,CACH;AAAE7U,cAAAA,EAAE,EAAE,cAAN;AAAsBsU,cAAAA,IAAI,EAAE;AAA5B,aADG,EAEH;AAAEtU,cAAAA,EAAE,EAAE,cAAN;AAAsBsU,cAAAA,IAAI,EAAE;AAA5B,aAFG,EAGH;AAAEtU,cAAAA,EAAE,EAAE,YAAN;AAAoBsU,cAAAA,IAAI,EAAE,SAA1B;AAAqCQ,cAAAA,IAAI,EAAE,CAAC,IAAD;AAA3C,aAHG;AADW;AAFrB,SATG;AAmBRZ,QAAAA,MAAM,EAAE;AACJI,UAAAA,IAAI,EAAE,QADF;AAEJC,UAAAA,UAAU,EAAE;AACRJ,YAAAA,OAAO,EAAE;AAAEG,cAAAA,IAAI,EAAE,OAAR;AAAiBG,cAAAA,KAAK,EAAE;AAAEH,gBAAAA,IAAI,EAAE;AAAR;AAAxB,aADD;AAERF,YAAAA,MAAM,EAAE;AACJE,cAAAA,IAAI,EAAE,OADF;AAEJG,cAAAA,KAAK,EAAE;AAAEH,gBAAAA,IAAI,EAAE;AAAR;AAFH,aAFA;AAMRS,YAAAA,YAAY,EAAE;AACVT,cAAAA,IAAI,EAAE,QADI;AAEVK,cAAAA,oBAAoB,EAAE;AAAEL,gBAAAA,IAAI,EAAE,OAAR;AAAiBG,gBAAAA,KAAK,EAAE;AAAEH,kBAAAA,IAAI,EAAE;AAAR;AAAxB;AAFZ;AANN;AAFR;AAnBA;AAFA,KARR;AA6CRlQ,IAAAA,UAAU,EAAE;AACRkQ,MAAAA,IAAI,EAAE,QADE;AAERC,MAAAA,UAAU,EAAE;AACRjW,QAAAA,IAAI,EAAE;AAAEgW,UAAAA,IAAI,EAAE;AAAR,SADE;AAER5P,QAAAA,GAAG,EAAE;AAAE4P,UAAAA,IAAI,EAAE;AAAR,SAFG;AAGR7J,QAAAA,QAAQ,EAAE;AAAE6J,UAAAA,IAAI,EAAE;AAAR,SAHF;AAIRjQ,QAAAA,MAAM,EAAE;AAAEiQ,UAAAA,IAAI,EAAE;AAAR;AAJA;AAFJ,KA7CJ;AAsDR7Q,IAAAA,OAAO,EAAE;AACL6Q,MAAAA,IAAI,EAAE,QADD;AAELK,MAAAA,oBAAoB,EAAE;AAAEL,QAAAA,IAAI,EAAE,CAAC,QAAD;AAAR;AAFjB;AAtDD;AAFK,CAArB;AA8DA;;;;;;;AAMA,SAASU,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAMpV,MAAM,GAAG;AACXmE,IAAAA,cAAc,EAAE,EADL;AAEXI,IAAAA,UAAU,EAAE;AAFD,GAAf;;AAIA,QAAkC8Q,aAAlC,4BAAoDD,KAApD;;AACA,OAAK,MAAM,CAACE,IAAD,EAAOC,GAAP,CAAX,IAA0B1V,MAAM,CAAC8D,OAAP,CAAe0R,aAAf,CAA1B,EAAyD;AACrD,QAAIC,IAAI,KAAK,GAAT,IAAgBA,IAAI,CAACzO,QAAL,CAAc,GAAd,CAApB,EAAwC;AACpC;AACH;;AACD,QAAI2N,YAAY,CAACE,UAAb,CAAwBY,IAAxB,CAAJ,EAAmC;AAC/BtV,MAAAA,MAAM,CAACsV,IAAD,CAAN,GAAeC,GAAf;AACA;AACH;;AACD,QAAIf,YAAY,CAACE,UAAb,CAAwBvQ,cAAxB,CAAuCuQ,UAAvC,CAAkDY,IAAlD,CAAJ,EAA6D;AACzDtV,MAAAA,MAAM,CAACmE,cAAP,CAAsBmR,IAAtB,IAA8BC,GAA9B;AACA;AACH;;AACD,QAAIf,YAAY,CAACE,UAAb,CAAwBnQ,UAAxB,CAAmCmQ,UAAnC,CAA8CY,IAA9C,CAAJ,EAAyD;AACrDtV,MAAAA,MAAM,CAACuE,UAAP,CAAkB+Q,IAAlB,IAA0BC,GAA1B;AACA;AACH;;AACDxQ,IAAAA,OAAO,CAAC/H,KAAR,CAAe,sBAAqBsY,IAAK,GAAzC;AACApX,IAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH;;AACD,MAAID,MAAM,CAACmE,cAAP,CAAsBb,GAA1B,EAA+B;AAC3BtD,IAAAA,MAAM,CAACmE,cAAP,CAAsBb,GAAtB,GAA4BtD,MAAM,CAACmE,cAAP,CAAsBb,GAAtB,CAA0BvD,MAA1B,CAAiC,CAACyV,GAAD,EAAMrV,EAAN,KAAa;AACtE,YAAMsV,KAAK,GAAGtV,EAAE,CAACsQ,OAAH,CAAW,GAAX,CAAd;AACA,YAAM,CAAC5E,GAAD,EAAM0J,GAAN,IAAaE,KAAK,GAAG,CAAR,GAAY,CAACtV,EAAE,CAACgI,MAAH,CAAU,CAAV,EAAasN,KAAb,CAAD,EAAsBtV,EAAE,CAACgI,MAAH,CAAUsN,KAAK,GAAG,CAAlB,CAAtB,CAAZ,GAA0D,CAACtV,EAAD,EAAK,IAAL,CAA7E;AACAqV,MAAAA,GAAG,CAAC3J,GAAD,CAAH,GAAW0J,GAAX;AACA,aAAOC,GAAP;AACH,KAL2B,EAKzB,EALyB,CAA5B;AAMH;;AACD,SAAOxV,MAAP;AACH;AACD;;;AACA,SAAS0V,eAAT,CAAyBvY,MAAzB,EAAiC;AAC7B,QAAMkG,GAAG,GAAGnF,OAAO,CAACmF,GAAR,EAAZ;AACAlG,EAAAA,MAAM,CAACgH,cAAP,CAAsBtF,IAAtB,GAA6BoF,IAAI,CAACS,OAAL,CAAarB,GAAb,EAAkBlG,MAAM,CAACgH,cAAP,CAAsBtF,IAAxC,CAA7B;AACA1B,EAAAA,MAAM,CAACoH,UAAP,CAAkBM,GAAlB,GAAwBZ,IAAI,CAACS,OAAL,CAAarB,GAAb,EAAkBlG,MAAM,CAACoH,UAAP,CAAkBM,GAApC,CAAxB;AACA1H,EAAAA,MAAM,CAACuK,OAAP,GAAiB/K,KAAK,CAAC0V,IAAN,CAAW,IAAIlJ,GAAJ,CAAQ,CAAC,GAAG4K,cAAJ,EAAoB,GAAG5W,MAAM,CAACuK,OAA9B,CAAR,CAAX,CAAjB;;AACA,MAAI,CAACvK,MAAM,CAACyG,OAAZ,EAAqB;AACjBzG,IAAAA,MAAM,CAACuK,OAAP,CAAe/B,IAAf,CAAoB,OAApB;AACAxI,IAAAA,MAAM,CAACyG,OAAP,GAAiB;AACb,iBAAW;AADE,KAAjB;AAGH;;AACD,OAAK,MAAM+R,QAAX,IAAuB9V,MAAM,CAACiM,IAAP,CAAY3O,MAAM,CAACyG,OAAnB,CAAvB,EAAoD;AAChD,QAAI+R,QAAQ,CAAC9O,QAAT,CAAkB,SAAlB,CAAJ,EAAkC;AAC9B;AACH;;AACD1J,IAAAA,MAAM,CAACyG,OAAP,CAAe+R,QAAf,IAA2B;AACvBzQ,MAAAA,GAAG,EAAE/H,MAAM,CAACyG,OAAP,CAAe+R,QAAf,CADkB;AAEvBvY,MAAAA,KAAK,EAAED,MAAM,CAACyG,OAAP,CAAgB,GAAE+R,QAAS,SAA3B;AAFgB,KAA3B;AAIH;;AACD,OAAK,MAAMA,QAAX,IAAuB9V,MAAM,CAACiM,IAAP,CAAY3O,MAAM,CAACyG,OAAnB,CAAvB,EAAoD;AAChD,QAAI+R,QAAQ,CAAC9O,QAAT,CAAkB,SAAlB,CAAJ,EAAkC;AAC9B,aAAO1J,MAAM,CAACyG,OAAP,CAAe+R,QAAf,CAAP;AACH;AACJ;;AACD,OAAK,MAAMA,QAAX,IAAuB9V,MAAM,CAACiM,IAAP,CAAY3O,MAAM,CAACyG,OAAnB,CAAvB,EAAoD;AAChD,QAAI,CAAC+R,QAAQ,CAACrW,UAAT,CAAoB,QAApB,CAAD,IAAkC,CAACqW,QAAQ,CAACrW,UAAT,CAAoB,SAApB,CAAvC,EAAuE;AACnE;AACH;;AACD,UAAMsW,UAAU,GAAGD,QAAQ,CAACtW,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAnB;AACA,UAAMwW,IAAI,GAAGF,QAAQ,CAACtW,KAAT,CAAe,GAAf,EAAoB,CAApB,EAAuBA,KAAvB,CAA6B,GAA7B,CAAb;;AACA,QAAIwW,IAAI,CAAC9W,MAAL,KAAgB,CAApB,EAAuB;AACnB;AACH;;AACD,SAAK,MAAMkE,GAAX,IAAkB4S,IAAlB,EAAwB;AACpB,UAAI1Y,MAAM,CAACyG,OAAP,CAAgB,SAAQX,GAAI,EAA5B,KAAkC9F,MAAM,CAACyG,OAAP,CAAgB,UAASX,GAAI,EAA7B,CAAtC,EAAuE;AACnE6S,QAAAA,iBAAiB,CAAE,iCAAgC7S,GAAI,2EAAtC,CAAjB;AACH;;AACD9F,MAAAA,MAAM,CAACyG,OAAP,CAAgB,GAAEgS,UAAW,IAAG3S,GAAI,EAApC,uBAA8C9F,MAAM,CAACyG,OAAP,CAAe+R,QAAf,CAA9C;AACH;;AACD,WAAOxY,MAAM,CAACyG,OAAP,CAAe+R,QAAf,CAAP;AACH;;AACD,SAAOxY,MAAP;AACH;;AACD,SAAS2Y,iBAAT,CAA2B1V,GAA3B,EAAgC;AAC5B2E,EAAAA,OAAO,CAAC/H,KAAR,CAAe,YAAWoD,GAAI,EAA9B;AACAlC,EAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH;;AACD,SAAS8V,sBAAT,CAAgCC,QAAhC,EAA0CC,MAA1C,EAAkD;AAC9ClR,EAAAA,OAAO,CAAC/H,KAAR,CAAcH,KAAK,CAACI,GAAN,CAAW,KAAI+Y,QAAQ,IAAI,qBAAsB,EAAjD,CAAd;AACAjR,EAAAA,OAAO,CAAC/H,KAAR,CAAciZ,MAAM,CAAC/O,GAAP,CAAY7C,GAAD,IAAU,SAAQA,GAAG,CAACmC,QAAJ,EAAe,EAA5C,EAA+CtC,IAA/C,CAAoD,IAApD,CAAd;AACAa,EAAAA,OAAO,CAAC/H,KAAR,CAAe,gEAAf;AACAkB,EAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH;;AACD,SAASiW,2BAAT,CAAqCC,OAArC,EAA8C,GAAGC,IAAjD,EAAuD;AACnDrR,EAAAA,OAAO,CAAC/H,KAAR,CAAcH,KAAK,CAACI,GAAN,CAAUkZ,OAAV,CAAd;AACAC,EAAAA,IAAI,CAACC,OAAL,CAAatR,OAAO,CAAC/H,KAArB;AACA+H,EAAAA,OAAO,CAAC/H,KAAR,CAAe,4DAAf;AACAkB,EAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH;;AACD,SAASqW,uBAAT,CAAiCC,SAAjC,EAA4CC,QAA5C,EAAsD;AAAA;;AAClD;AACA,MAAID,SAAS,CAAChC,MAAV,IAAoBiC,QAAQ,CAACjC,MAAjC,EAAyC;AACrC2B,IAAAA,2BAA2B,CAAC,qEAAD,CAA3B;AACH;;AACD,MAAIK,SAAS,CAACrB,YAAV,IAA0BsB,QAAQ,CAACtB,YAAvC,EAAqD;AACjDgB,IAAAA,2BAA2B,CAAC,iFAAD,CAA3B;AACH;;AACD,MAAIK,SAAS,CAAClC,MAAd,EAAsB;AAClB6B,IAAAA,2BAA2B,CAAC,+EAAD,CAA3B;AACH;;AACD,+BAAIK,SAAS,CAACpS,cAAd,0DAAI,sBAA0BsS,OAA9B,EAAuC;AACnCP,IAAAA,2BAA2B,CAAC,gGAAD,CAA3B;AACH;;AACD,gCAAIK,SAAS,CAACpS,cAAd,2DAAI,uBAA0BuD,OAA9B,EAAuC;AACnCwO,IAAAA,2BAA2B,CAAC,gEAAD,CAA3B;AACH;;AACD,MAAIvZ,KAAK,CAACC,OAAN,CAAc2Z,SAAS,CAAC1B,eAAxB,CAAJ,EAA8C;AAC1CqB,IAAAA,2BAA2B,CAAC,4EAAD,CAA3B;AACH;;AACD,MAAIK,SAAS,CAACG,WAAd,EAA2B;AACvBR,IAAAA,2BAA2B,CAAC,8DAAD,CAA3B;AACH;;AACD,MAAIK,SAAS,CAACE,OAAd,EAAuB;AACnBP,IAAAA,2BAA2B,CAAC,gGAAD,EAAmG,iEAAnG,CAA3B;AACH,GAzBiD;;;AA2BlD,MAAIK,SAAS,CAAClV,MAAV,IAAoBmV,QAAQ,CAACnV,MAAjC,EAAyC;AACrC6U,IAAAA,2BAA2B,CAAC,4FAAD,CAA3B;AACH;;AACD,MAAIK,SAAS,CAAC1F,IAAV,IAAkB2F,QAAQ,CAAC3F,IAA/B,EAAqC;AACjCqF,IAAAA,2BAA2B,CAAC,sFAAD,CAA3B;AACH,GAhCiD;;;AAkClD,+BAAIK,SAAS,CAAChS,UAAd,0DAAI,sBAAsBoS,IAA1B,EAAgC;AAC5BT,IAAAA,2BAA2B,CAAC,6FAAD,EAAiG;gEAAjG,CAA3B;AAEH;;AACD,MAAIK,SAAS,CAACK,IAAV,IAAkBJ,QAAQ,CAACI,IAA/B,EAAqC;AACjCV,IAAAA,2BAA2B,CAAC,kFAAD,CAA3B;AACH;;AACD,MAAI,2BAAAK,SAAS,CAACpS,cAAV,kFAA0B0S,QAA1B,KAAsCL,QAAQ,CAACK,QAAnD,EAA6D;AACzDX,IAAAA,2BAA2B,CAAC,sFAAD,CAA3B;AACH;;AACD,MAAI,2BAAAK,SAAS,CAACpS,cAAV,kFAA0B2S,cAA1B,KAA4CN,QAAQ,CAACM,cAAzD,EAAyE;AACrEZ,IAAAA,2BAA2B,CAAC,4FAAD,CAA3B;AACH;;AACD,MAAI,2BAAAK,SAAS,CAACpS,cAAV,kFAA0BqG,KAA1B,KAAmCgM,QAAQ,CAAChM,KAAhD,EAAuD;AACnD0L,IAAAA,2BAA2B,CAAC,mFAAD,CAA3B;AACH;;AACD,MAAI,2BAAAK,SAAS,CAACpS,cAAV,kFAA0B4S,QAA1B,KAAsCP,QAAQ,CAACO,QAAnD,EAA6D;AACzDb,IAAAA,2BAA2B,CAAC,sFAAD,CAA3B;AACH;;AACD,MAAI,2BAAAK,SAAS,CAACpS,cAAV,kFAA0B6S,MAA1B,KAAoCR,QAAQ,CAACQ,MAAjD,EAAyD;AACrDd,IAAAA,2BAA2B,CAAC,qEAAD,CAA3B;AACH;AACJ;;AACD,AAAO,SAASe,qBAAT,CAA+B7B,KAA/B,EAAsC8B,WAAtC,EAAmD;AACtD,QAAMC,YAAY,GAAGC,2BAAe,CAACtD,WAAD,EAAc;AAC9C;AACAuD,IAAAA,YAAY,EAAE,CAAC,cAAD,EAAiB,oBAAjB,EAAuC,sBAAvC,CAFgC;AAG9C;AACAC,IAAAA,OAAO,EAAErT,IAAI,CAACoE,OAAL,CAAanK,OAAO,CAACmF,GAAR,EAAb;AAJqC,GAAd,CAApC;AAMA,MAAIrD,MAAJ,CAPsD;;AAStD,MAAIoV,KAAK,CAACjY,MAAV,EAAkB;AACd6C,IAAAA,MAAM,GAAGmX,YAAY,CAACI,IAAb,CAAkBtT,IAAI,CAACS,OAAL,CAAaxG,OAAO,CAACmF,GAAR,EAAb,EAA4B+R,KAAK,CAACjY,MAAlC,CAAlB,CAAT;;AACA,QAAI,CAAC6C,MAAL,EAAa;AACT8V,MAAAA,iBAAiB,CAAE,uCAAsCV,KAAK,CAACjY,MAAO,EAArD,CAAjB;AACH;AACJ,GAdqD;;;AAgBtD6C,EAAAA,MAAM,GAAGA,MAAM,IAAImX,YAAY,CAACK,MAAb,EAAnB,CAhBsD;;AAkBtD,MAAI,CAACxX,MAAD,IAAW,CAACA,MAAM,CAAC7C,MAAnB,IAA6B6C,MAAM,CAACyX,OAAxC,EAAiD;AAC7CzX,IAAAA,MAAM,GAAG;AAAE7C,MAAAA,MAAM,qBAAO6W,cAAP;AAAR,KAAT;AACH,GApBqD;;;AAsBtD,QAAM7W,MAAM,GAAG6C,MAAM,CAAC7C,MAAtB;AACAmZ,EAAAA,uBAAuB,CAACnZ,MAAD,EAASiY,KAAT,CAAvB;AACA,QAAMsC,SAAS,GAAGvC,cAAc,CAACC,KAAD,CAAhC;AACA,QAAMuC,UAAU,GAAGC,mBAAQ,CAACza,MAAD,EAASqX,YAAT,EAAuB;AAC9CqD,IAAAA,sBAAsB,EAAE,KADsB;AAE9CC,IAAAA,YAAY,EAAEhE;AAFgC,GAAvB,CAA3B;;AAIA,MAAI6D,UAAU,CAAC1B,MAAX,IAAqB0B,UAAU,CAAC1B,MAAX,CAAkBlX,MAAlB,GAA2B,CAApD,EAAuD;AACnDgX,IAAAA,sBAAsB,CAAC/V,MAAM,CAACgW,QAAR,EAAkB2B,UAAU,CAAC1B,MAA7B,CAAtB;AACA/X,IAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH;;AACD,MAAI8X,YAAY,GAAG,EAAnB;;AACA,MAAI5a,MAAM,CAACwX,OAAX,EAAoB;AAChB,UAAMqD,eAAe,GAAG7a,MAAM,CAACwX,OAAP,CAAerV,UAAf,CAA0B,GAA1B,IAClB2E,IAAI,CAACS,OAAL,CAAaT,IAAI,CAACoE,OAAL,CAAarI,MAAM,CAACgW,QAApB,CAAb,EAA4C7Y,MAAM,CAACwX,OAAnD,CADkB,GAElBxT,OAAO,CAACuD,OAAR,CAAgBvH,MAAM,CAACwX,OAAvB,EAAgC;AAAEhQ,MAAAA,KAAK,EAAE,CAACzG,OAAO,CAACmF,GAAR,EAAD;AAAT,KAAhC,CAFN;AAGA,UAAM4U,YAAY,GAAGd,YAAY,CAACI,IAAb,CAAkBS,eAAlB,CAArB;;AACA,QAAI,CAACC,YAAL,EAAmB;AACfnC,MAAAA,iBAAiB,CAAE,uCAAsCV,KAAK,CAACjY,MAAO,EAArD,CAAjB;AACAe,MAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH;;AACD8X,IAAAA,YAAY,GAAGE,YAAY,CAAC9a,MAA5B;AACA,UAAM+a,gBAAgB,GAAGN,mBAAQ,CAACG,YAAD,EAAevD,YAAf,EAA6B;AAC1DqD,MAAAA,sBAAsB,EAAE,KADkC;AAE1DC,MAAAA,YAAY,EAAEhE;AAF4C,KAA7B,CAAjC;;AAIA,QAAIoE,gBAAgB,CAACjC,MAAjB,IAA2BiC,gBAAgB,CAACjC,MAAjB,CAAwBlX,MAAxB,GAAiC,CAAhE,EAAmE;AAC/DgX,MAAAA,sBAAsB,CAAC/V,MAAM,CAACgW,QAAR,EAAkBkC,gBAAgB,CAACjC,MAAnC,CAAtB;AACA/X,MAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH;AACJ,GApDqD;;;AAsDtD,QAAMkY,cAAc,GAAG,CAACC,gBAAD,EAAmBC,WAAnB,EAAgCzI,OAAhC,KAA4CyI,WAAnE;;AACA,QAAMC,YAAY,GAAGC,aAAK,CAAC,CACvBvE,cADuB,EAEvB+D,YAFuB,EAGvB;AACIlD,IAAAA,eAAe,EAAEqC,WAAW,CAACrC,eADjC;AAEI/J,IAAAA,QAAQ,EAAEoM,WAAW,CAACpM;AAF1B,GAHuB,EAOvB3N,MAPuB,EAQvBua,SARuB,CAAD,EASvB;AAAEc,IAAAA,UAAU,EAAEL;AAAd,GATuB,CAA1B;;AAUA,OAAK,MAAMM,iBAAX,IAAgC5Y,MAAM,CAACiM,IAAP,CAAYwM,YAAY,CAACzD,eAAb,IAAgC,EAA5C,CAAhC,EAAiF;AAC7E,QAAIqC,WAAW,CAACwB,YAAZ,IAA4BxB,WAAW,CAACwB,YAAZ,CAAyBD,iBAAzB,CAAhC,EAA6E;AACzE3C,MAAAA,iBAAiB,CAAE,IAAG2C,iBAAkB,oGAAvB,CAAjB;AACH;;AACD,QAAIvB,WAAW,CAACzM,eAAZ,IAA+ByM,WAAW,CAACzM,eAAZ,CAA4BgO,iBAA5B,CAAnC,EAAmF;AAC/E3C,MAAAA,iBAAiB,CAAE,IAAG2C,iBAAkB,uGAAvB,CAAjB;AACH;AACJ,GAxEqD;;;AA0EtD,SAAO/C,eAAe,CAAC4C,YAAD,CAAtB;AACH;;AChUD;;;;;;;;;;AASA,eAAeK,iBAAf,CAAiCC,gBAAjC,EAAmDC,aAAnD,EAAkEC,QAAlE,EAA4EC,QAAQ,GAAG,IAAvF,EAA6F;AACzF;AACA;AACA;AACA;AACA,MAAI,CAACC,mBAAmB,CAACJ,gBAAD,CAAnB,CAAsCK,mBAA3C,EAAgE;AAC5D,WAAO,IAAP;AACH,GAPwF;;;AASzF,MAAIC,UAAJ;AACA,MAAIC,cAAJ;;AACA,MAAIL,QAAQ,IAAIA,QAAQ,CAAClX,OAAT,CAAiBgX,gBAAjB,CAAhB,EAAoD;AAChDM,IAAAA,UAAU,GAAGJ,QAAQ,CAAClX,OAAT,CAAiBgX,gBAAjB,CAAb;AACAO,IAAAA,cAAc,GAAG,KAAjB;AACH,GAHD,MAIK;AACD,QAAIN,aAAa,KAAK,QAAtB,EAAgC;AAC5B9T,MAAAA,OAAO,CAACe,IAAR,CAAc,QAAO8S,gBAAiB,iEAAtC;AACH;;AACD,QAAIC,aAAa,CAACvZ,UAAd,CAAyB,eAAzB,KAA6CuZ,aAAa,CAACvZ,UAAd,CAAyB,iBAAzB,CAAjD,EAA8F;AAC1F,YAAM,IAAI6F,KAAJ,CAAW,gGAAX,CAAN;AACH;;AACD,QAAI0T,aAAa,CAAChS,QAAd,CAAuB,GAAvB,KAA+BgS,aAAa,CAAChS,QAAd,CAAuB,GAAvB,CAAnC,EAAgE;AAC5D9B,MAAAA,OAAO,CAACe,IAAR,CAAc,QAAO8S,gBAAiB,kCAAiCC,aAAc,oBAArF;AACA,aAAO,IAAP;AACH;;AACDM,IAAAA,cAAc,GAAG,QAAjB;AACAD,IAAAA,UAAU,GAAI,GAAElO,QAAS,IAAG4N,gBAAiB,IAAGC,aAAc,EAA9D;AACH,GA5BwF;AA8BzF;;;AACA,MAAIM,cAAc,KAAK,KAAvB,EAA8B;AAC1B,UAAMC,YAAY,GAAG,MAAMzH,OAAO,CAACrC,GAAR,CAAY+J,IAAZ,CAAiBlO,cAAjB,EAAiC+N,UAAjC,EAA6C3S,KAA7C,CAAmD,MAAM,IAAzD,CAA3B;;AACA,QAAI6S,YAAJ,EAAkB;AACd,UAAIA,YAAY,CAACvH,QAAjB,EAA2B;AACvB,cAAM;AAAEyH,UAAAA;AAAF,YAAgBF,YAAY,CAACvH,QAAnC;AACA,eAAOyH,SAAP;AACH;AACJ;AACJ,GAvCwF;;;AAyCzF,QAAM;AAAEjJ,IAAAA,UAAF;AAAchE,IAAAA,OAAd;AAAuBkB,IAAAA;AAAvB,MAAgC,MAAMtB,gBAAgB,CAACiN,UAAD,CAA5D;;AACA,MAAI7I,UAAU,KAAK,GAAnB,EAAwB;AACpBtL,IAAAA,OAAO,CAACe,IAAR,CAAc,sBAAqBuK,UAAW,MAAK6I,UAAW,KAAI3L,IAAK,GAAvE;AACAxI,IAAAA,OAAO,CAACe,IAAR,CAAc,+BAAd;AACA,WAAO,IAAP;AACH;;AACD,MAAIyT,aAAa,GAAGlN,OAAO,CAAC,cAAD,CAA3B;AACA,MAAImN,aAAa,GAAGnN,OAAO,CAAC,cAAD,CAA3B;AACA,QAAMoN,WAAW,GAAGpN,OAAO,CAAC,iBAAD,CAA3B;AACA,QAAMqN,YAAY,GAAGrN,OAAO,CAAC,oBAAD,CAA5B;AACA,QAAMsN,QAAQ,GAAGD,YAAY,IAAK,GAAE1O,QAAS,GAAE0O,YAAa,EAA5D;;AACA,MAAIP,cAAc,KAAK,KAAvB,EAA8B;AAC1B,UAAMG,SAAS,GAAGJ,UAAlB;AACA,UAAMvH,OAAO,CAACc,GAAR,CAAYtH,cAAZ,EAA4BmO,SAA5B,EAAuC/L,IAAvC,EAA6C;AAC/CsE,MAAAA,QAAQ,EAAE;AAAEyH,QAAAA,SAAF;AAAaK,QAAAA;AAAb;AADqC,KAA7C,CAAN;AAGA,WAAOL,SAAP;AACH;;AACD,MAAIE,aAAJ,EAAmB;AACf,UAAMF,SAAS,GAAI,GAAEtO,QAAS,GAAEwO,aAAc,EAA9C;AACA,UAAM7H,OAAO,CAACc,GAAR,CAAYtH,cAAZ,EAA4BmO,SAA5B,EAAuC/L,IAAvC,EAA6C;AAC/CsE,MAAAA,QAAQ,EAAE;AAAEyH,QAAAA,SAAF;AAAaK,QAAAA;AAAb;AADqC,KAA7C,CAAN;AAGA,WAAOL,SAAP;AACH;;AACD,MAAIG,WAAW,KAAK,SAApB,EAA+B;AAC3B1U,IAAAA,OAAO,CAACe,IAAR,CAAc,qBAAoBuK,UAAW,MAAK6I,UAAW,EAA7D;AACAnU,IAAAA,OAAO,CAACe,IAAR,CAAc,+BAAd;AACA,WAAO,IAAP;AACH;;AACD,MAAI,CAACiT,QAAD,IAAaU,WAAW,KAAK,MAAjC,EAAyC;AACrC1U,IAAAA,OAAO,CAACe,IAAR,CAAc,oBAAmB8S,gBAAiB,IAAGC,aAAc,EAAnE;AACA9T,IAAAA,OAAO,CAACe,IAAR,CAAc,+BAAd;AACA,WAAO,IAAP;AACH;;AACDf,EAAAA,OAAO,CAACa,GAAR,CAAY/I,KAAK,CAAC2B,IAAN,CAAY,YAAWoa,gBAAiB,IAAGC,aAAc,8DAAzD,CAAZ;;AACA,MAAI,CAACU,aAAL,EAAoB;AAChB,UAAM,IAAIpU,KAAJ,CAAU,kDAAV,CAAN;AACH;;AACD,QAAM;AAAEkL,IAAAA,UAAU,EAAEuJ;AAAd,MAAmC,MAAM3N,gBAAgB,CAACsN,aAAD,CAA/D;;AACA,MAAIK,gBAAgB,KAAK,GAAzB,EAA8B;AAC1B,UAAM,IAAIzU,KAAJ,CAAW,wBAAuByU,gBAAiB,MAAK5O,QAAS,GAAEuO,aAAc,EAAjF,CAAN;AACH;;AACD,SAAOZ,iBAAiB,CAACC,gBAAD,EAAmBC,aAAnB,EAAkCC,QAAlC,EAA4C,KAA5C,CAAxB;AACH;;AACD,AAAO,eAAee,2BAAf,CAA2Cf,QAA3C,EAAqD5B,WAArD,EAAkE/Z,MAAlE,EAA0E;AAC7E,QAAM2c,aAAa,GAAG,IAAIC,MAAJ,CAAW;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAAX,CAAtB;AACA,QAAMC,WAAW,GAAG;AAAErY,IAAAA,OAAO,EAAE;AAAX,GAApB;AACA,MAAIsY,eAAJ;;AACA,OAAK,MAAM,CAACtB,gBAAD,EAAmBuB,aAAnB,CAAX,IAAgDta,MAAM,CAAC8D,OAAP,CAAexG,MAAM,CAAC0X,eAAtB,CAAhD,EAAwF;AACpFiF,IAAAA,aAAa,CAAC/Q,GAAd,CAAkB,YAAY;AAC1B,UAAI;AACA,cAAMF,WAAW,GAAG,MAAM8P,iBAAiB,CAACC,gBAAD,EAAmBuB,aAAnB,EAAkCrB,QAAlC,CAA3C;;AACA,YAAIjQ,WAAJ,EAAiB;AACboR,UAAAA,WAAW,CAACrY,OAAZ,CAAoBgX,gBAApB,IAAwC/P,WAAxC;AACH;AACJ,OALD,CAMA,OAAOxE,GAAP,EAAY;AACR6V,QAAAA,eAAe,GAAGA,eAAe,IAAI7V,GAArC;AACH;AACJ,KAVD;AAWH;;AACD,QAAMyV,aAAa,CAACM,MAAd,EAAN;;AACA,MAAIF,eAAJ,EAAqB;AACjB,UAAMA,eAAN;AACH;;AACD,SAAOD,WAAP;AACH;AACD,AAAO,SAASI,UAAT,GAAsB;AACzB,SAAO1I,OAAO,CAACY,EAAR,CAAWvK,GAAX,CAAemD,cAAf,CAAP;AACH;;AC3HD,MAAMmP,sBAAsB,GAAG,6BAA/B;AACA;;;;;;;;;;;AAUA,AAAO,SAASC,2BAAT,CAAqC;AAAElX,EAAAA;AAAF,CAArC,EAA8C;AACjD,SAAO;AACHkH,IAAAA,IAAI,EAAE,yCADH;;AAEHiQ,IAAAA,SAAS,CAACnZ,MAAD,EAASoZ,QAAT,EAAmB;AACxB,UAAI,CAACH,sBAAsB,CAACvT,IAAvB,CAA4B1F,MAA5B,CAAL,EAA0C;AACtC,eAAO,IAAP;AACH;;AACD,YAAM,GAAGqZ,YAAH,EAAiBC,WAAjB,IAAgCtZ,MAAM,CAACgB,KAAP,CAAaiY,sBAAb,CAAtC;AACA,YAAMM,eAAe,GAAGF,YAAY,GAAI,GAAEA,YAAa,GAAEC,WAAY,EAAjC,GAAqCA,WAAzE;AACA,UAAIE,QAAJ;;AACA,UAAI;AACA,cAAM,GAAGC,SAAH,IAAgBrO,yBAAyB,CAACmO,eAAD,EAAkBvX,GAAlB,CAA/C;AACAwX,QAAAA,QAAQ,GAAGC,SAAX;AACH,OAHD,CAIA,OAAOzW,GAAP,EAAY;AACR,eAAO,IAAP;AACH;;AACD,UAAI,CAACwW,QAAL,EAAe;AACX,eAAO,IAAP;AACH;;AACD,UAAIE,UAAU,GAAI,OAAOF,QAAQ,CAACG,MAAhB,KAA2B,QAA3B,IACd3Z,MAAM,KAAK4C,IAAI,CAAC+E,KAAL,CAAW9E,IAAX,CAAgB0W,eAAhB,EAAiCC,QAAQ,CAACG,MAA1C,CADE,IAEZ,OAAOH,QAAQ,CAACI,OAAhB,KAA4B,QAA5B,IACG5Z,MAAM,KAAK4C,IAAI,CAAC+E,KAAL,CAAW9E,IAAX,CAAgB0W,eAAhB,EAAiCC,QAAQ,CAACI,OAA1C,CAHF,IAIZ,OAAOJ,QAAQ,CAACK,IAAhB,KAAyB,QAAzB,IACG7Z,MAAM,KAAK4C,IAAI,CAAC+E,KAAL,CAAW9E,IAAX,CAAgB0W,eAAhB,EAAiCC,QAAQ,CAACK,IAA1C,CALnB;;AAMA,UAAI,CAACH,UAAL,EAAiB;AACb,eAAO,IAAP;AACH;;AACD,aAAO,KAAKrW,OAAL,CAAakW,eAAb,EAA8BH,QAA9B,EAAwC;AAAEU,QAAAA,QAAQ,EAAE;AAAZ,OAAxC,EAA4D1U,IAA5D,CAAkE2U,QAAD,IAAc;AAClF,eAAOA,QAAQ,IAAI,IAAnB;AACH,OAFM,CAAP;AAGH;;AA/BE,GAAP;AAiCH;;ACxCD,MAAMC,qBAAqB,GAAG,qBAA9B;AACA,MAAMC,oBAAoB,GAAGtQ,QAAQ,CAACjM,MAAtC;AACA;;;;;;;;;AAQA,AAAO,SAASwc,2BAAT,CAAqC;AAAEpH,EAAAA,YAAF;AAAgBvO,EAAAA;AAAhB,CAArC,EAA6D;AAChE,QAAM4V,iBAAiB,GAAG,IAAIrS,GAAJ,EAA1B;AACA,SAAO;AACHoB,IAAAA,IAAI,EAAE,mCADH;;AAEH,UAAMiQ,SAAN,CAAgBnZ,MAAhB,EAAwBoZ,QAAxB,EAAkC;AAC9B,UAAIgB,QAAJ;;AACA,UAAIpa,MAAM,CAAC/B,UAAP,CAAkB0L,QAAlB,CAAJ,EAAiC;AAC7ByQ,QAAAA,QAAQ,GAAGpa,MAAX;AACH,OAFD,MAGK,IAAIA,MAAM,CAAC/B,UAAP,CAAkB,KAAlB,CAAJ,EAA8B;AAC/Bmc,QAAAA,QAAQ,GAAGzQ,QAAQ,GAAG3J,MAAtB;AACH,OAFI,MAGA,IAAIA,MAAM,CAAC/B,UAAP,CAAkB,OAAlB,CAAJ,EAAgC;AACjCmc,QAAAA,QAAQ,GAAGzQ,QAAQ,GAAG3J,MAAtB;AACH,OAFI,MAGA;AACD,eAAO,IAAP;AACH,OAb6B;AAe9B;AACA;;;AACAuE,MAAAA,GAAG,CAAC6V,QAAD,CAAH;;AACA,UAAIpQ,kBAAkB,CAACtE,IAAnB,CAAwB0U,QAAxB,CAAJ,EAAuC;AACnC,cAAMrC,YAAY,GAAG,MAAMzH,OAAO,CAACrC,GAAR,CACtB+J,IADsB,CACjBlO,cADiB,EACDsQ,QADC,EAEtBlV,KAFsB,CAEhB;AAAE;AAAiB,YAFH,CAA3B;;AAGA,YAAI6S,YAAJ,EAAkB;AACd,iBAAOiC,qBAAqB,GAAGI,QAA/B;AACH;AACJ,OAzB6B;;;AA2B9B,YAAMC,QAAQ,GAAG,MAAMzP,gBAAgB,CAACwP,QAAD,CAAvC;;AACA,UAAIC,QAAQ,CAACrL,UAAT,KAAwB,GAA5B,EAAiC;AAC7B,cAAMqJ,YAAY,GAAGgC,QAAQ,CAACrP,OAAT,CAAiB,oBAAjB,CAArB;AACA,cAAMmN,aAAa,GAAGkC,QAAQ,CAACrP,OAAT,CAAiB,cAAjB,CAAtB;AACA,cAAMsN,QAAQ,GAAGD,YAAY,IAAK,GAAE1O,QAAS,GAAE0O,YAAa,EAA5D;AACA,cAAMJ,SAAS,GAAGE,aAAa,IAAK,GAAExO,QAAS,GAAEwO,aAAc,EAA/D;AACA,cAAM7H,OAAO,CAACc,GAAR,CAAYtH,cAAZ,EAA4BsQ,QAA5B,EAAsCC,QAAQ,CAACnO,IAA/C,EAAqD;AACvDsE,UAAAA,QAAQ,EAAE;AAAEyH,YAAAA,SAAF;AAAaK,YAAAA;AAAb;AAD6C,SAArD,CAAN;AAGA,eAAO0B,qBAAqB,GAAGI,QAA/B;AACH,OArC6B;AAuC9B;;;AACA,YAAMd,WAAW,GAAGc,QAAQ,CACvBxZ,SADe,CACLqZ,oBADK,EAEf3b,OAFe,CAEP,KAFO,EAEA,EAFA,EAGfA,OAHe,CAGP,OAHO,EAGE,EAHF,EAIfN,KAJe,CAIT,GAJS,EAIJ,CAJI,CAApB;AAKA,aAAO,KAAKqF,OAAL,CAAaiW,WAAb,EAA0BF,QAA1B,EAAoC;AAAEU,QAAAA,QAAQ,EAAE;AAAZ,OAApC,EAAwD1U,IAAxD,CAA8D2U,QAAD,IAAc;AAC9E,YAAIO,WAAW,GAAGP,QAAlB;;AACA,YAAI,CAACO,WAAL,EAAkB;AACdA,UAAAA,WAAW,GAAG;AAAExb,YAAAA,EAAE,EAAEwa;AAAN,WAAd;AACH;;AACD,eAAOgB,WAAP;AACH,OANM,CAAP;AAOH,KAtDE;;AAuDH,UAAMpE,IAAN,CAAWpX,EAAX,EAAe;AAAA;;AACX,UAAI,CAACA,EAAE,CAACb,UAAH,CAAc+b,qBAAd,CAAL,EAA2C;AACvC,eAAO,IAAP;AACH;;AACD,YAAMI,QAAQ,GAAGtb,EAAE,CAAC8B,SAAH,CAAaoZ,qBAAqB,CAACtc,MAAnC,CAAjB;AACA6G,MAAAA,GAAG,CAAC6V,QAAD,CAAH;AACA,YAAMrC,YAAY,GAAG,MAAMzH,OAAO,CAACrC,GAAR,CAAYnE,cAAZ,EAA4BsQ,QAA5B,CAA3B;AACA,YAAM9B,QAAQ,4BAAGP,YAAY,CAACvH,QAAhB,0DAAG,sBAAuB8H,QAAxC;;AACA,UAAIA,QAAQ,IAAIxF,YAAhB,EAA8B;AAC1B,cAAMyH,eAAe,GAAGjC,QAAQ,CAACha,OAAT,CAAiB,qBAAjB,EAAwC,YAAxC,CAAxB;AACA6b,QAAAA,iBAAiB,CAACzS,GAAlB,CAAsB6S,eAAtB;AACH;;AACD,aAAOxC,YAAY,CAACrL,IAAb,CAAkBvH,QAAlB,CAA2B,MAA3B,CAAP;AACH,KApEE;;AAqEH,UAAMqV,WAAN,CAAkBjM,OAAlB,EAA2B;AACvB,UAAI,CAACuE,YAAL,EAAmB;AACf;AACH;;AACD,YAAMzO,MAAM,CAACzB,IAAI,CAACC,IAAL,CAAU0L,OAAO,CAACkM,GAAlB,EAAuB,QAAvB,CAAD,CAAZ;AACA,YAAMC,OAAO,GAAG,MAAMpK,OAAO,CAACqK,GAAR,CAAYxS,KAAZ,CAAkB2B,cAAlB,CAAtB;;AACA,WAAK,MAAMyQ,eAAX,IAA8BJ,iBAA9B,EAAiD;AAC7C,YAAIS,eAAJ;AACA,cAAMC,aAAa,GAAG,MAAMvK,OAAO,CAC9BrC,GADuB,CACnBnE,cADmB,EACHyQ,eADG,EAEvBrV,KAFuB,CAEjB;AAAE;AAAiB,YAFF,CAA5B;;AAGA,YAAI2V,aAAJ,EAAmB;AACfD,UAAAA,eAAe,GAAGC,aAAa,CAACnO,IAAhC;AACH,SAFD,MAGK;AACD,gBAAMoO,eAAe,GAAG,MAAMlQ,gBAAgB,CAAC2P,eAAD,EAAkB,QAAlB,CAA9C;;AACA,cAAIO,eAAe,CAAC9L,UAAhB,KAA+B,GAAnC,EAAwC;AACpC;AACH;;AACD4L,UAAAA,eAAe,GAAGE,eAAe,CAAC5O,IAAlC;AACA,gBAAMoE,OAAO,CAACc,GAAR,CAAYtH,cAAZ,EAA4ByQ,eAA5B,EAA6CK,eAA7C,CAAN;AACH;;AACD,cAAMG,aAAa,GAAGpZ,GAAG,CAAC9B,KAAJ,CAAU0a,eAAV,EAA2BzL,QAA3B,CAAoC9Q,KAApC,CAA0C,GAA1C,CAAtB;AACA,cAAMgd,gBAAgB,GAAGrZ,GAAG,CAAC9B,KAAJ,CAAU0a,eAAV,EAA2BzL,QAA3B,CAAoC7Q,UAApC,CAA+C,MAA/C,IACnB8c,aAAa,CAAC,CAAD,CAAb,GAAmB,GAAnB,GAAyBA,aAAa,CAAC,CAAD,CAAb,CAAiB/c,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CADN,GAEnB+c,aAAa,CAAC,CAAD,CAAb,CAAiB/c,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAFN;AAGA,cAAMid,kBAAkB,GAAGrY,IAAI,CAACC,IAAL,CAAU6X,OAAV,EAAoB,GAAEM,gBAAiB,MAAvC,CAA3B;;AACA,YAAIA,gBAAgB,CAACxV,QAAjB,CAA0B,GAA1B,CAAJ,EAAoC;AAChC,gBAAMnB,MAAM,CAACzB,IAAI,CAACoE,OAAL,CAAaiU,kBAAb,CAAD,CAAZ;AACH;;AACDhU,QAAAA,WAAE,CAAC0D,aAAH,CAAiBsQ,kBAAjB,EAAqCL,eAArC;AACA,cAAMM,eAAe,GAAGtY,IAAI,CAACC,IAAL,CAAU0L,OAAO,CAACkM,GAAlB,EAAwB,UAASO,gBAAiB,EAAlD,CAAxB;AACA,cAAM3W,MAAM,CAAC6W,eAAD,CAAZ;AACA,cAAMC,GAAG,CAACC,CAAJ,CAAM;AACRC,UAAAA,IAAI,EAAEJ,kBADE;AAERjZ,UAAAA,GAAG,EAAEkZ;AAFG,SAAN,CAAN;AAIH;AACJ;;AA3GE,GAAP;AA6GH;;AC7HM,SAASI,2BAAT,CAAqCC,EAArC,EAAyC;AAC5C,MAAIC,SAAJ;AACA,MAAIC,iBAAiB,GAAG,EAAxB;AACA,MAAIC,YAAY,GAAG;AACfC,IAAAA,MAAM,EAAE,EADO;AAEfC,IAAAA,MAAM,EAAE;AAFO,GAAnB;;AAIA,WAASC,sBAAT,CAAgC1Y,MAAhC,EAAwC;AACpC,SAAK,IAAI2Y,QAAT,IAAqBtd,MAAM,CAACiM,IAAP,CAAYtH,MAAZ,CAArB,EAA0C;AACtC,YAAM4Y,QAAQ,GAAGnZ,IAAI,CAACC,IAAL,CAAU2Y,SAAV,EAAqBM,QAArB,CAAjB;;AACA,UAAI7U,WAAE,CAAC+U,UAAH,CAAcD,QAAd,CAAJ,EAA6B;AACzB,cAAM;AAAEE,UAAAA;AAAF,YAAWhV,WAAE,CAACiV,QAAH,CAAYH,QAAZ,CAAjB;AACAN,QAAAA,iBAAiB,CAACK,QAAD,CAAjB,GAA8BG,IAA9B;AACH;AACJ;AACJ;;AACD,WAASE,mBAAT,CAA6BC,KAA7B,EAAoChJ,IAApC,EAA0C;AACtC,SAAK,IAAI;AAAE0I,MAAAA,QAAF;AAAYO,MAAAA;AAAZ,KAAT,IAAmCD,KAAnC,EAA0C;AACtC,YAAMH,IAAI,GAAGI,QAAQ,CAACC,UAAtB;AACAZ,MAAAA,YAAY,CAACtI,IAAD,CAAZ,CAAmB0I,QAAnB,IAA+B;AAC3BG,QAAAA,IAAI,EAAEA,IADqB;AAE3BM,QAAAA,IAAI,EAAEC,IAAI,CAACC,QAAL,CAAcJ,QAAd,EAAwBC,UAFH;AAG3BI,QAAAA,MAAM,EAAEF,IAAI,CAACG,kBAAL,GAA0BH,IAAI,CAACG,kBAAL,CAAwBN,QAAxB,EAAkCC,UAA5D,GAAyE;AAHtD,OAA/B;;AAKA,UAAIb,iBAAiB,CAACK,QAAD,CAArB,EAAiC;AAC7B,cAAMc,KAAK,GAAG,CAACX,IAAI,GAAGR,iBAAiB,CAACK,QAAD,CAAzB,IAAuC,IAArD;AACAJ,QAAAA,YAAY,CAACtI,IAAD,CAAZ,CAAmB0I,QAAnB,EAA6Bc,KAA7B,GAAqCA,KAArC;AACH;AACJ;AACJ;;AACD,SAAO;AACH1T,IAAAA,IAAI,EAAE,8BADH;;AAEH2T,IAAAA,cAAc,CAACtO,OAAD,EAAUpL,MAAV,EAAkB;AAC5BqY,MAAAA,SAAS,GAAGjN,OAAO,CAACkM,GAApB;AACAoB,MAAAA,sBAAsB,CAAC1Y,MAAD,CAAtB;AACH,KALE;;AAMHqX,IAAAA,WAAW,CAACjM,OAAD,EAAUpL,MAAV,EAAkB;AACzB,YAAM2Z,kBAAkB,GAAG,EAA3B;AACA,YAAMC,kBAAkB,GAAG,EAA3B;;AACA,WAAK,MAAM,CAACjB,QAAD,EAAWkB,YAAX,CAAX,IAAuCxe,MAAM,CAAC8D,OAAP,CAAea,MAAf,CAAvC,EAA+D;AAC3D,cAAM8Z,GAAG,GAAGD,YAAY,CAAC5J,IAAb,KAAsB,OAAtB,GAAgC4J,YAAY,CAAChd,MAA7C,GAAsDgd,YAAY,CAAC1c,IAA/E;AACA,cAAM+b,QAAQ,GAAGtL,MAAM,CAACmM,QAAP,CAAgBD,GAAhB,IACXA,GADW,GAEX,OAAOA,GAAP,KAAe,QAAf,GACIlM,MAAM,CAACC,IAAP,CAAYiM,GAAZ,EAAiB,MAAjB,CADJ,GAEIlM,MAAM,CAACC,IAAP,CAAYiM,GAAZ,CAJV;;AAKA,YAAInB,QAAQ,CAAC7d,UAAT,CAAoB,QAApB,CAAJ,EAAmC;AAC/B8e,UAAAA,kBAAkB,CAACzY,IAAnB,CAAwB;AAAEwX,YAAAA,QAAF;AAAYO,YAAAA;AAAZ,WAAxB;AACH,SAFD,MAGK;AACDS,UAAAA,kBAAkB,CAACxY,IAAnB,CAAwB;AAAEwX,YAAAA,QAAF;AAAYO,YAAAA;AAAZ,WAAxB;AACH;AACJ;;AACDF,MAAAA,mBAAmB,CAACW,kBAAD,EAAqB,QAArB,CAAnB;AACAX,MAAAA,mBAAmB,CAACY,kBAAD,EAAqB,QAArB,CAAnB;AACAxB,MAAAA,EAAE,CAACG,YAAD,CAAF;AACH;;AA1BE,GAAP;AA4BH;;ACnDD,MAAMyB,iBAAiB,GAAG,cAA1B;AACA,MAAMC,wBAAwB,GAAGD,iBAAiB,CAACzf,MAAnD;AAEA;;AACA,MAAM2f,oBAAoB,GAAG,qBAA7B;AACA,MAAMC,uBAAuB,GAAG,+FAAhC;AACA,MAAMC,yBAAyB,GAAG,yFAAlC;AACA,MAAMC,oBAAoB,GAAG,4TAA7B;AACA,MAAMC,aAAa,GAAG,uCAAtB;;AACA,SAASC,gBAAT,CAA0BrS,GAA1B,EAA+B;AAC3B,SAAOA,GAAG,CAAC/M,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAP;AACH;;AACD,SAASqf,mBAAT,CAA6Bre,SAA7B,EAAwCqH,GAAG,GAAG,IAA9C,EAAoD;AAChD,SAAO;AACHrH,IAAAA,SADG;AAEHqH,IAAAA,GAFG;AAGHiX,IAAAA,OAAO,EAAE,KAHN;AAIHC,IAAAA,SAAS,EAAE,KAJR;AAKHC,IAAAA,KAAK,EAAE;AALJ,GAAP;AAOH;;AACD,SAASC,0BAAT,CAAoCze,SAApC,EAA+C;AAC3C,QAAM0e,gBAAgB,GAAG1e,SAAS,CAAC8P,OAAV,CAAkB,GAAlB,CAAzB;;AACA,MAAI4O,gBAAgB,IAAI,CAAxB,EAA2B;AACvB1e,IAAAA,SAAS,GAAGA,SAAS,CAACsB,SAAV,CAAoB,CAApB,EAAuBod,gBAAvB,CAAZ;AACH;;AACD,SAAO1e,SAAP;AACH;;AACD,SAAS2e,6BAAT,CAAuC3d,IAAvC,EAA6CG,GAA7C,EAAkD;AAC9C;AACA,MAAIA,GAAG,CAACC,CAAJ,KAAU,CAAC,CAAf,EAAkB;AACd,WAAO,IAAP;AACH,GAJ6C;;;AAM9C,MAAID,GAAG,CAACC,CAAJ,KAAU,CAAC,CAAf,EAAkB;AACd,WAAOJ,IAAI,CAACM,SAAL,CAAeH,GAAG,CAACI,CAAnB,EAAsBJ,GAAG,CAACK,CAA1B,CAAP;AACH,GAR6C;;;AAU9C,QAAMH,eAAe,GAAGL,IAAI,CAACM,SAAL,CAAeH,GAAG,CAACI,CAAnB,EAAsBJ,GAAG,CAACK,CAA1B,CAAxB;AACA,QAAMC,oBAAoB,GAAGJ,eAAe,CAACK,KAAhB,CAAsB,uBAAtB,CAA7B;AACA,SAAOD,oBAAoB,GAAGA,oBAAoB,CAAC,CAAD,CAAvB,GAA6B,IAAxD;AACH;AACD;;;;;;AAIA,SAASmd,uBAAT,CAAiC5e,SAAjC,EAA4C;AACxC,MAAI,CAACA,SAAL,EAAgB;AACZ,WAAO,IAAP;AACH,GAHuC;;;AAKxC,MAAI+d,oBAAoB,CAAC3X,IAArB,CAA0BpG,SAA1B,CAAJ,EAA0C;AACtC,WAAOA,SAAP;AACH,GAPuC;;;AASxC,QAAM6e,gBAAgB,GAAGJ,0BAA0B,CAACze,SAAD,CAAnD,CATwC;;AAWxC,QAAM8e,eAAe,GAAGD,gBAAgB,CAAC/O,OAAjB,CAAyB+N,iBAAzB,CAAxB;;AACA,MAAIiB,eAAe,KAAK,CAAC,CAAzB,EAA4B;AACxB,WAAO,IAAP;AACH,GAduC;AAgBxC;;;AACA,QAAMC,iBAAiB,GAAGF,gBAAgB,CAACvd,SAAjB,CAA2Bwd,eAAe,GAAGhB,wBAA7C,CAA1B;AACA,QAAMkB,iCAAiC,GAAGZ,gBAAgB,CAACW,iBAAD,CAA1D;;AACA,MAAI1G,mBAAmB,CAAC2G,iCAAD,CAAnB,CAAuD1G,mBAA3D,EAAgF;AAC5E,WAAO0G,iCAAP;AACH,GArBuC;;;AAuBxC,SAAOD,iBAAP;AACH;;AACD,SAASE,oBAAT,CAA8Bje,IAA9B,EAAoCG,GAApC,EAAyC;AACrC,QAAM+d,kBAAkB,GAAGN,uBAAuB,CAACD,6BAA6B,CAAC3d,IAAD,EAAOG,GAAP,CAA9B,CAAlD;;AACA,MAAI,CAAC+d,kBAAL,EAAyB;AACrB,WAAO,IAAP;AACH;;AACD,QAAM7d,eAAe,GAAGL,IAAI,CAACM,SAAL,CAAeH,GAAG,CAACge,EAAnB,EAAuBhe,GAAG,CAACie,EAA3B,CAAxB;;AACA,MAAI,iBAAiBhZ,IAAjB,CAAsB/E,eAAtB,CAAJ,EAA4C;AACxC,WAAO,IAAP;AACH;;AACD,QAAMge,aAAa,GAAGle,GAAG,CAACC,CAAJ,GAAQ,CAAC,CAA/B;AACA,QAAMke,aAAa,GAAG,CAACD,aAAD,IAAkBnB,oBAAoB,CAAC9X,IAArB,CAA0B/E,eAA1B,CAAxC;AACA,QAAMke,eAAe,GAAG,CAACF,aAAD,IAAkBhe,eAAe,CAAC6E,QAAhB,CAAyB,GAAzB,CAA1C;AACA,QAAMsZ,YAAY,GAAG,CAACne,eAAe,CAACK,KAAhB,CAAsBsc,uBAAtB,KAAkD,GAAG,EAAH,CAAnD,EAA2D,CAA3D,EAChBtf,KADgB,CACVuf,yBADU,EAEhB1X,GAFgB,CAEXqD,IAAD,IAAUA,IAAI,CAAC7K,IAAL,EAFE,EAGhBmC,MAHgB,CAGT0K,QAHS,CAArB;AAIA,SAAO;AACH5L,IAAAA,SAAS,EAAEkf,kBADR;AAEH7X,IAAAA,GAAG,EAAEgY,aAFF;AAGHf,IAAAA,OAAO,EAAEgB,aAHN;AAIHf,IAAAA,SAAS,EAAEgB,eAJR;AAKHf,IAAAA,KAAK,EAAEgB;AALJ,GAAP;AAOH;;AACD,SAASC,wBAAT,CAAkCze,IAAlC,EAAwC;AACpC,QAAM,CAACC,OAAD,IAAYV,mBAAK,CAACS,IAAD,CAAL,IAAe,EAAjC;AACA,QAAM0e,UAAU,GAAGze,OAAO,CACrBsF,GADc,CACTpF,GAAD,IAAS8d,oBAAoB,CAACje,IAAD,EAAOG,GAAP,CADnB,EAEdD,MAFc,CAEP0K,QAFO,CAAnB;AAGA,SAAO8T,UAAP;AACH;;AACD,AAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8Bld,GAA9B,EAAmC;AACtC,SAAOkd,OAAO,CACTrZ,GADE,CACGsZ,aAAD,IAAmB;AACxB,QAAI,CAAChZ,IAAI,CAACiZ,QAAL,CAAcD,aAAd,CAAL,EAAmC;AAC/B,aAAO,CAACxB,mBAAmB,CAACwB,aAAD,EAAgB,IAAhB,CAApB,CAAP;AACH,KAFD,MAGK;AACD,YAAME,cAAc,GAAGC,IAAQ,CAACzc,IAAT,CAAcb,GAAd,EAAmB,cAAnB,CAAvB;AACA,aAAOid,WAAW,CAAC9Y,IAAI,CAAC/B,IAAL,CAAU+a,aAAV,EAAyB;AAAEnd,QAAAA,GAAG,EAAEqd,cAAP;AAAuB9Y,QAAAA,KAAK,EAAE;AAA9B,OAAzB,CAAD,EAAiEvE,GAAjE,CAAlB;AACH;AACJ,GATM,EAUFtD,MAVE,CAUK,CAAC6gB,IAAD,EAAOpU,IAAP,KAAgBoU,IAAI,CAACC,MAAL,CAAYrU,IAAZ,CAVrB,EAUwC,EAVxC,CAAP;AAWH;AACD,AAAO,eAAesU,WAAf,CAA2Bzd,GAA3B,EAAgC;AAAEO,EAAAA,OAAF;AAAW8D,EAAAA;AAAX,CAAhC,EAAsD;AACzD,QAAMqZ,kBAAN;AACA,QAAMzZ,eAAe,GAAG,MAAMS,OAAO,CAACC,GAAR,CAAYnI,MAAM,CAAC8D,OAAP,CAAeC,OAAf,EAAwBsD,GAAxB,CAA4B,CAAC,CAAC/G,EAAD,EAAKgH,YAAL,CAAD,KAAwB;AAC1F,QAAI,CAAChH,EAAE,CAACb,UAAH,CAAc,QAAd,CAAL,EAA8B;AAC1B,aAAO,EAAP;AACH;;AACD,UAAM2F,MAAM,GAAGkC,YAAY,CAACjC,GAAb,CAAiB7F,KAAjB,CAAuB,KAAvB,CAAf;;AACA,QAAI4F,MAAM,CAAC,CAAD,CAAN,KAAc,OAAlB,EAA2B;AACvB,YAAM,IAAIE,KAAJ,CAAW,UAAShF,EAAG,8BAAvB,CAAN;AACH;;AACD8E,IAAAA,MAAM,CAAC1F,KAAP;;AACA,QAAI0F,MAAM,CAAC,CAAD,CAAN,CAAU4B,QAAV,CAAmB,aAAnB,CAAJ,EAAuC;AACnC,aAAO,EAAP;AACH;;AACD,UAAMxB,OAAO,GAAGsb,IAAQ,CAACjc,OAAT,CAAiBrB,GAAjB,EAAsB4B,MAAM,CAAC,CAAD,CAA5B,CAAhB;AACA,WAAOuC,IAAI,CAAC/B,IAAL,CAAW,MAAX,EAAkB;AACrBgC,MAAAA,MAAM,EAAEC,OAAO,CAACmZ,MAAR,CAAe,CAAC,qBAAD,CAAf,CADa;AAErBxd,MAAAA,GAAG,EAAEgC,OAFgB;AAGrBsC,MAAAA,QAAQ,EAAE,IAHW;AAIrBC,MAAAA,KAAK,EAAE;AAJc,KAAlB,CAAP;AAMH,GAnByC,CAAZ,CAA9B;AAoBA,QAAMoZ,YAAY,GAAGrkB,KAAK,CAAC0V,IAAN,CAAW,IAAIlJ,GAAJ,CAAQ,GAAG0X,MAAH,CAAUngB,KAAV,CAAgB,EAAhB,EAAoB4G,eAApB,CAAR,CAAX,CAArB;;AACA,MAAI0Z,YAAY,CAACjiB,MAAb,KAAwB,CAA5B,EAA+B;AAC3BgG,IAAAA,OAAO,CAACe,IAAR,CAAc,4BAAd;AACA,WAAO,EAAP;AACH,GA1BwD;;;AA4BzD,QAAMmb,WAAW,GAAG,MAAMlZ,OAAO,CAACC,GAAR,CAAYgZ,YAAY,CAAC9Z,GAAb,CAAiB,MAAOkW,QAAP,IAAoB;AACvE,UAAMna,GAAG,GAAG0d,IAAQ,CAACzY,OAAT,CAAiBkV,QAAjB,CAAZ,CADuE;;AAGvE,QAAIA,QAAQ,CAAC9d,UAAT,CAAoB,GAApB,CAAJ,EAA8B;AAC1B,aAAO,IAAP;AACH,KALsE;;;AAOvE,QAAI2D,GAAG,KAAK,EAAZ,EAAgB;AACZ,aAAO,IAAP;AACH,KATsE;;;AAWvE,QAAIA,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,MAAzB,IAAmCA,GAAG,KAAK,KAA/C,EAAsD;AAClD,aAAOqF,WAAE,CAAC4Y,QAAH,CAAY1Y,QAAZ,CAAqB4U,QAArB,EAA+B,OAA/B,CAAP;AACH,KAbsE;;;AAevE,QAAIna,GAAG,KAAK,MAAR,IAAkBA,GAAG,KAAK,MAA9B,EAAsC;AAClC,YAAMke,WAAW,GAAGhgB,OAAO,CAACuD,OAAR,CAAgB,SAAhB,CAApB;;AACA,YAAM0c,cAAc,GAAGnd,IAAI,CAACC,IAAL,CAAUid,WAAV,EAAuB,IAAvB,EAA6B,IAA7B,EAAmC,KAAnC,EAA0C,SAA1C,CAAvB;AACA,YAAM;AAAEhjB,QAAAA,MAAF;AAAUuI,QAAAA;AAAV,UAAqB,MAAMP,KAAK,CAACib,cAAD,EAAiB,CAAChE,QAAD,CAAjB,CAAtC;AACA,aAAOjf,MAAP;AACH;;AACD,QAAI8E,GAAG,KAAK,MAAR,IAAkBA,GAAG,KAAK,SAA9B,EAAyC;AACrC,YAAMjD,MAAM,GAAG,MAAMsI,WAAE,CAAC4Y,QAAH,CAAY1Y,QAAZ,CAAqB4U,QAArB,EAA+B,OAA/B,CAArB,CADqC;AAGrC;;AACA,YAAMiE,UAAU,GAAG,EAAnB;AACA,UAAIhf,KAAJ;;AACA,aAAQA,KAAK,GAAGyc,aAAa,CAACwC,IAAd,CAAmBthB,MAAnB,CAAhB,EAA6C;AACzCqhB,QAAAA,UAAU,CAAC1b,IAAX,CAAgBtD,KAAhB;AACH;;AACD,aAAOgf,UAAU,CAACna,GAAX,CAAe,CAAC,CAACqa,IAAD,EAAO5f,IAAP,CAAD,KAAkBA,IAAjC,EAAuCuC,IAAvC,CAA4C,IAA5C,CAAP;AACH,KA/BsE;;;AAiCvE,QAAI,CAACuJ,IAAI,CAAC+T,MAAL,CAAYb,IAAQ,CAACzY,OAAT,CAAiBkV,QAAjB,CAAZ,CAAL,EAA8C;AAC1CrY,MAAAA,OAAO,CAACe,IAAR,CAAajJ,KAAK,CAACC,GAAN,CAAW,8BAA6B6jB,IAAQ,CAAC3a,QAAT,CAAkB9H,OAAO,CAACmF,GAAR,EAAlB,EAAiC+Z,QAAjC,CAA2C,GAAnF,CAAb;AACH;;AACD,WAAO,IAAP;AACH,GArCqC,CAAZ,CAA1B;AAsCA,SAAO6D,WAAW,CACbpf,MADE,CACMF,IAAD,IAAU,CAAC,CAACA,IADjB,EAEFuF,GAFE,CAEGvF,IAAD,IAAUye,wBAAwB,CAACze,IAAD,CAFpC,EAGF5B,MAHE,CAGK,CAAC6gB,IAAD,EAAOpU,IAAP,KAAgBoU,IAAI,CAACC,MAAL,CAAYrU,IAAZ,CAHrB,EAGwC,EAHxC,EAIFT,IAJE,CAIG,CAAC0V,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAAC9gB,SAAL,CAAeghB,aAAf,CAA6BD,IAAI,CAAC/gB,SAAlC,CAJnB,CAAP;AAKH;;ACnMD;;AACA,MAAMihB,iBAAiB,GAAG,EAA1B;AACA;;AACA,SAASC,WAAT,CAAqB,CAACC,SAAD,CAArB,EAAkC,CAACC,SAAD,CAAlC,EAA+C;AAC3C,SAAOD,SAAS,CAACH,aAAV,CAAwBI,SAAxB,CAAP;AACH;AACD;;;AACA,SAASC,UAAT,CAAoB1E,IAApB,EAA0B;AACtB,MAAI2E,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAY7E,IAAI,GAAG,IAAR,GAAgB,GAA3B,IAAkC,GAA3C;;AACA,MAAI2E,EAAE,IAAI,IAAV,EAAgB;AACZA,IAAAA,EAAE,GAAGC,IAAI,CAACE,KAAL,CAAWH,EAAX,CAAL;AACH;;AACD,MAAII,KAAJ;;AACA,MAAIJ,EAAE,GAAG,EAAT,EAAa;AACTI,IAAAA,KAAK,GAAG,OAAR;AACH,GAFD,MAGK,IAAIJ,EAAE,GAAG,EAAT,EAAa;AACdI,IAAAA,KAAK,GAAG,QAAR;AACH,GAFI,MAGA;AACDA,IAAAA,KAAK,GAAG,KAAR;AACH;;AACD,SAAOxlB,KAAK,CAACwlB,KAAD,CAAL,CAAc,GAAEJ,EAAG,KAAN,CAAWhjB,MAAX,CAAkB2iB,iBAAlB,CAAb,CAAP;AACH;;AACD,SAASU,WAAT,CAAqBrE,KAArB,EAA4B;AACxB,QAAMgE,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWlE,KAAK,GAAG,GAAnB,IAA0B,GAArC;AACA,QAAMoE,KAAK,GAAGpE,KAAK,GAAG,CAAR,GAAY,KAAZ,GAAoB,OAAlC;AACA,SAAOphB,KAAK,CAACwlB,KAAD,CAAL,CAAc,KAAIpE,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,EAAG,GAAEgE,EAAG,KAA5C,CAAP;AACH;;AACD,SAASM,cAAT,CAAwBhT,QAAxB,EAAkCiT,KAAlC,EAAyCvjB,MAAzC,EAAiDwjB,UAAjD,EAA6D;AACzD,QAAMC,SAAS,GAAG7lB,KAAK,CAACC,GAAN,CAAU2lB,UAAU,GAAG,IAAH,GAAU,IAA9B,CAAlB;AACA,QAAME,QAAQ,GAAGpT,QAAQ,CAACtQ,MAAT,CAAgBA,MAAhB,CAAjB;AACA,QAAM2jB,QAAQ,GAAGZ,UAAU,CAACQ,KAAK,CAAClF,IAAP,CAA3B;AACA,QAAMuF,QAAQ,GAAGb,UAAU,CAACQ,KAAK,CAAC5E,IAAP,CAA3B;AACA,QAAMkF,UAAU,GAAGd,UAAU,CAACQ,KAAK,CAACzE,MAAP,CAA7B;AACA,QAAMgF,QAAQ,GAAGH,QAAQ,GAAGC,QAAX,GAAsBC,UAAvC;AACA,MAAIE,SAAS,GAAG,EAAhB;;AACA,MAAIR,KAAK,CAACvE,KAAV,EAAiB;AACb+E,IAAAA,SAAS,GAAGnmB,KAAK,CAACC,GAAN,CAAU,GAAV,IAAiBwlB,WAAW,CAACE,KAAK,CAACvE,KAAP,CAA5B,GAA4CphB,KAAK,CAACC,GAAN,CAAU,GAAV,CAAxD;AACH,GAVwD;;;AAYzD,SAAQ,MAAD,GAAU,GAAE4lB,SAAU,IAAGC,QAAS,IAAGI,QAAS,IAAGC,SAAU,EAAlD,CAAoDtjB,IAApD,EAAhB;AACH;;AACD,SAASujB,WAAT,CAAqBxF,KAArB,EAA4Bxe,MAA5B,EAAoC;AAChC,QAAMikB,aAAa,GAAGzF,KAAK,CAACvW,GAAN,CAAU,CAAC,CAACqI,QAAD,EAAWiT,KAAX,CAAD,KAAuB,CACnDjT,QAAQ,CAAC5P,OAAT,CAAiB,WAAjB,EAA8B,EAA9B,CADmD,EAEnD6iB,KAFmD,CAAjC,CAAtB;AAIA,SAAOU,aAAa,CACfhc,GADE,CACE,CAAC,CAACqI,QAAD,EAAWiT,KAAX,CAAD,EAAoB/M,KAApB,KAA8B8M,cAAc,CAAChT,QAAD,EAAWiT,KAAX,EAAkBvjB,MAAlB,EAA0BwW,KAAK,IAAIgI,KAAK,CAAC1e,MAAN,GAAe,CAAlD,CAD9C,EAEFmF,IAFE,CAEG,IAFH,CAAP;AAGH;;AACD,AAAO,SAASif,UAAT,CAAoBC,eAApB,EAAqC;AACxC,MAAI9lB,MAAM,GAAG,EAAb;AACA,QAAM;AAAE0f,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBmG,eAA3B;AACA,QAAMC,SAAS,GAAGxjB,MAAM,CAAC8D,OAAP,CAAeqZ,MAAf,EAAuBjR,IAAvB,CAA4B8V,WAA5B,CAAlB;AACA,QAAMyB,SAAS,GAAGzjB,MAAM,CAAC8D,OAAP,CAAesZ,MAAf,EAAuBlR,IAAvB,CAA4B8V,WAA5B,CAAlB;AACA,QAAM0B,iBAAiB,GAAG,CAAC,GAAGD,SAAJ,EAAe,GAAGD,SAAlB,EAA6BtjB,MAA7B,CAAoC,CAACyjB,GAAD,EAAM,CAACjU,QAAD,CAAN,KAAqB2S,IAAI,CAACsB,GAAL,CAASjU,QAAQ,CAACxQ,MAAlB,EAA0BykB,GAA1B,CAAzD,EAAyF,eAAezkB,MAAxG,IAAkH,CAA5I;AACAzB,EAAAA,MAAM,IACD,OAAMT,KAAK,CAAC0B,IAAN,CAAW,eAAeU,MAAf,CAAsBskB,iBAAiB,GAAG,CAA1C,CAAX,CAAyD,EAAhE,GACI1mB,KAAK,CAAC0B,IAAN,CAAWiB,SAAX,CAAqB,OAAOP,MAAP,CAAc2iB,iBAAiB,GAAG,CAAlC,CAArB,CADJ,GAEI,IAFJ,GAGI/kB,KAAK,CAAC0B,IAAN,CAAWiB,SAAX,CAAqB,OAAOP,MAAP,CAAc2iB,iBAAiB,GAAG,CAAlC,CAArB,CAHJ,GAII,IAJJ,GAKI/kB,KAAK,CAAC0B,IAAN,CAAWiB,SAAX,CAAqB,SAASP,MAAT,CAAgB2iB,iBAAiB,GAAG,CAApC,CAArB,CALJ,GAMK,IAPT;AAQAtkB,EAAAA,MAAM,IAAK,GAAE2lB,WAAW,CAACI,SAAD,EAAYE,iBAAZ,CAA+B,IAAvD;;AACA,MAAI1jB,MAAM,CAACC,MAAP,CAAcmd,MAAd,EAAsBle,MAAtB,GAA+B,CAAnC,EAAsC;AAClCzB,IAAAA,MAAM,IAAK,OAAMT,KAAK,CAAC0B,IAAN,CAAW,8BAAX,CAA2C,IAA5D;AACAjB,IAAAA,MAAM,IAAK,GAAE2lB,WAAW,CAACK,SAAD,EAAYC,iBAAZ,CAA+B,IAAvD;AACH;;AACD,SAAQ,KAAIjmB,MAAO,IAAnB;AACH;;ACxED;;;;;;;;AAOA,AAAO,SAASmmB,oBAAT,GAAgC;AACnC,SAAO;AACHlZ,IAAAA,IAAI,EAAE,kCADH;;AAEHmZ,IAAAA,SAAS,CAAC/hB,IAAD,EAAOxB,EAAP,EAAW;AAChB,UAAIA,EAAE,CAAC2G,QAAH,CAAY7C,IAAI,CAACC,IAAL,CAAU,OAAV,EAAmB,UAAnB,CAAZ,CAAJ,EAAiD;AAC7C,eAAOvC,IAAI,GAAI,wCAAf;AACH;AACJ;;AANE,GAAP;AAQH;;ACUD,MAAM0B,GAAG,GAAGnF,OAAO,CAACmF,GAAR,EAAZ;AACA,MAAMsgB,MAAM,GAAG9mB,KAAK,CAAC0B,IAAN,CAAY,UAAZ,IAA0B,iBAAzC;AACA,MAAMqlB,cAAc,GAAG,EAAvB;AACA,IAAIR,eAAe,GAAG,IAAtB;AACA,IAAIS,OAAO,GAAGC,GAAG,CAACH,MAAD,CAAjB;AACA,IAAII,eAAe,GAAG,KAAtB;;AACA,SAASC,SAAT,GAAqB;AACjBjf,EAAAA,OAAO,CAACa,GAAR,CAAa;EACf/I,KAAK,CAAC0B,IAAN,CAAY,UAAZ,CAAuB;EACvB1B,KAAK,CAAC0B,IAAN,CAAW,UAAX,CAAuB;;;;;;;;;;;;;;;;;MAiBnB1B,KAAK,CAAC0B,IAAN,CAAW,WAAX,CAAwB;;KAnBd,CAqBVmB,IArBU,EAAZ;AAsBH;;AACD,SAASukB,oBAAT,GAAgC;AAC5B,SAAOL,cAAc,CAChB1c,GADE,CACE,CAAC,CAACnF,CAAD,EAAI/B,MAAJ,CAAD,KAAiB;AACtB,QAAIA,MAAM,KAAK,SAAf,EAA0B;AACtB,aAAOnD,KAAK,CAACK,KAAN,CAAY6E,CAAZ,CAAP;AACH;;AACD,QAAI/B,MAAM,KAAK,OAAf,EAAwB;AACpB,aAAOnD,KAAK,CAACqnB,MAAN,CAAaniB,CAAb,CAAP;AACH;;AACD,QAAI/B,MAAM,KAAK,MAAf,EAAuB;AACnB,aAAOnD,KAAK,CAACI,GAAN,CAAU8E,CAAV,CAAP;AACH;;AACD,WAAOA,CAAP;AACH,GAZM,EAaFmC,IAbE,CAaG,IAbH,CAAP;AAcH;;AACD,SAASigB,QAAT,CAAkB/jB,GAAlB,EAAuB;AACnB,MAAI,CAAC2jB,eAAL,EAAsB;AAClBF,IAAAA,OAAO,CAACO,cAAR,CAAuB;AAAEC,MAAAA,MAAM,EAAExnB,KAAK,CAAC2B,IAAN,CAAW,GAAX;AAAV,KAAvB;AACH;;AACDulB,EAAAA,eAAe,GAAG,IAAlB;AACAF,EAAAA,OAAO,GAAGC,GAAG,CAACjnB,KAAK,CAACI,GAAN,CAAUmD,GAAV,CAAD,CAAb;AACAyjB,EAAAA,OAAO,CAACS,IAAR;AACH;;AACD,SAASC,SAAT,CAAmBnkB,GAAnB,EAAwB;AACpByjB,EAAAA,OAAO,CAACW,IAAR,GAAeb,MAAM,GAAGvjB,GAAxB;AACH;;AACD,MAAMqkB,aAAN,SAA4Btf,KAA5B,CAAkC;AAC9Buf,EAAAA,WAAW,CAAC9a,OAAD,EAAU+a,IAAV,EAAgB;AACvB,UAAM/a,OAAN;AACA,SAAK+a,IAAL,GAAYA,IAAZ;AACH;;AAJ6B;;;AAOlC,MAAMC,+BAA+B,GAAG,CACpC3gB,IAAI,CAACC,IAAL,CAAU,OAAV,EAAmB,UAAnB,CADoC,EAEpCD,IAAI,CAACC,IAAL,CAAU,WAAV,EAAuB,UAAvB,CAFoC,EAGpC,UAHoC,EAIpC,YAJoC,EAKpC,WALoC,EAMpC,MANoC,EAOpC,OAPoC,EAQpC,kBARoC,CAAxC;;AAUA,SAAS2gB,aAAT,CAAuBzH,QAAvB,EAAiC;AAC7B,MAAI;AACA,UAAMrO,OAAO,GAAG5N,OAAO,CAACuD,OAAR,CAAgB0Y,QAAhB,EAA0B;AAAEzY,MAAAA,KAAK,EAAE,CAACtB,GAAD;AAAT,KAA1B,CAAhB;;AACA,QAAIiF,WAAE,CAAC+U,UAAH,CAActO,OAAd,CAAJ,EAA4B;AACxB,aAAOlP,MAAM,CAACiM,IAAP,CAAY3K,OAAO,CAAC4N,OAAD,CAAnB,EAA8BlN,MAA9B,CAAsCM,CAAD,IAAOA,CAAC,CAAC,CAAD,CAAD,KAAS,GAArD,CAAP;AACH;AACJ,GALD,CAMA,OAAOkC,GAAP,EAAY;AAEX;AACJ;AACD;;;;;;;;AAMA,SAASygB,oBAAT,CAA8BpY,GAA9B,EAAmCqY,UAAnC,EAA+C;AAC3C;AACA,MAAI9gB,IAAI,CAACiE,OAAL,CAAawE,GAAb,KAAqB,CAACsM,mBAAmB,CAACtM,GAAD,CAAnB,CAAyBuM,mBAAnD,EAAwE;AACpE,UAAM+L,QAAQ,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,EAAwBne,QAAxB,CAAiC5C,IAAI,CAACiE,OAAL,CAAawE,GAAb,CAAjC,CAAjB;AACA,WAAO;AACH+H,MAAAA,IAAI,EAAEuQ,QAAQ,GAAG,IAAH,GAAU,OADrB;AAEHtZ,MAAAA,GAAG,EAAEvK,OAAO,CAACuD,OAAR,CAAgBgI,GAAhB,EAAqB;AAAE/H,QAAAA,KAAK,EAAE,CAACtB,GAAD;AAAT,OAArB;AAFF,KAAP;AAIH;;AACD,QAAM,CAAC4hB,cAAD,EAAiBtY,WAAjB,IAAgCF,yBAAyB,CAACC,GAAD,EAAMrJ,GAAN,CAA/D;;AACA,MAAI,CAACsJ,WAAL,EAAkB;AACd,UAAM,IAAI8X,aAAJ,CAAmB,IAAG/X,GAAI,sDAA1B,EAAiFuY,cAAc,IAAIpoB,KAAK,CAACqoB,MAAN,CAAaD,cAAb,CAAnG,CAAN;AACH;;AACD,MAAItY,WAAW,CAACpC,IAAZ,KACCoC,WAAW,CAACpC,IAAZ,CAAiBjL,UAAjB,CAA4B,WAA5B,KAA4CqN,WAAW,CAACpC,IAAZ,CAAiBjL,UAAjB,CAA4B,aAA5B,CAD7C,CAAJ,EAC8F;AAC1F,UAAM,IAAI6F,KAAJ,CAAW,qGAAX,CAAN;AACH;;AACD,MAAIggB,eAAe,GAAGxY,WAAW,CAAC,gBAAD,CAAX,IAClBA,WAAW,CAACqO,MADM,IAElBrO,WAAW,CAAC,aAAD,CAFO,IAGlBA,WAAW,CAACsO,OAHhB,CAjB2C;AAsB3C;AACA;;AACA,MAAI,OAAOkK,eAAP,KAA2B,QAA/B,EAAyC;AACrCA,IAAAA,eAAe,GACXA,eAAe,CAACzY,GAAD,CAAf,IACIyY,eAAe,CAAC,YAAD,CADnB,IAEIA,eAAe,CAAC,SAAD,CAFnB,IAGIA,eAAe,CAAC,IAAD,CAHnB,IAIIA,eAAe,CAAC,GAAD,CALvB;AAMH,GA/B0C;;;AAiC3C,MAAI,CAACA,eAAD,IAAoBJ,UAAxB,EAAoC;AAChCI,IAAAA,eAAe,GAAGxY,WAAW,CAACuO,IAAZ,IAAoB,UAAtC;AACH;;AACD,MAAI,OAAOiK,eAAP,KAA2B,QAA/B,EAAyC;AACrC,UAAM,IAAIhgB,KAAJ,CAAW,IAAGuH,GAAI,gCAA+B7J,IAAI,CAACC,SAAL,CAAeqiB,eAAf,CAAgC,GAAjF,CAAN;AACH;;AACD,SAAO;AACH1Q,IAAAA,IAAI,EAAE,IADH;AAEH/I,IAAAA,GAAG,EAAEzH,IAAI,CAACC,IAAL,CAAU+gB,cAAV,EAA0B,IAA1B,EAAgCE,eAAhC;AAFF,GAAP;AAIH;AACD;;;;;;AAIA,SAASC,oBAAT,CAA8B1Y,GAA9B,EAAmC;AAC/B,SAAOA,GAAG,CAAC/M,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAP;AACH;AACD;;;;;;;;;;AAQA,SAAS0lB,oBAAT,CAA8B/hB,GAA9B,EAAmC;AAC/B,QAAMtD,MAAM,GAAGH,MAAM,CAACiM,IAAP,CAAYxI,GAAZ,EAAiBvD,MAAjB,CAAwB,CAACyV,GAAD,EAAMrV,EAAN,KAAa;AAChD,UAAMoV,GAAG,GAAGjS,GAAG,CAACnD,EAAD,CAAf;AACAqV,IAAAA,GAAG,CAAE,eAAcrV,EAAG,EAAnB,CAAH,GAA4B,GAAE0C,IAAI,CAACC,SAAL,CAAeyS,GAAG,KAAK,IAAR,GAAerX,OAAO,CAACoF,GAAR,CAAYnD,EAAZ,CAAf,GAAiCoV,GAAhD,CAAqD,EAAnF;AACA,WAAOC,GAAP;AACH,GAJc,EAIZ;AACC,4BAAwB3S,IAAI,CAACC,SAAL,CAAe5E,OAAO,CAACoF,GAAR,CAAYC,QAAZ,IAAwB,YAAvC,CADzB;AAEC,oBAAgB;AAFjB,GAJY,CAAf;AAQA,SAAOvD,MAAP;AACH;;AACD,AAAO,eAAeslB,OAAf,CAAuBC,cAAvB,EAAuC;AAAEC,EAAAA,oBAAF;AAAwB1M,EAAAA;AAAxB,CAAvC,EAA2E3b,MAA3E,EAAmF;AACtF,QAAM;AAAE0X,IAAAA,eAAF;AAAmB1Q,IAAAA,cAAc,EAAE;AAAEgQ,MAAAA,YAAF;AAAgBtV,MAAAA,IAAI,EAAE4mB,OAAtB;AAA+BvR,MAAAA,eAAe,EAAEwR,gBAAhD;AAAkEtR,MAAAA,KAAK,EAAEuR,YAAzE;AAAuF5Q,MAAAA,SAAvF;AAAkGzR,MAAAA,GAAlG;AAAuG+Q,MAAAA,MAAM,EAAEuR;AAA/G;AAAnC,MAA4KzoB,MAAlL;;AACA,QAAM0oB,iBAAiB,sBAAQD,iBAAiB,CAAC1Q,YAA1B,CAAvB;;AACA,OAAK,MAAMkI,QAAX,IAAuBwH,+BAAvB,EAAwD;AACpDiB,IAAAA,iBAAiB,CAACzI,QAAD,CAAjB,GAA8ByI,iBAAiB,CAACzI,QAAD,CAAjB,IAA+ByH,aAAa,CAACzH,QAAD,CAA5C,IAA0D,EAAxF;AACH,GALqF;;;AAOtF,MAAI,CAACvI,eAAD,IAAoB,CAAC3W,OAAO,CAAC4nB,QAAR,CAAiBC,GAAtC,IAA6C,CAACzd,WAAE,CAAC+U,UAAH,CAAcpZ,IAAI,CAACC,IAAL,CAAUb,GAAV,EAAe,cAAf,CAAd,CAAlD,EAAiG;AAC7F8gB,IAAAA,QAAQ,CAAC,sEAAD,CAAR;AACA;AACH;;AACD,QAAM6B,oBAAoB,GAAG,IAAI7c,GAAJ,CAAQoc,cAAc,CAC9C1jB,MADgC,CACxB6K,GAAD,IAAS,CAACgZ,gBAAgB,CAAC7e,QAAjB,CAA0B6F,GAAG,CAAC/L,SAA9B,CADe,EAEhCuG,GAFgC,CAE3BwF,GAAD,IAASA,GAAG,CAAC/L,SAFe,EAGhCuG,GAHgC,CAG3BvG,SAAD,IAAeglB,YAAY,CAAChlB,SAAD,CAAZ,IAA2BA,SAHd,EAIhCoL,IAJgC,EAAR,CAA7B;AAKA,QAAMka,kBAAkB,GAAG,EAA3B;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMva,SAAS,GAAG;AAAE/J,IAAAA,OAAO,EAAE;AAAX,GAAlB;AACA,QAAMukB,iBAAiB,GAAG,EAA1B;AACA;AACA,OAAK,MAAMvN,gBAAX,IAA+BoN,oBAA/B,EAAqD;AACjD,UAAMI,UAAU,GAAGhB,oBAAoB,CAACxM,gBAAD,CAAvC;;AACA,QAAIE,QAAQ,IAAIA,QAAQ,CAAClX,OAAT,CAAiBgX,gBAAjB,CAAhB,EAAoD;AAChDqN,MAAAA,kBAAkB,CAACG,UAAD,CAAlB,GAAiCtN,QAAQ,CAAClX,OAAT,CAAiBgX,gBAAjB,CAAjC;AACAjN,MAAAA,SAAS,CAAC/J,OAAV,CAAkBgX,gBAAlB,IAAuC,KAAIwN,UAAW,KAAtD;AACAxC,MAAAA,cAAc,CAACje,IAAf,CAAoB,CAACygB,UAAD,EAAa,SAAb,CAApB;AACA7B,MAAAA,SAAS,CAACN,oBAAoB,EAArB,CAAT;AACA;AACH;;AACD,QAAI;AACA,YAAM;AAAExP,QAAAA,IAAI,EAAE4R,UAAR;AAAoB3a,QAAAA,GAAG,EAAE4a;AAAzB,UAAuCxB,oBAAoB,CAAClM,gBAAD,EAAmB,IAAnB,CAAjE;;AACA,UAAIyN,UAAU,KAAK,IAAnB,EAAyB;AACrBJ,QAAAA,kBAAkB,CAACG,UAAD,CAAlB,GAAiCE,SAAjC;AACA3a,QAAAA,SAAS,CAAC/J,OAAV,CAAkBgX,gBAAlB,IAAuC,KAAIwN,UAAW,KAAtD;AACAvmB,QAAAA,MAAM,CAAC8D,OAAP,CAAegiB,YAAf,EACK9jB,MADL,CACY,CAAC,CAACgK,GAAD,EAAM0a,KAAN,CAAD,KAAkBA,KAAK,KAAK3N,gBADxC,EAEKvC,OAFL,CAEa,CAAC,CAACxK,GAAD,EAAM0a,KAAN,CAAD,KAAkB;AAC3B5a,UAAAA,SAAS,CAAC/J,OAAV,CAAkBiK,GAAlB,IAA0B,KAAIua,UAAW,KAAzC;AACH,SAJD;AAKAD,QAAAA,iBAAiB,CAACG,SAAD,CAAjB,GAA+Bf,cAAc,CAAC1jB,MAAf,CAAuB2kB,CAAD,IAAO5N,gBAAgB,KAAK4N,CAAC,CAAC7lB,SAApD,CAA/B;AACAijB,QAAAA,cAAc,CAACje,IAAf,CAAoB,CAACiT,gBAAD,EAAmB,SAAnB,CAApB;AACH,OAVD,MAWK,IAAIyN,UAAU,KAAK,OAAnB,EAA4B;AAC7BH,QAAAA,gBAAgB,CAACE,UAAD,CAAhB,GAA+BE,SAA/B;AACA1C,QAAAA,cAAc,CAACje,IAAf,CAAoB,CAACiT,gBAAD,EAAmB,OAAnB,CAApB;AACH;;AACD2L,MAAAA,SAAS,CAACN,oBAAoB,EAArB,CAAT;AACH,KAlBD,CAmBA,OAAO5f,GAAP,EAAY;AACRuf,MAAAA,cAAc,CAACje,IAAf,CAAoB,CAACiT,gBAAD,EAAmB,MAAnB,CAApB;AACA2L,MAAAA,SAAS,CAACN,oBAAoB,EAArB,CAAT;;;AAKAE,MAAAA,QAAQ,CAAC9f,GAAG,CAACuF,OAAJ,IAAevF,GAAhB,CAAR;;AACA,UAAIA,GAAG,CAACsgB,IAAR,EAAc;AACV;AACA9V,QAAAA,UAAU,CAAC,MAAM9J,OAAO,CAACa,GAAR,CAAYvB,GAAG,CAACsgB,IAAhB,CAAP,EAA8B,CAA9B,CAAV;AACH;;AACD,aAAO,KAAP;AACH;AACJ;;AACD,MAAI9kB,MAAM,CAACiM,IAAP,CAAYma,kBAAZ,EAAgClnB,MAAhC,KAA2C,CAA3C,IAAgDc,MAAM,CAACiM,IAAP,CAAYoa,gBAAZ,EAA8BnnB,MAA9B,KAAyC,CAA7F,EAAgG;AAC5FolB,IAAAA,QAAQ,CAAE,4BAAF,CAAR;AACApf,IAAAA,OAAO,CAACa,GAAR,CAAY/I,KAAK,CAACC,GAAN,CAAW,8GAA6GD,KAAK,CAAC2C,SAAN,CAAgB,sBAAhB,CAAwC,EAAhK,CAAZ;AACA,WAAO,KAAP;AACH;;AACD,MAAIinB,qBAAqB,GAAG,KAA5B;AACA,QAAMC,YAAY,GAAG;AACjBrd,IAAAA,KAAK,EAAE4c,kBADU;AAEjBU,IAAAA,QAAQ,EAAEjB,gBAFO;AAGjBkB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,iBAAiB,EAAE;AAArB,KAHM;AAIjBvS,IAAAA,OAAO,EAAE,CACLwS,mBAAmB,CAACzB,oBAAoB,CAAC/hB,GAAD,CAArB,CADd,EAELiX,2BAA2B,CAAC;AAAElX,MAAAA;AAAF,KAAD,CAFtB,EAGL,CAAC,CAACwR,eAAF,IACI0G,2BAA2B,CAAC;AACxBpH,MAAAA,YADwB;AAExBvO,MAAAA,GAAG,EAAG5C,GAAD,IAASuhB,SAAS,CAAC1nB,KAAK,CAACC,GAAN,CAAUkG,GAAV,CAAD;AAFC,KAAD,CAJ1B,EAQL+jB,iBAAiB,CAAC;AACdpjB,MAAAA,OAAO,EAAE9D,MAAM,CAAC8D,OAAP,CAAegiB,YAAf,EAA6Bze,GAA7B,CAAiC,CAAC,CAACkN,KAAD,EAAQ4S,GAAR,CAAD,MAAmB;AACzDC,QAAAA,IAAI,EAAE7S,KADmD;AAEzD8S,QAAAA,WAAW,EAAEF;AAF4C,OAAnB,CAAjC;AADK,KAAD,CARZ,EAcLG,uBAAuB,CAAC;AACpBC,MAAAA,UAAU,EAAE,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,SAA7B,EAAwC,MAAxC,EAAgDvlB,MAAhD,CAAuD0K,QAAvD,CADQ;AAEpB8a,MAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,EAAwB,OAAxB,CAFQ;AAGpB;AACAC,MAAAA,cAAc,EAAE,KAJI;AAKpB/S,MAAAA,MAAM,EAAEqR,iBAAiB,CAACrR;AALN,KAAD,CAdlB,EAqBLgT,gBAAgB,CAAC;AACbC,MAAAA,WAAW,EAAE,IADA;AAEbC,MAAAA,MAAM,EAAE,IAFK;AAGbC,MAAAA,OAAO,EAAE,KAHI;AAIbxS,MAAAA,YAAY,EAAE;AAJD,KAAD,CArBX,EA2BLyS,oBAAoB,CAAC;AACjBN,MAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,MAAR,CADK;AAEjBnS,MAAAA,YAAY,EAAE2Q;AAFG,KAAD,CA3Bf,EA+BLlJ,2BAA2B,CAAEtD,IAAD,IAAW+J,eAAe,GAAG/J,IAA9B,CA/BtB,EAgCLoK,oBAAoB,EAhCf,EAiCL,GAAGmC,iBAAiB,CAACtR,OAjChB,EAkCPzS,MAlCO,CAkCAwF,OAlCA,CAJQ;;AAuCjBugB,IAAAA,MAAM,CAACC,OAAD,EAAU/hB,IAAV,EAAgB;AAClB,UAAI+hB,OAAO,CAAClmB,IAAR,KAAiB,qBAArB,EAA4C;AACxC,YAAI,CAAC8kB,qBAAL,EAA4B;AACxBA,UAAAA,qBAAqB,GAAG,IAAxB;AACAtC,UAAAA,QAAQ,CAAE,gDAA+C0D,OAAO,CAACpN,QAAS,IAAlE,CAAR;AACH;;AACD;AACH;;AACD,UAAIoN,OAAO,CAAClmB,IAAR,KAAiB,mBAArB,EAA0C;AACtCwiB,QAAAA,QAAQ,CAAE,IAAG0D,OAAO,CAACxmB,MAAO,qBAAoBwmB,OAAO,CAACpN,QAAS,+BAAzD,CAAR;;AACA,YAAIqN,aAAa,CAACD,OAAO,CAACxmB,MAAT,CAAjB,EAAmC;AAC/B0D,UAAAA,OAAO,CAACa,GAAR,CAAY/I,KAAK,CAACC,GAAN,CAAW,MAAK+qB,OAAO,CAACxmB,MAAO,gEAA/B,CAAZ;AACA0D,UAAAA,OAAO,CAACa,GAAR,CAAY/I,KAAK,CAACC,GAAN,CAAW,wHAAX,CAAZ;AACH,SAHD,MAIK;AACDiI,UAAAA,OAAO,CAACa,GAAR,CAAY/I,KAAK,CAACC,GAAN,CAAW,qEAAX,CAAZ;AACH;;AACD;AACH;;AACDgJ,MAAAA,IAAI,CAAC+hB,OAAD,CAAJ;AACH;;AA3DgB,GAArB;AA6DA,QAAME,aAAa,GAAG;AAClBjM,IAAAA,GAAG,EAAE2J,OADa;AAElBhlB,IAAAA,MAAM,EAAE,KAFU;AAGlBunB,IAAAA,SAAS,EAAEjT,SAHO;AAIlBkT,IAAAA,OAAO,EAAE,OAJS;AAKlBC,IAAAA,cAAc,EAAE;AALE,GAAtB;;AAOA,MAAIroB,MAAM,CAACiM,IAAP,CAAYma,kBAAZ,EAAgClnB,MAAhC,GAAyC,CAA7C,EAAgD;AAC5C,QAAI;AACA,YAAMopB,aAAa,GAAG,MAAM9T,aAAM,CAACqS,YAAD,CAAlC;AACAnC,MAAAA,SAAS,CAACN,oBAAoB,EAArB,CAAT;AACA,YAAMkE,aAAa,CAAC/pB,KAAd,CAAoB2pB,aAApB,CAAN;AACH,KAJD,CAKA,OAAO1jB,GAAP,EAAY;AACR,YAAM;AAAEqH,QAAAA;AAAF,UAAUrH,GAAhB;;AACA,UAAI,CAACqH,GAAD,IAAQ,CAACA,GAAG,CAACgR,IAAjB,EAAuB;AACnB,cAAMrY,GAAN;AACH,OAJO;AAMR;AACA;;;AACA,YAAM+jB,eAAe,GAAGnkB,IAAI,CAACiE,OAAL,CAAawD,GAAG,CAACgR,IAAjB,CAAxB;AACA,YAAM2L,UAAU,GAAGnb,0BAA0B,CAACkb,eAAD,CAA7C;;AACA,UAAI,CAACC,UAAL,EAAiB;AACb,cAAMhkB,GAAN;AACH,OAZO;;;AAcR,YAAM8Y,QAAQ,GAAGzR,GAAG,CAACgR,IAAJ,CAAS/c,OAAT,CAAiB0D,GAAG,GAAGY,IAAI,CAACgC,GAA5B,EAAiC,EAAjC,EAAqCtG,OAArC,CAA6C,KAA7C,EAAoD,GAApD,CAAjB;AACAwkB,MAAAA,QAAQ,CAAE,GAAEtnB,KAAK,CAAC0B,IAAN,CAAW,UAAX,CAAuB,qBAAoB4e,QAAS,KAAIkL,UAAW,EAAvE,CAAR;AACA;AACH;AACJ;;AACD,QAAM5c,aAAa,CAACxH,IAAI,CAACC,IAAL,CAAUuhB,OAAV,EAAmB,iBAAnB,CAAD,EAAwC9Z,SAAxC,CAAnB;AACA9L,EAAAA,MAAM,CAAC8D,OAAP,CAAeuiB,gBAAf,EAAiC7P,OAAjC,CAAyC,CAAC,CAACiS,SAAD,EAAYC,QAAZ,CAAD,KAA2B;AAChE7iB,IAAAA,MAAM,CAACD,IAAP,CAAYxB,IAAI,CAACoE,OAAL,CAAc,GAAEod,OAAQ,IAAG6C,SAAU,EAArC,CAAZ;AACAhgB,IAAAA,WAAE,CAACkgB,YAAH,CAAgBD,QAAhB,EAA2B,GAAE9C,OAAQ,IAAG6C,SAAU,EAAlD;AACH,GAHD;AAIA,SAAO,IAAP;AACH;AACD,AAAO,eAAeG,GAAf,CAAmBloB,IAAnB,EAAyB;AAC5B;AACA,QAAMiW,QAAQ,GAAGjR,KAAK,CAAChF,IAAD,EAAO;AAAEmoB,IAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,SAAR,EAAmB,iBAAnB;AAAT,GAAP,CAAtB;;AACA,MAAIlS,QAAQ,CAACmS,IAAb,EAAmB;AACf3E,IAAAA,SAAS;AACT9lB,IAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH;;AACD,MAAIuW,QAAQ,CAACoS,OAAb,EAAsB;AAClB7jB,IAAAA,OAAO,CAACa,GAAR,CAAYzE,OAAO,CAAC,iBAAD,CAAP,CAA2BynB,OAAvC;AACA1qB,IAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH;;AACD,MAAIuW,QAAQ,CAACqS,MAAb,EAAqB;AACjB9jB,IAAAA,OAAO,CAACa,GAAR,CAAa,GAAE/I,KAAK,CAACqnB,MAAN,CAAa,GAAb,CAAkB,wBAAjC;AACA,UAAM7J,UAAU,EAAhB;AACH;;AACD,MAAI7D,QAAQ,CAAC,GAAD,CAAR,CAAczX,MAAd,GAAuB,CAA3B,EAA8B;AAC1BgG,IAAAA,OAAO,CAACa,GAAR,CAAa,8BAAb;AACA1H,IAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH,GAlB2B;;;AAoB5B,MAAIiX,WAAJ;;AACA,MAAI;AACAA,IAAAA,WAAW,GAAG/V,OAAO,CAAC8C,IAAI,CAACC,IAAL,CAAUb,GAAV,EAAe,cAAf,CAAD,CAArB;AACH,GAFD,CAGA,OAAOgB,GAAP,EAAY;AACRU,IAAAA,OAAO,CAACa,GAAR,CAAY/I,KAAK,CAACI,GAAN,CAAU,sDAAV,CAAZ;AACAiB,IAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH,GA3B2B;;;AA6B5B,QAAM9C,MAAM,GAAG8Z,qBAAqB,CAACT,QAAD,EAAWU,WAAX,CAApC,CA7B4B;;AA+B5B,MAAI4B,QAAQ,GAAG,MAAMxN,YAAY,CAACjI,GAAD,CAAjC;AACA,MAAI4W,WAAW,GAAG,IAAlB;;AACA,MAAIzD,QAAQ,CAAC,GAAD,CAAR,CAAc,CAAd,MAAqB,OAAzB,EAAkC;AAC9B,UAAMsS,OAAY,CAAC;AACfzlB,MAAAA,GADe;AAEflG,MAAAA;AAFe,KAAD,CAAlB;AAIA;AACH;;AACD,MAAIqZ,QAAQ,CAAC,GAAD,CAAR,CAAc,CAAd,MAAqB,KAAzB,EAAgC;AAC5B,UAAMuS,SAAU,CAAC;AACb1lB,MAAAA,GADa;AAEblG,MAAAA;AAFa,KAAD,CAAhB;AAIA;AACH;;AACD,QAAM;AAAEuK,IAAAA,OAAF;AAAW9D,IAAAA,OAAX;AAAoBO,IAAAA,cAAc,EAAE;AAAEtF,MAAAA;AAAF,KAApC;AAA8CoV,IAAAA,gBAA9C;AAAgEY,IAAAA;AAAhE,MAAqF1X,MAA3F;AACA,QAAMqoB,oBAAoB,GAAG,CAAC,CAACtO,WAAW,CAACxM,YAAd,IACzB,CAAC,CAACxM,OAAO,CAACoF,GAAR,CAAY0lB,YADW,IAEzB1gB,WAAE,CAAC+U,UAAH,CAAcpZ,IAAI,CAACC,IAAL,CAAUb,GAAV,EAAe,iBAAf,CAAd,CAFyB,IAGzBiF,WAAE,CAAC+U,UAAH,CAAcpZ,IAAI,CAACC,IAAL,CAAUb,GAAV,EAAe,cAAf,CAAd,CAHJ;AAIA,QAAMkiB,cAAc,GAAG,EAAvB;;AACA,MAAItR,gBAAJ,EAAsB;AAClBsR,IAAAA,cAAc,CAAC5f,IAAf,CAAoB,GAAG2a,WAAW,CAACrM,gBAAD,EAAmB5Q,GAAnB,CAAlC;AACH;;AACD,MAAIwR,eAAJ,EAAqB;AACjB0Q,IAAAA,cAAc,CAAC5f,IAAf,CAAoB,GAAG2a,WAAW,CAACzgB,MAAM,CAACiM,IAAP,CAAY+I,eAAZ,CAAD,EAA+BxR,GAA/B,CAAlC;AACH;;AACD;AACIkiB,IAAAA,cAAc,CAAC5f,IAAf,CAAoB,IAAI,MAAMmb,WAAW,CAACzd,GAAD,EAAMlG,MAAN,CAArB,CAApB;AACH;;AACD,MAAIooB,cAAc,CAACxmB,MAAf,KAA0B,CAA9B,EAAiC;AAC7BolB,IAAAA,QAAQ,CAAC,qBAAD,CAAR;AACA;AACH;;AACDN,EAAAA,OAAO,CAACtiB,KAAR;AACA,QAAM0nB,SAAS,GAAG3a,IAAI,CAACC,GAAL,EAAlB;;AACA,MAAIsG,eAAe,IAAIhV,MAAM,CAACiM,IAAP,CAAY+I,eAAZ,EAA6B9V,MAA7B,GAAsC,CAA7D,EAAgE;AAC5Dkb,IAAAA,WAAW,GAAG,MAAMJ,2BAA2B,CAACf,QAAD,EAAW5B,WAAX,EAAwB/Z,MAAxB,CAA3B,CAA2DoJ,KAA3D,CAAkElC,GAAD,IAAS;AAC1F8f,MAAAA,QAAQ,CAAC9f,GAAG,CAACuF,OAAJ,IAAevF,GAAhB,CAAR;AACAnG,MAAAA,OAAO,CAAC+B,IAAR,CAAa,CAAb;AACH,KAHmB,CAApB;AAIH;;AACDuF,EAAAA,MAAM,CAACC,IAAP,CAAY5G,IAAZ;AACA,QAAM6G,MAAM,CAAC7G,IAAD,CAAZ;AACA,QAAM8c,WAAW,GAAG,MAAM2J,OAAO,CAACC,cAAD,EAAiB;AAAEC,IAAAA,oBAAF;AAAwB1M,IAAAA,QAAQ,EAAEmB;AAAlC,GAAjB,EAAkE9c,MAAlE,CAAP,CAAiFoJ,KAAjF,CAAwFlC,GAAD,IAAS;AACtH,QAAIA,GAAG,CAACqH,GAAR,EAAa;AACT3G,MAAAA,OAAO,CAACa,GAAR,CAAY,OAAO/I,KAAK,CAACI,GAAN,CAAUsB,IAAV,CAAgB,KAAI8F,GAAG,CAACqH,GAAJ,CAAQgR,IAAK,EAAjC,CAAnB;AACH;;AACD,QAAIrY,GAAG,CAACrB,GAAR,EAAa;AACT+B,MAAAA,OAAO,CAACa,GAAR,CAAY/I,KAAK,CAACC,GAAN,CAAW,MAAKuH,GAAG,CAACrB,GAAI,EAAxB,CAAZ;AACH;;AACD,UAAMqB,GAAN;AACH,GARyB,CAA1B;;AASA,MAAIsX,WAAJ,EAAiB;AACbkI,IAAAA,OAAO,CAACqF,OAAR,CAAgBrsB,KAAK,CAAC0B,IAAN,CAAY,UAAZ,IACX,oBADW,GAEZ1B,KAAK,CAACC,GAAN,CAAW,KAAI,CAAC,CAACwR,IAAI,CAACC,GAAL,KAAa0a,SAAd,IAA2B,IAA5B,EAAkCE,OAAlC,CAA0C,CAA1C,CAA6C,IAA5D,CAFJ;;AAGA,QAAI,CAAC,CAAC/F,eAAN,EAAuB;AACnBre,MAAAA,OAAO,CAACa,GAAR,CAAYud,UAAU,CAACC,eAAD,CAAtB;AACH;AACJ;;AACD,MAAInJ,WAAJ,EAAiB;AACb,UAAMxO,aAAa,CAACxH,IAAI,CAACC,IAAL,CAAUb,GAAV,EAAe,oBAAf,CAAD,EAAuC4W,WAAvC,CAAnB;AACH,GA/F2B;AAiG5B;;;AACA,MAAI8J,eAAJ,EAAqB;AACjBlV,IAAAA,UAAU,CAAC,MAAM;AACbgV,MAAAA,OAAO,CAAC/d,IAAR,CAAajJ,KAAK,CAAE,yBAAF,CAAlB;AACAqB,MAAAA,OAAO,CAACkrB,QAAR,GAAmB,CAAnB;AACH,KAHS,EAGP,EAHO,CAAV;AAIH;AACJ;;;;;"}